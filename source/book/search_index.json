{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["gitbook","介绍","实现。","本系列页面是把博客中的一些文章按照类别聚合在一起，更方便读者对同一类别的文章集中阅读。","采用"],"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":["(){}","2.","5种java单例模式的实现、原理和演化","=","==","blog","class","easysingleton{","enum","final","getinstance()","getinstance(){","if(inst","instanc","instance;","jark'","java","java》上所推荐的。","jdk","new","null){","privat","public","return","singleton","singleton();","singleton(){}","singletonhold","singletonholder.instance;","singleton{","static","synchron","us","{","}","《effect","不好的写法二：虽然在多线程环境中能工作，但效率不高","不好的解法一：只适合于单线程环境","之外没有办法访问它，因此它是懒汉式的；同时读取实例的时候不会进行同步，没有性能缺陷；也不依赖","使用枚举","关键字，解决了多实例的问题，但是并不够高效。","剑指offer","加上了","参考资料","如何正确地写出单例模式","实现单例模式","方法的时候，就会创建多个实例。","是私有的，除了","版本。","这种写法仍然使用jvm本身机制保证了线程安全问题；由于","这种写法使用了懒加载（惰性加载）模式，当需要使用到的时候在进行判断，然后创建实例。","这种写法存在的问题是：当有多个线程并发调用","静态内部类"],"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":["#includ","&&","((end","(int","(middl","(number","+","//","0","0,","0;","1","1)","1))","1,","1;","2,","3,","3.","3}，那么对应的输出是重复的数字2或者3。","4,","5,","6,","7}，那么对应的输出是重复的数字2或者3。","=","==",">",">>","array","boolean","break;","check","class","count","countrange(const","countrange(numbers,","duplicate(int[]","duplication)","end","end)","end);","false;","for(int","getduplication(const","github","if(count","if(end","if(numb","int","int*","int[]","length","length)","length,","length:","middl","middle);","middle;","n","null","nullptr","nullptr)","numbers,","numbers:","numbers[i]","o(1)o(1)o(1)。","o(n)o(n)o(n)。由于是直接对原数组进行操作，空间复杂度为","public","return","solut","start","start)","start,","start;","valid","whether","{","{2,","||","}","一个整数数组","个位置上去，如果它和第","个位置上的元素值相等，那么可以判断这个元素是重复的。","作者源代码","到","剑指offer","参数:","在一个长度为n+1的数组里的所有数字都在1到n的范围内，所以数组中至少有一个数字是重复的。请找出数组中任意一个重复的数字，但不能修改输入的数组。例如，如果输入长度为8的数组{2,","在一个长度为n的数组里的所有数字都在","复杂度分析","总结","把值为","数组中重复的数字","数组的长度","时间复杂度为","正数","牛客网","的元素放到第","的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。例如，如果输入长度为7的数组","相关链接","解法1[c++]：数数判定","解法1[java]：动态重排序加判断","解法1只适合对数字型问题进行查找重复。解法2和解法3还可以用于对象的查找重复。","解法2[java]：排序然后判断","解法3[java]：使用hash数据结构","负数","输入无效，或者数组中没有重复的数字","输入有效，并且数组中存在重复的数字，返回值为重复的数字","返回值:","题目","（1）找出数组中重复的数字","（2）不修改数组找出重复的数字"],"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":["(matrix","(row","(target","//","0","0)","0,","0;","1;","4.",";","=","==",">","[][]","array)","boolean","class","column","false;","find(int","for(int","github","int","int[][]","matrix)","matrix.length","matrix[0].length","matrix[row][column])","null","public","return","row","row++;","solut","target,","true;","{","||","}","二维数组中的查找","从右上角开始","从左到右从上到下遍历数组，这是最慢的方法。","从每一行开始，对每一行进行二分查找。","作者源代码","剑指offer","在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。","如果此题修改为【判断该数组中是否存在该整数，如果存在，统计该整数出现的次数。】该怎么做？","把二维数组看作一个矩阵，选择矩阵右上角或者左下角的元素开始比较。逐步缩小比较范围。","拓展","牛客网","相关链接","解法1：利用矩阵的特点","解法2：","解法3：时间复杂度为o(n2)o(n^2)o(n​2​​)","题目："],"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":["%20，那么就会导致这个空格之后字符需要整体向后移动，如果采用这种方式，那么时间复杂度会变成","&&","'","'%');","')","'0');","'2');","(c","(int",");",",","//在完成最后一个空格的替换之后，p1等于p2","0","0;","1;","5.","=","==",">","c","c);","char","class","doc","happy.”，则输出","int","java","o(n2)o(n^2)o(n​2​​)。","p1","p1)","p2","public","replacespace(stringbuff","return","solut","str)","str.charat(p1","str.length()","str.setcharat(p2","str.tostring();","string","stringbuff","{","}","“we","“we%20are%20happy.”。","从后向前扫描替换的话，先扫描一遍字符串，根据空格的数量在字符串的末尾先补充足够的空格，每遇到一个空格，就在末尾补充两个空格，这样扫描一遍下来，替换之后的字符串的总长度就会确定下来。","例如输入","剑指offer","如果从前向后扫描空格然后把空格替换成","替换空格","相关链接","解法1[java]：从后向前扫描并替换空格","这个问题要求贴近底层的思考方式，直接对字符进行操作。","题目","题目：请实现一个函数，把字符串中的每个空格替换成\"%20\"。"],"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":["!=","(!stack.isempty())","(head","(listnod","//","1);","6.","=","arraylist","arraylist<>();","class","head","head.next","head.next;","import","int","java.util.arraylist;","java.util.stack;","listnod","listnode(","listnode(int","listnode)","listnode.next","listnode.next;","listnode;","new","next","null)","null;","printlistfromtailtohead(listnod","public","ret","ret.add(head.val);","ret.add(listnode.val);","ret.add(stack.pop());","ret.addall(printlistfromtailtohead(listnode.next));","ret;","return","solut","stack","stack.add(listnode.val);","stack<>();","temp","temp;","this.val","val)","val;","{","}","从尾到头打印链表","剑指offer","头插法构建逆序链表","头插法的关键部分","构建","示意图如下：","解答1[java]：使用栈","解答2[java]：使用头插法重建链表","解答3[java]：递归","输入一个链表，按链表值从尾到头的顺序返回一个arraylist。","递归算法有可能导致函数调用栈溢出。","题目"],"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":["(int","(leftofpr","+","//","0;","1);","1,","2,","3,","4,","5,","6,","6}，则重建出二叉树并输出它的头结点。","7,","7.","8,","8}","=","==",">","class","hashmap","hashmap<>();","import","in)","indexforinord","indexforinorders.get(root.val);","int","int[]","java.util.hashmap;","left;","leftofin","leftofin);","leftofin;","leftofpr","lefttrees","lefttreesize,","new","null;","posofroot","pre,","pre[prel]存的是根节点的值","privat","public","reconstructbinarycore(pre,","reconstructbinarytree(int[]","return","right;","rightofpr","rightofpre)","rightofpre)，后来发现不行，因为","rightofpre,","rightofpre。","root","root.left","root.right","root;","solut","treenod","treenode(int","treenode(pre[leftofpre]);","val","val;","x)","x;","{","{1,2,","{4,","}","不是线性变化的，有可能不会出现两者相等的情况。例如，如果一颗只有左子树没有右子树的二叉树，第一次递归的时候在重建右子树的时候就会导致","修改为","剑指offer","另外一道类似的题目：[编程题]二叉树遍历","和","和中序遍历序列","大于","曾经想把这里：","牛客网","缓存中序遍历数组每个值对应的索引","获取根节点在中序遍历序列中的位置","解答1[java]：递归","重建二叉树","题目","题目：输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列"],"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":["!=","(node.left","(parent.left","(pnode.next","(pnode.right","//","8.","=","==","class","getnext(treelinknod","int","left","next","next指向双亲结点","node","node.left;","node;","null)","null;","parent","parent;","pnode","pnode)","pnode.next;","pnode.right;","public","return","right","solut","this.val","treelinknod","treelinknode(int","val)","val;","{","}","①如果一个节点的右子树不为空，那么在中序遍历的下一个节点就是其【右子树的最左节点】。","②如果一个节点的右子树为空，那么在中序遍历的下一个节点就是其【最近的一个祖先节点，这个祖先节点的左子树包含该节点】。","主要分为两种情况：","二叉树的下一个节点","剑指offer","给定一棵二叉树和其中的一个结点，如何找出中序遍历顺序的下一个结点？树中的结点除了有两个分别指向左右子结点的指针以外，还有一个指向父结点的指针。","解答1[java]：","题目"],"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":["(!in.isempty())","(out.isempty())","9.","=","class","empty\");","import","in.push(node);","int","in，如果","java.util.stack;","new","node)","out","out.pop();","out.push(in.pop());","pop","pop()","pop。","public","push","push(int","queue","return","solut","stack","stack();","system.out.println(\"queu","void","{","}","①如果","②如果","不为空，把","不为空，那么直接","中。","中的所有元素","为空。如果","为空，检查","也为空，说明整个","到","剑指offer","思路","用两个栈实现队列","用两个栈来实现一个队列，完成队列的push和pop操作。","的时候，","的时候，直接","解答1[java]：","队列中的元素为int类型。","题目"],"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":["(n","1","1)+f(n","1)f(n−1)，","10.","12×1","2","2),n>2f(n)=f(n−1)+f(n−2),n>2。","2)f(n−2)，","2×12","2×62","2×72","2×82","2×n2","62×6","72×7","82×8","\\time","class","f(n−1)f(n","f(n−2)f(n","fibonacci(int","int","jumpfloor(int","n","n)","n2×n","n>2n>2n>2","o(1)o(1)o(1)。","o(n)o(n)o(n)。","o(n)o(n)o(n)，空间复杂度为","public","rectcover(int","solut","{","①最左边竖着放，右边变成","①第一下跳一级，这个时候剩下的跳法就是","②最左边横着放，要放两个，右边变成","②第一下跳两级，这个时候剩下的跳法就是","一只青蛙一次可以跳上","个","从","优点：打出来的表可复用。缺点：空间复杂度为","剑指offer","参考资料","变态跳台阶问题","对斐波那契问题分析的非常好的一篇文章：计算斐波纳契数，分析算法复杂度","开始，所以跳法可以分为两类","我们可以用","所以，f(n)=f(n−1)+f(n−2),n>2f(n)=f(n","把每一步的结果计算出来，最后直接根据序号返回对应值。","斐波那契数列","斐波那契数列算法时间复杂度","时间复杂度为","本篇文章的几个题目都可以看做是斐波那契问题。","求斐波那契数列的第","注意：每一类跳法的总数是第一下的跳法乘以剩下的跳法，不是相加。","的大矩形，总共有多少种方法？","的小矩形无重叠地覆盖一个","的小矩形横着或者竖着去覆盖更大的矩形。请问用","的问题。","矩形覆盖问题","级。求该青蛙跳上一个","级台阶，也可以跳上","级的台阶总共有多少种跳法。","解法1[java]：","解法2[java]：打表","解答1[java]：","跳台阶问题","这也看作一个斐波那契问题。","项","题目","（2行8列）的矩形，"],"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":["&&","(array.length","(array[index1]","(array[indexmid]","(index1","(index2","(int","+","/","0)","0;","1)","11.","1;","2;","=","==",">=","array)","array.length","array[0];","array[index1])","array[index2])","array[indexmid]","break;","class","index1","index2","index2)","index2;","indexmid","indexmid;","int","min","minnumberinrotatearray(int[]","minsequentialsearch(array);","o(logn)o(logn)o(logn)。","o(n/2)o(n/2)o(n/2)","public","return","solut","{","}","剑指offer","思路","旋转之后，从左向右对比两个相邻的数，总会找到一组数，第一个数大于第二个数，那么第二个数就是最小值。因为第二个数往后的所有数就是旋转操作移到最后的一系列数。","旋转数组的最小数字","时间复杂度","时间复杂度为对数级别","解答1[java]：","解答2[java]：时间复杂度"],"jian-zhi-offer/20190304 - 剑指Offer 12. 矩阵中的路径.html":["12.","剑指offer","矩阵中的路径"],"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":["%","&&","(!s.empty())","(int","(row","(threshold","*","+=","//","/=","0","0)","0,","0;","0}};","1,","10;","13.","1},","=","boolean[]","boolean[row","class","cols)","cols];","column","columns)","count","count++;","cur","import","int","int[][]","java.util.stack;","movingcount(int","new","num","public","return","row","rows,","s","s.add(0);","s.pop();","solut","stack<>();","sum","sum;","threshold,","true;","visit","visited[0]","x","xoy","y","{","{1,","{{0,","}","一个格子的坐标可以根据线性顺序和列数算出","代码","使用一个布尔类型的数组标记所有格子是都已经被访问过了。","剑指offer","参考资料","回溯的思想。","机器人的运动范围","机器人的运动范围__牛客网","机器人的运动范围。","核心思想","解答1[java]：递归算法","解答2[java]：非递归算法"],"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":["*/","/**","0;","27.","=","==","class","if(root","int","left","mirror(root.left);","mirror(root.right);","mirror(treenod","null){","null;","null，就交换它的左右子节点，然后对其左右子树进行镜像化。","public","return;","right","root)","root.left","root.left;","root.right","root.right;","solut","temp","temp;","this.val","treenod","treenode(int","val","val)","val;","void","{","}","二叉树的镜像","二叉树的镜像。","代码","剑指offer","核心思想","解答1[java]：","递归的方式，如果一个节点不等于"],"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":["!=","&&","(!q.isempty())","(t1","(t1.val","*","*/","/**","101.","27.","28.","=","==","binari","boolean","class","continue;","definit","false;","int","ismirror(root,","ismirror(t1.left,","ismirror(t1.right,","ismirror(treenod","issymmetric(treenod","leetcod","left;","linkedlist<>();","new","node.","null","null)","o(n)o(n)o(n)","o(n)o(n)o(n)。","public","q","q.add(root);","q.add(t1.left);","q.add(t1.right);","q.add(t2.left);","q.add(t2.right);","q.poll();","queue","return","right;","root","root)","root);","solut","symmetr","t1","t1,","t2","t2)","t2.left)","t2.right);","t2.val)","tree","treenod","treenode(int","true;","val","val;","x)","x;","{","||","}","代码","使用递归的方式，首先，一次输入两个节点，然后对比两个节点的值，递归判断第一个节点的左子树节点和第二个节点的右子树节点是否相同，递归判断第一个节点的右子树节点和第二个节点的左子树节点是否相同。递归开始的时候，函数的两个实参都填","使用队列作为辅助。每次都从队列中弹出来两个对象，比较他们的值，如果相同，把他们的子节点按照以下顺序存入队列中：①第一个节点的左节点②第二个节点的右节点③第一个节点的右节点④第二个节点的左节点。","判断一个二叉树是否是镜像二叉树。","剑指offer","参考","复杂度分析","对称的二叉树","时间复杂度","最坏情况下，树退化成一个单链表，递归空间复杂度变成","核心思想","空间复杂度","节点即可。","解答1[java]：","解答2[java]：","镜像二叉树和这道题很像。","队列的前两个元素都存成根节点。"],"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":["&","(int","(matrix.length","(r1",")","++i，相当于换成下一种走法。第一圈使用数组行数和列数来判定是否越界，第二圈就要靠","0)","0,","0;","0};","1,","1;","1};","29.","54.",";","=","==",">","an","ans.add(matrix[r2][c]);","ans.add(matrix[r][c1]);","ans;","arraylist();","boolean[][]","boolean[r][c];","c","c1","c1++;","c1;","c2","class","dierectioncount","directionofcolumn","directionofcolumn[i]","directionofrow","directionofrow，一个directionofcolumn，这样，directionofrow[i]","import","int","int[]","java.util.arraylist;","java.util.list;","leetcod","list","matrix","matrix)","matrix.length","matrix.length,","matrix[0].length","matrix[0].length;","new","public","r","r1","r1++;","r1;","r2","r2;","return","seen","solut","spiral","spiralorder(int[][]","{","{0,","{1,","}","从外层向内层，一圈一圈地遍历。","代码","剑指offer","和","数组来判断。","核心思想","解答1[java]：","解答2[java]：","这个才是真的全自动顺时针打印。设计了两个数组，一个","这么一组数就表示下一步该怎么走，如果越界了，那么","顺时针打印矩阵"],"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":["(newnum","(this.stackmin.isempty())","*/","/**","30.","=","arraydeque<>();","class","data","dequ","here.","import","initi","java.util.arraydeque;","java.util.deque;","min","minstack","minstack()","new","newnum)","privat","public","push(int","stackdata;","stackmin;","structur","this.stackdata","this.stackmin","this.stackmin.push(newnum);","void","{","}","代码","使用两个栈，一个数据栈，一个最小值栈。push","函数的栈","剑指offer","包含","同样使用两个栈，不过压入逻辑相比解答1修改了一下。当要入栈的数字小于当前最小值的时候，把入栈的数字同时压入数据栈和最小值栈。当要入栈的数字大于等于当前最小值的时候，把当前最小值取出来再压入最小值栈一次，相当于当前的最小值是冗余的，但是冗余自有冗余的用处。","带取最小值功能的栈。","弹出元素的时候，不需要再进行检查，弹出元素的同时，也把最小值栈的元素弹出，因为最小值栈的元素是冗余的，就是为了一一对应，不用再检查。","核心思想","核心思路","的时候，如果小于等于当前最小值，同时压入两个栈，然后每次弹出的时候，数据栈弹出的数和最小值栈的栈顶作比较，如果相同，那么把最小值也弹出。","解答1：","解答2[java]："],"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":["!=","(!queue.isempty())","(cur","(root","*/","+","++;","/*","0,","0;","0;//记录本层已经遍历的节点个数","1","1;","39.",":","=","==",">","?","[剑指offer]","binarytreenod","class","cur","cur,","current","deep","deep;","end","end){","if(node.left","if(node.right","if(root","if(start","import","int","java.util.linkedlist;","java.util.queue;","last","last;","left","leftdepth","level","linkedlist","linkedlist();","math.max(maxdepth(root.left),","maxdepth(root.right))+1;","maxdepth(treenod","new","node","null)","null){","null;","public","queue","queue.offer(node.left);","queue.offer(node.right);","queue.offer(root);","queue.poll();","queue.size();","queue.size();//当遍历完当前层以后，队列里元素全是下一层的元素，队列的长度是这一层的节点的个数","return","right","rightdepth","root)","solut","start","this.val","treedepth(root.left);","treedepth(root.right);","treedepth(treenod","treedepth2(binarytreenod","treenod","treenode(int","val","val)","val;","while(!queue.isempty()){","{","}","二叉树的深度","代码","剑指offer","剑指offer:二叉树的深度（递归&&非递归）（java）","参考资料","层次遍历。","层次遍历的另一种写法：双循环","核心思想","解答1[java]：递归","解答2[java]：非递归","递归的另一种写法"],"leetcode/20190308 - LeetCode 1. Two Sum.html":["(int","0;","1.","=","class","hashmap","hashmap();","import","int","int[]","java.util.hashmap;","leetcod","map","new","nums,","public","solut","sum","target)","two","twosum(int[]","{","解答1[java]："],"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":["!=","%","(carri","(p1","(p2","*","*/","+","/","/**","0)","0;","10);","10;","2.",":","=",">","?","add","addtwonumbers(listnod","carri","carry;","class","definit","dummyhead","dummyhead.next;","dummyhead;","int","l1,","l1;","l2)","l2;","leetcod","link","list.","listnod","listnode(0);","listnode(carry);","listnode(int","listnode(sum","new","next;","null","null)","number","p1","p1.next;","p1.val","p2","p2.next;","p2.val","public","result","result.next","result.next;","return","singli","solut","sum","sum;","two","val","val;","x","x)","x;","y","{","||","}","代码","思路1：给较短链表的长度和较长链表的长度补齐，补的高位节点的值都设为0。","核心思想","解答1[java]：","进阶：链表中的数是正向存储的","链表加法。"],"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":["(l","(r","+","0;","1","1;","3.",":","=","?","b","b;","break;","charact","class","freq","int","int[256];","int[]","l","leetcod","lengthoflongestsubstring(str","longest","new","public","r","re","repeat","s)","s.length())","solut","substr","without","{","}","动态窗口","思路","解答1[java]："],"leetcode/20190308 - LeetCode 15. 3Sum.html":["!=","&&","(int","(lo","+","0","0;","1,","15.","1]))","3sum","=","arrays.sort(num);","class","hi","int","leetcod","linkedlist<>();","list>","lo","new","num)","num.length","num[i","num[i]","num[i];","public","re","solut","sum","threesum(int[]","{","解答1[java]："],"leetcode/20190308 - LeetCode 18. 4Sum.html":["&&","(int","(low","(num.length","(num[i]","+","//","0","1","1,","18.","1;","1]","1])","2]","3]","4sum","=","==","adjac","alreadi","an","arraylist<>();","arraylist>","break;","candid","check","class","continue;","duplic","element","finish","first","foursum(int[]","high","int","j","larg","large,","leetcod","list","list>","low","need","new","num,","num.length","num[i","num[i]","num[j","num[j]","num[num.length","prevent","public","result","search","second","solut","sorted,","target)","{","解答1[java]："],"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":["!=","(first","(int","(len+1)","(length","(n","(n+1)","*","*/","/**","//","0)","0;","0个节点，那么我们就要定位到第","1","1)","19.","1;","1个节点，那么我们就要定位到第","1号指针指向头节点之前的辅助节点，相当于第0个节点。2号指针最初也指向“第0节点”，然后2号指针遍历n+1次，到达第n+1个节点。此时，两个指针之间的差距为","2",";","=",">","advanc","apart","between","class","definit","dummi","dummy.next","dummy.next;","dummy;","end","first","first.next","first.next.next;","first.next;","gap","head,","head;","int","leetcod","len","length","length++;","link","list","list.","listnod","listnode(0);","listnode(int","n","n)","n+1个节点。那么我们就要定位到第","n+1，两个指针同时向右移动，当2号指针变为null的时候，相当于指向了第len+1个节点的时候，1号指针应该指向第","n;","new","next;","node","nth","null)","pointer","public","remov","removenthfromend(listnod","return","second","singli","solut","val","val;","x)","x;","{","}","个节点.","个节点。","个节点，也就是第","个节点，即第","如果我们要删除倒数第1个节点，也就是要删除第len","如果我们要删除倒数第2个节点，也就是要删除第len","如果我们要删除倒数第n个节点，也就是要删除第","当链表长度为","时，","核心思想","核心目的：我们要定位到要删除元素的前一个元素。","算法","解法1[java]：","解法2[java]：双指针","遍历两次，第一次算出链表长度，第二次，定位到要删除的节点的前一个节点。","链表定义"],"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":["(;tail","0)","0;","26.","=","==","array","class","duplic","form","head","if(nums.length","int","leetcod","nums)","public","remov","removeduplicates(int[]","return","solut","sort","tail","{","解答1[java]："],"leetcode/20190304 - LeetCode 27. Remove Element.html":["(head","(int","0;","27.","=","class","element","head","int","j","leetcod","nums,","nums.length;","public","remov","removeelement(int[]","solut","tail","val)","zero","{","使用同样的思路解决。","复杂度分析","时间复杂度：o(n)o(n)o(n)","空间复杂度：o(1)o(1)o(1)","解答1[java]","解答2[java]：","这道题可以和第283题","："],"leetcode/20190301 - LeetCode 43. Multiply Strings.html":["!=","\"0\"","%","&&","'0')","'0';","(int","(products[i]","(sb.length()",")","*","+","+=","/","0","0;","10;","1;","1]","43.",":","=","==",">=","?","carri","carry)","class","d1","d2","d2;","i+j","i+j+1","import","int","int[]","int[n1","j","java.util.scanner;","leetcod","main","multipli","multiply(str","n1","n2","n2];","new","num","num1,","num1.charat(i)","num1.length(),","num2)","num2.charat(j)","num2.length();","product","products)","products.length","products[i","products[i]","public","return","sb","sb.append(num);","sb.charat(0)","sb.deletecharat(0);","sb.length()","sb.tostring();","string","stringbuild","stringbuilder();","tmp","tmp;","{","}","位。","位和第","位和第二个数的第","位数分别为","位的乘积会影响结果的第","位的乘积先存到结果的","位，最后再统一计算进位。","和","因此，把第一个数的第","把结果看作一个大小为","的两个数相乘，乘积的位数不超过","的数组，那么第一个数的第","解答1[java]:","这个算法基于一下规律："],"leetcode/20190327 - LeetCode 48. Rotate Image.html":["(r1","0;","1;","48.","=","c1","c2","class","imag","int","leetcod","matrix)","matrix.length","matrix[0].length","public","r1","r2","rotat","rotate(int[][]","solut","void","{","代码","旋转正方形矩阵。","旋转的数字旋转之后，几个位置的数字之间是有规律的。","核心思想","解答1[java]："],"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":["(cursum","(int","(nums.length","+=","0;","53.",":","=",">","?","class","cursum","cursum;","dp[i]","int","leetcod","max","max;","maximum","maxsubarray(int[]","maxsum","maxsum)","n","n;","nums)","nums[0];","o(1)o(1)o(1)。","public","return","solut","subarray","{","}","一直加，用","中存储的是","之前的最大的子序列和。","动态规划。","思路","时间复杂度降到了","表示截至目前的最大正子序和。","解答1[java]：","解答2[java]："],"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":["&","(int","(matrix.length","(r1",")","++i，相当于换成下一种走法。第一圈使用数组行数和列数来判定是否越界，第二圈就要靠","0)","0,","0;","0};","1,","1;","1};","29.","54.",";","=","==",">","an","ans.add(matrix[r2][c]);","ans.add(matrix[r][c1]);","ans;","arraylist();","boolean[][]","boolean[r][c];","c","c1","c1++;","c1;","c2","class","dierectioncount","directionofcolumn","directionofcolumn[i]","directionofrow","directionofrow，一个directionofcolumn，这样，directionofrow[i]","import","int","int[]","java.util.arraylist;","java.util.list;","leetcod","list","matrix","matrix)","matrix.length","matrix.length,","matrix[0].length","matrix[0].length;","new","public","r","r1","r1++;","r1;","r2","r2;","return","seen","solut","spiral","spiralorder(int[][]","{","{0,","{1,","}","从外层向内层，一圈一圈地遍历。","代码","剑指offer","和","数组来判断。","核心思想","解答1[java]：","解答2[java]：","这个才是真的全自动顺时针打印。设计了两个数组，一个","这么一组数就表示下一步该怎么走，如果越界了，那么","顺时针打印矩阵"],"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":["(int","(n","+","1)","1;","1];","2;","3;","70.","=","==","class","climb","climbstairs(int","dp","dp[1]","dp[2]","first","int","int[]","int[n","leetcod","n)","new","o(1)o(1)o(1)。","o(n)o(n)o(n)","public","return","second","solut","stair","{","}","动态规划。","变为","思路","斐波那契数。","比上一个算法优化的地方在于空间复杂度由","解答1[java]：","解答2[java]："],"leetcode/20190305 - LeetCode 75. Sort Colors.html":["(int","0;","1;","75.","=","class","color","int","leetcod","nums)","nums.length;","public","solut","sort","sortcolors(int[]","temp;","two","void","zero","{","三路快排的思路","解答1[java]："],"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":["(char","(counter","(map[s.charat(left++)]++","(map[s.charat(right++)]","(right","0)","0,","1","1。因为在前边的语句中，已经预先把","76.",":",";","=","==",">","a，就不会再减","c","class","counter","counter++;","d","head","int","int[128];","int[]","integer.max_value;","leetcod","left","map","map['a']","map['c']","map[c]++;","minimum","minwindow(str","new","public","right","s,","solut","string","substr","t","t)","t.length(),","t.tochararray())","t=\"abc\"，当","window","{","中加","中的一个字符，且减去这个字符之后，这个字符的数量就不够了，因此需要把","中的值一定是负数，因为之前","中的字符在","中的字符才会被减成负数。","中的字符，那么这个字符在","为零的时候，map['a']、map['b']","了。因为","了，所以只有不在","假设","其中至少有两个的值是小于等于零的。可以小于零，但至少要等于零。不然","加1。如果","同理，if","和","如果判断为真，说明","已经被减到零，说明前面已经匹配到的字符","当","思路","指向位置的字符是哪个，在判断之后都会被减去","指向的不是","指针指向的字符是","是不会为零的。","注意","的数量已经足够了。","被减为零之后，如果再遇到字符","解答1[java]：","这句，不论","遍历的时候被减过。"],"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":["(i","(int","0;","2])","2]，往后看两位。现在是往后看","80.",":","=","array","class","duplic","i;","if(nums.size()","ii","int","k","k)","leetcod","lookback，向后看。第一种解法是","n","n;","nums)","nums,int","nums[i","nums[i++]","public","remov","removeduplicates(int[]","removeduplicates(vector&","return","solut","sort","{","}","个相同的元素。","位。","和第一种解法的思路相似，j","就是","补充解答：修改版","解答1[java]：","这个解答，可以适用于保留最多不超过"],"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":["!=","&&","(!q.isempty())","(t1","(t1.val","*","*/","/**","101.","27.","=","==","binari","boolean","class","continue;","definit","false;","int","ismirror(root,","ismirror(t1.left,","ismirror(t1.right,","ismirror(treenod","issymmetric(treenod","leetcod","left;","linkedlist<>();","new","node.","null","null)","o(n)o(n)o(n)","o(n)o(n)o(n)。","public","q","q.add(root);","q.add(t1.left);","q.add(t1.right);","q.add(t2.left);","q.add(t2.right);","q.poll();","queue","return","right;","root","root)","root);","solut","symmetr","t1","t1,","t2","t2)","t2.left)","t2.right);","t2.val)","tree","treenod","treenode(int","true;","val","val;","x)","x;","{","||","}","代码","使用递归的方式，首先，一次输入两个节点，然后对比两个节点的值，递归判断第一个节点的左子树节点和第二个节点的右子树节点是否相同，递归判断第一个节点的右子树节点和第二个节点的左子树节点是否相同。递归开始的时候，函数的两个实参都填","使用队列作为辅助。每次都从队列中弹出来两个对象，比较他们的值，如果相同，把他们的子节点按照以下顺序存入队列中：①第一个节点的左节点②第二个节点的右节点③第一个节点的右节点④第二个节点的左节点。","判断一个二叉树是否是镜像二叉树。","剑指offer","参考","复杂度分析","时间复杂度","最坏情况下，树退化成一个单链表，递归空间复杂度变成","核心思想","空间复杂度","节点即可。","解答1[java]：","解答2[java]：","镜像二叉树和这道题很像。","队列的前两个元素都存成根节点。"],"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":["!=","(!queue.isempty())","(!stack.isempty())","(first","(int","(java","(root","(the",")","*","*/","+","/","/**","0;","1));","104.","15","1;","20","3","3.","4","7","8","9",":","=","==","[3,9,20,null,null,15,7],","\\","add(","along","append","balanc","balanced),","best","binari","call","case","case,","child","children.","class","complet","complex","current","current.getkey();","current.getvalue();","current_depth","current_depth);","definit","depth","depth.","depth;","down","e)","e.g.","each","element","element)","empty.","end","exactli","example:","farthest","find","given","head","height","import","int","java.lang.math;","java.util.linkedlist;","java.util.queue;","javafx.util.pair;","keep","last","leaf","leetcod","leetcode官方题解及解析：104.","left","left;","left_height","linkedlist","linkedlist();","linkedlist<>();","linkedlist>","list","list,","list.","log(n)log(n)log(n).","longest","look","math.max(depth,","math.max(left_height,","maxdepth(root.left);","maxdepth(root.right);","maxdepth(treenod","maximum","new","nnn","node","node,","node.","nodes.","note:","null","null)","number","o(log(n))o(log(n))o(log(n))","o(n)o(n)o(n),","o(n)o(n)o(n).","occur","once,","pair","pair(root,","pair(root.left,","pair(root.right,","path","platform","poll()","polllast()","public","queue","queue.add(root);","queue.size();","recurs","remov","retriev","return","right;","right_height","right_height)","root","root)","se","size","solut","space","specifi","stack","stack.add(new","stack.polllast();","storag","therefor","therefore,","this:","thu","time","tree","tree),","tree,","tree/","treenod","treenode(int","unbalanc","unbalanced,","val","val;","visit","worst","x)","x;","{","}","};","使用","参考文献","复杂度分析","数据结构进行深度优先遍历。","简单介绍本题中用到的","类的几个方法。","类的相关方法","解答1[java]：递归算法","解答2[java]：非递归，深度优先遍历","解答3[java]：非递归，广度优先遍历","题目","题目来源：https://leetcode.com/problems/maximum"],"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":["(int","0;","121.","=","best","buy","class","int","integer.max_value;","leetcod","maxprofit","maxprofit(int","maxprofit)","maxprofit;","minpric","minprice;","prices[])","prices[i]","public","return","sell","solut","stock","time","{","}","思路","涉及两个变量，一个存储截至目前最小的值，一个存储截至目前最大的利润。","解答1[java]："],"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":["\"\").tolowercase();","(int","0;","125.","9]\",","=","actual","actual.equals(rev);","boolean","char[256];","char[]","charmap","charmap['a']","class","final","int","ispalindrome(str","java","leetcod","new","palindrom","privat","public","return","rev","s)","s.replaceall(\"[^a","solut","static","string","stringbuffer(actual).reverse().tostring();","valid","z0","za","{","}","使用正则表达式和","先打一个表。注意通过","型。","思路","的类库。","解答1[java]：","解答2[java]：","这种方式访问数组的时候，会自动把字符转换为"],"leetcode/20190308 - LeetCode 136. Single Number.html":["(a","0","0a⊕a=0","0，得到这个数字二进制形式中任意一个为","1","136.",":","=","[1,2,2,1,3,4]输出:","[3,4]","\\oplu","a)","aa⊕0=a","a⊕0=aa","a⊕a=0a","a⊕b⊕a=(a⊕a)⊕b=0⊕b=ba","b","ba⊕b⊕a=(a⊕a)⊕b=0⊕b=b","bit","bit,","bits,","b。","class","find","int","leetcod","n","number","number.","nums)","o(n)","public","return","same","singl","singlenumber(int[]","solut","take","togeth","two","uniqu","xor","zero","{","}","且再开辟的内存空间固定(与","两个数不一样，肯定至少有一个二进制位是不一样的。我们就从不一样的二进制位中选择一个。设这两个数为a","个元素分成两部分。","个元素的数组，除了两个数只出现一次外，其余元素都出现两次，让你找出这两个只出现一次的数分别是几，要求时间复杂度为","为标准，将数组的","任何一个数字异或它自己都等于","再把第2位为1的所有数都相互之间做异或运算，必然能够找出a和b中的另外一个数字。","再然后，以这一位是","和","因为除了这两个数之外其他的数都是成对出现的，所以其他的数中，第2位是0的数是成对出现的，第2位是1的数也是成对出现的。","将这一位为","思路","所以，如果我们把第2位为0的所有数都相互之间做异或运算，必然能够找出a和b中的一个数字，因为其他的数都是成对出现的，异或之后所有位都0了。","无关)。","有一个","本题拓展","来源：有哪些解决完之后让你拍案叫绝的算法问题？","核心思想","根据前面找一个不同数的思路算法，在这里把所有元素都异或，那么得到的结果就是那两个只出现一次的元素异或的结果。","根据异或的性质","然后，因为这两个只出现一次的元素一定是不相同的，所以这两个元素的二进制形式肯定至少有某一位是不同的，即一个为","现在假设我们已经选择了某一个二进制位，假设我们选择的是从右向左数第2位，简称第2位。","的位都是我们要找的那一位。","的所有元素做异或，得出的数就是只出现一次的数中的一个","的所有元素做异或，得出的数就是只出现一次的数中的另一个。","示例","而a和b的第2位，只有两种可能：","解答1[java]：","输入:","还是","这样就解出题目。忽略寻找不同位的过程，总共遍历数组两次，时间复杂度为o(n)。","题目再解析","（1）a的第2位是1，b的第2位是0；","（2）a的第2位是0，b的第2位是1。","，另一个为","，现在需要找到这一位。"],"leetcode/20190324 - LeetCode 137. Single Number II.html":["\"singl","%","&","(int","(sum_of_j_digit","(只出现一次的数字)","0,","0;","136,","137,","137.","137：singl","1;","260","3)",":","=",">","^","a|b;","b","b;","bitwis","blog","class","detail","explan","gener","handl","i)","ii","int","leetcod","method","num","number","number\"","nums)","oper","public","questions.","result","return","s","singl","singlenumber(int[]","solut","sort","unnamed42'","way","{","|=","}","~a;","~b;","一个","不过这个算法，同样是有限状态机，其实有好几个写法，不过核心应该都是做一个三进制的计数器。我觉得对我而言是真的很难理解，现在也没有完完全全理解。这里先把几个解释的帖子记下来，等到有时间再来攻克。","也可以得到正确结果。","型整数有32个二进制位。","如果某个二进制位是1，通过和结果进行","对于每个二进制位，统计这一位上1的个数，然后对3取余，如果余数不为0，说明不重复的那个数的这个二进制位为1。","或","操作，把这个1添加到结果中对应的二进制位上。","最后一句","核心思想","统计每一位上1的个数，通过和二进制1进行位与操作。","解答1[java]：","解答2[java]：有限状态机","语句如果改为"],"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":["!=","(fast","(head","(nodesseen.contains(head))","(slow","*","*/","/**","//","141.","=","==","boolean","class","cycl","definit","false;","fast","fast)","fast.next","fast.next.next;","hascycle(listnod","hashset<>();","head","head)","head.next","head.next;","head;","int","leetcod","link","list","list.","listnod","listnode(int","new","next","next;","nodesseen","nodesseen.add(head);","null","null)","null;","public","return","set","singli","slow","slow.next;","solut","true;","val","val;","x)","x;","{","||","}","解法1[java]：快慢指针","解法2[java]：hash表","链表的结构"],"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":["(int","(nums.length","0)","0;","153.","1;","=","==","array","array。","class","find","findmin(int[]","int","leetcod","min","minimum","nums)","nums[0];","public","return","rotat","solut","sort","{","}","解答1[java]："],"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":["(int","(nums.length","0)","0;","153","154.","1;","=","==","array","class","find","findmin(int[]","ii","ii。","int","leetcod","min","minimum","nums)","nums[0];","public","return","rotat","solut","sort","{","}","本题和第","解答","题可以使用同样的方法解决。"],"leetcode/20190326 - LeetCode 155. Min Stack.html":["(newnum","(this.stackmin.isempty())","*/","/**","155.","=","arraydeque<>();","class","data","dequ","here.","import","initi","java.util.arraydeque;","java.util.deque;","leetcod","min","minstack","minstack()","new","newnum)","privat","public","push(int","stack","stackdata;","stackmin;","structur","this.stackdata","this.stackmin","this.stackmin.push(newnum);","void","{","}","代码","使用两个栈，一个数据栈，一个最小值栈。push","同样使用两个栈，不过压入逻辑相比解答1修改了一下。当要入栈的数字小于当前最小值的时候，把入栈的数字同时压入数据栈和最小值栈。当要入栈的数字大于等于当前最小值的时候，把当前最小值取出来再压入最小值栈一次，相当于当前的最小值是冗余的，但是冗余自有冗余的用处。","带取最小值功能的栈。","弹出元素的时候，不需要再进行检查，弹出元素的同时，也把最小值栈的元素弹出，因为最小值栈的元素是冗余的，就是为了一一对应，不用再检查。","核心思想","核心思路","的时候，如果小于等于当前最小值，同时压入两个栈，然后每次弹出的时候，数据栈弹出的数和最小值栈的栈顶作比较，如果相同，那么把最小值也弹出。","解答1：","解答2[java]："],"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":["(;","0;","167.","1;","=","array","class","ii","input","int","int[2];","int[]","i，然后在剩下的长度中进行二分搜索","j","leetcod","new","numbers,","numbers.length","public","result","solut","sort","sum","target","target)","two","twosum(int[]","{","一头一尾两个指针不断向中间靠拢。","从头开始选一个值","利用传入的数组已经有序的特点。","思路","解答1[java]：","解答2","这个值。"],"leetcode/20190309 - LeetCode 169. Majority Element.html":["(count","(int","(num","+=","/","0","0)","0;","1","169.","1;","2];",":","=","==","?","algorithm）。","arrays.sort(nums);","candid","candidate)","candidate;","class","count","element","int","integ","leetcod","major","majorityelement(int[]","moor","n/2","null;","num","num;","nums)","nums[nums.length","public","return","solut","vote","{","}","变成","就换下一个数，因为众数占总体的一半以上，所以众数总能脱颖而出。","左右。","思路","解答1[java]：","解答2[java]：","这个算法叫做摩尔计数法（boyer","这个算法的原理是，数组排序之后，众数一定位于","选定一个数，遇到相同的就加1，不同就减1，count"],"leetcode/20190308 - LeetCode 202. Happy Number.html":["%","(d","(exist.contains(n))","(n","*","+=","/","/=","0)","0;","1","1)","10)","10);","10,","10;","1;","1m","2);","202.","7","7;","9)","=","==",">","boolean","class","d","d;","exist","exist.add(n);","false;","false。","happi","hashset<>();","int","ishappy(int","leetcod","math.pow(d","n","n)","n;","new","number","privat","public","re","res;","return","sampl","set","set，如果","solut","square(int","square(n);","submission。","{","||","}","使用一个","吗？不知道这背后的数学规律。","和","就一定会经过","已经包含了当前元素，说明发生循环了。就返回","思路","最后使用了一个","来进行判断是因为如果是","的","解答1[java]：","解答2[java]：神奇的解法","这个是"],"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":["!=","(int","(length","0;","1ms。","205.","2ms，但是这个算法是","4m","=","boolean","char","char[256];","char[]","charat()","class","false;","int","int[256];","int[]","isisomorphic(str","isomorph","leetcod","length","m1","m2","n","new","public","return","s,","s.length();","s.tochararray();","schararray","smap","solut","sstring","string","t)","t.length())","t.tochararray();","tchararray","tmap","tstring","{","不直接建立字母之间的映射关系，而是把要建立映射关系的字母同时映射到另外一个数字。相当于建立了一个间接映射关系。","减为2ms。可能是函数调用也要占用一部分空间。而直接使用数组，除了数组的空间不需要额外的空间。","反复调用","思路","数组效率更高？","数组比使用","数组的算法要快。上边的算法优化之后是","方法是比较慢的，优化之后运行总时间由","空间占用，两次调用，数值差距很大，不知道为什么。","类的","解答1[java]：","解答1小优化","解答2[java]：","这个算法是通过两个数组，两个数组对应两种映射关系。但是都是字符映射到字符的。","这个算法比上边使用","难道是因为使用"],"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":["!=","\"","\");","(curr","(end","(head","*","*/","+","/**","206.","=","==","args)","class","code_07_reverselist","cur","curr","curr.next","curr.next;","curr;","data)","data;","definit","doublenod","doublenode(1);","doublenode(2);","doublenode(3);","doublenode(4);","doublenode(int","end","end.last;","head","head)","head.last","head.next","head.next.next","head.next;","head1","head1.next","head1.next.next","head2","head2.next","head2.next.last","head2.next.next","head2.next.next.last","head2.next.next.next","head2.next.next.next.last","head2.next.next;","head2.next;","head2;","head;","int","last;","leetcod","link","list","list.","list:","listnod","listnode(int","main(string[]","new","next;","nexttemp","nexttemp;","node","node(1);","node(2);","node(3);","node(int","null","null)","null;","p","p;","post","post;","pre","pre;","prev","prev;","prev指向前一个节点","printdoublelinkedlist(doublenod","printdoublelinkedlist(head2);","printdoublelinkedlist(reverselist(head2));","printlinkedlist(head1);","printlinkedlist(nod","public","return","revers","reverselist(doublenod","reverselist(head.next);","reverselist(head1);","reverselist(listnod","reverselist(nod","singli","solut","static","system.out.print(\"doubl","system.out.print(\"link","system.out.print(\"|","system.out.print(end.valu","system.out.print(head.valu","system.out.println();","this.valu","val","val;","value;","void","x)","x;","{","||","}","一直是指向最后一个节点，并且不断被返回到上一层调用的。","主要是利用","代码","刚好指向最后一个节点。","双向链表节点定义","反转单链表和双链表。","完整测试代码","拓展：反转双向链表","指向","指向当前节点。最初的时候，prev指向null，cur指向第一个节点。最后","核心思想","核心思路","的时候，prev","相当于把当前节点的下一个节点指向了当前节点。递归调用到最后，p","算法","解答1[java]：","解答2[java]：","设计两个指针，一个","，一个cur"],"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":["(left","(result","+","0;","1)","1);","1;","209.","=","==","a,","b)","class","int","int[]","leetcod","left","min(int","min(result,","minimum","minsubarraylen(int","nums)","nums.length","privat","public","result","result;","return","right","s)","s,","size","solut","subarray","sum","{","}","之间形成一个动态窗口，每次根据窗口内的元素的和与给定的数字作比较，确定是收缩窗口还是向右扩大窗口。","和","思路","解答1[java]："],"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":["(array[rightbound]","(left","(leftbound","(nums.length","(right","+","/","//","//move","0;","1","1)","1;","1;//","215.","2;","=","==",">=","[0,","array","array,","array[pivotindex];","arrays.sort(nums);","between","class","element","findkthlargest(int[]","import","int","java","java.util.arrays;","k","k)","k];","kth","largest","leetcod","left","left)","left,","left;","leftbound","leftbound++;","leftbound]","len","make","nums,","nums.length","nums.length;","nums[0];","nums[len","nums[pivotpos];","part","partit","partition(int[]","pivot","pivot)","pivotindex","pivotindex,","pivotpo","pivotpos的index","pivotpos的，右边的都是小于","pivotpos的，根据","priorityqueu","privat","public","return","right","right)","right);","rightbound","shrink","solut","swap(array,","valu","{","}","之后，pivotpo","但是这个实现依赖了","参考资料","和","左边寻找还是右边寻找。","左边的元素都是大于","每次","深入理解java","的关系就能确定如果要继续寻找是在","的库，并不是一个通用的解法。","要理解这个算法需要对快速排序算法有所了解。","解答1[java]：","解答2"],"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":["&&","(int","(queue1.isempty()","(queue1.size()","*","*/","/**","0;","1","1)","1次，这样刚刚push进来的元素就变到了第一个。","225.","=",">","boolean","call","class","data","element","element.","empty()","empty.","false;","here.","implement","import","initi","instanti","int","java.util.linkedlist;","java.util.queue;","java队列queue接口详解","leetcod","linkedlist();","linkedlist<>();","mystack","mystack()","mystack();","n","new","obj","obj.empty();","obj.pop();","obj.push(x);","obj.top();","object","onto","param_2","param_3","param_4","pop()","public","push","push(int","q1","q2","q2，push","queue","queue.add(x);","queue1","queue1.add(x);","queue1.peek();","queue1;","queue2","queue2.add(queue1.remove());","queue2.isempty())","queue2.remove();","queue2;","queue;","remov","return","stack","stack.","structur","such:","temp","temp;","top","top()","topel","topelement;","true;","us","void","whether","x","x)","{","}","个元素","中，pop的时候，先把","中，剩下最后一个元素，然后弹出这个元素并返回。然后交换","代码","使用两个队列","使用队列实现栈。","到","参考资料","和","核心思想","的","的引用。","的时候","的时候，先把元素加到最后，然后自己弹出元素的同时让元素进入队列，循环n","解答1[java]：使用两个队列","解答2[java]：使用一个队列"],"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":["&&","(!stack1.isempty())","(!stack2.isempty())","(stack1.isempty()","*","*/","/**","232.","=","arraydeque<>();","back","boolean","call","class","data","dequ","element","element.","empty()","empty.","false;","front","here.","implement","import","initi","instanti","int","java.util.arraydeque;","java.util.deque;","leetcod","myqueu","myqueue()","myqueue();","new","obj","obj.isempty();","obj.peek();","obj.pop();","obj.push(x);","object","param_2","param_3","param_4","peek()","pop()","public","push","push(int","queue","queue.","remov","return","stack","stack1","stack1.push(x);","stack1;","stack2","stack2.isempty())","stack2.peek();","stack2.pop();","stack2.push(stack1.pop());","stack2;","structur","such:","true;","us","void","whether","x","x)","{","}","使用栈实现队列。","解答[java]"],"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":["!=","\"","\");","&&","(!stack.isempty())","(cur","(cur.next","(head","(head.valu","(n1","(n1.valu","(n2","(n2.next","(node","(right","+","//","234.","=","==",">","args)","boolean","break;","check","class","code_11_ispalindromelist","convert","cur","cur.next.next","cur.next.next;","cur.next;","data)","data;","end","extra","false;","find","first","head","head)","head.next","head.next.next","head.next.next.next","head.next.next.next.next","head.next;","head;","head;//","import","int","ispalindrome1(nod","ispalindrome2(nod","ispalindrome3(nod","java.util.stack;","last","leetcod","left","link","list","list:","main(string[]","mid","mid.next","move","n","n/2","n1","n1.next","n1.next;","n1;","n2","n2.next","n2.next.next","n2.next.next;","n2.next;","n2.value)","n2;","n3","n3.next","n3.next;","n3;","need","new","next","next;","node","node(1);","node(2);","node(3);","node(int","node)","node.next;","null","null)","null;","o(1)","palindrom","part","printlinkedlist(head);","printlinkedlist(nod","public","re","recov","res;","return","right","right.next;","save","space","stack","stack();","stack.pop().value)","stack.push(cur);","stack.push(right);","static","system.out.print(\"link","system.out.print(ispalindrome1(head)","system.out.print(ispalindrome2(head)","system.out.print(node.valu","system.out.println(\"=========================\");","system.out.println();","system.out.println(ispalindrome3(head)","this.valu","true;","value;","void","{","|","||","}","代码","使用快慢指针法，等到慢指针走到链表的一半时，把链表的右半部分翻转，翻转之后，两个指针，一个从头，一个从尾，同时向中间遍历，相互对比。判断之后先把结果存起来，然后把链表结构恢复，返回结果。","判断链表是否为回文链表。","完整测试代码","快慢指针，不过不是两个指针都从头开始，而是快指针从第一个节点开始，慢指针从第二个节点开始，这样，快指针一次走两步，慢指针一次走一步。当链表长度为奇数的时候，快指针可以走到最后一个，此时，慢指针走向链表右半部分的第一个节点。当链表长度为偶数的时候，快指针可以走到倒数第二个节点，此时慢指针同样走到链表右半部分的第一个节点。此时把链表的右半部分压栈，然后找一个指针指向开头，一个一个比较。","把所有元素放到栈中，然后从头开始遍历，和栈中弹出来的元素进行比较。","核心思路","解答1[java]：","解答2[java]：","解答3[java]："],"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":["0){","0;","1;","240.","2d",";","=","==",">","boolean","class","column","else{","false;","if(matrix.length","if(target","ii","int","leetcod","matrix","matrix,","matrix[0].length","matrix[row][column]){","public","return","row","row++;","search","searchmatrix(int[][]","solut","target)","true;","while(row=0){","{","}","解答1[java]："],"leetcode/20190308 - LeetCode 242. Valid Anagram.html":["!=","(s.length()","242.",":",";","=","anagram","arr","arr[c]","arr[c]++;","arrays.equals(str1,","arrays.sort(str1);","arrays.sort(str2);","ascii","boolean","c","c:","char[]","class","false;","for(char","if(arr[c]","if(s.length()","int[128];","int[]","isanagram(str","java","leetcod","new","public","return","s,","s.tochararray()){","s.tochararray();","solut","str1","str2","str2);","string","t)","t.length())","t.tochararray()){","t.tochararray();","unicod","valid","{","}","–","先排序，再对比。这个方式也适用于","参考资料","在string中遍历所有字符的最快方法","字符集。","字符集。但是","字符集的字符串。题目中额外提示了可以考虑算法是否适用于","字符集的字符串处理。不适合处理","字符集的字符串，所以这个算法也可以通过。","思路","的测试用例只有","解答1[java]：","解答2[java]","这个解法只适合于","："],"leetcode/20190304 - LeetCode 283. Move Zeros.html":["!=","(int","(k","(nums[j]","0","0;","10","11","283.","5","6","=","arraylist","arraylist<>();","class","i)","i++;","import","int","java.util.arraylist;","k","k++;","leetcod","move","movezeroes(int[]","n","new","nonzeroel","nums)","nums[i]","nums[i];","nums[j];","nums[k++]","public","solut","val)","void","zero","{","}","元素之后，后边的判断就是多余的了。不如改为直接赋值。加上了判断就一定会判断","到","复杂度分析","对末尾加零的操作优化","所以","时间复杂度：o(n)o(n)o(n)","次的，所以开销更小。","次，但是如果直接赋值，多余的赋值操作的次数是少于","空间复杂度：o(1)o(1)o(1)","空间复杂度：o(n)o(n)o(n)","第","行可以直接改为：","行有一个判断：","解答1[java]：","解答2[java]：","这个判断其实可以不要，因为只要遇到第一个"],"leetcode/20190308 - LeetCode 290. Word Pattern.html":["!=","\");","(int","(integ","(strarr.length","(words.length","0;","290.","=","boolean","class","dict","false;","hashmap","hashmap();","index","int","java","key","leetcod","map","n","n)","new","pattern","pattern,","pattern.length())","pattern.length();","public","put()","put()，两个字符串执行中的返回值应该相同。","return","solut","str","str)","str.split(\"","strarr","string","string[26];","string[]","valu","value，并把原来的","word","wordpattern(str","{","中有相同字母，那么","中每个字母都不相同，那么","使用字符串数组来进行判断。","原来的","对应位置的字符串是否相同。","已经存在，那么就覆盖掉","当作返回值。","思路","所以如果两个字符串模式相同，只要按顺序执行","操作，如果","本解法是借助了","每个位置的字符也不能相同，如果相同，就不符合题意。","的","的特性。hashmap","第一遍是确定，如果","第二遍是确定，如果","解答1[java]：","解答2[java]："],"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":["&&","(int","(integ","(num","+","//remov","0;","1];","349.",":",":set2){","=","array","arrays.copyof(result,","avoid","boolean[]","boolean[max","class","duplic","exist","exist[num","false;","for(int","h","hashset","hashset();","hashset细节","if(set1.contains(num)){","import","index","index);","int","int[]","int[nums1.length];","int[nums2.length];","integer.max_value,","integer.min_value;","intersect","intersection(int[]","java.util.arrays;","java.util.hashset;","java.util.iterator;","leetcod","math.max(max,","math.min(min,","max","min","min]","min])","new","num","num);","num:","num:nums2){","num;","nums1)","nums1){","nums1,","nums2)","o(h)o(h)o(h)。m","o(m)o(m)o(m)","public","result","result[index++]","result[resultindex++]","resultindex","resultindex);","resultset","return","set1","set1.add(num);","set2","set2.add(num);","solut","true;","two","{","}","和","复杂度分析","小菜园博客","很巧妙的一个算法，先把一个数组的最大值和最小值圈起来。","思路","或者","数组为","数组和","时间复杂度：o(n)o(n)o(n)。","是两个数组的长度。","没错，hashset的contains方法是调用map.containskey(o)方法的，containskey(o)是根据hash函数去做散列的，所以与元素的多少无关，无论是多少元素containskey(o)的时间复杂度基本上o(1)。","空间复杂度：","解答1[java]：","解答2[java]："],"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":["(int","//nums[i]","0)","0;","1);","350.","=","array","arraylist","arraylist();","arraylist<>();","arrays.sort(nums1);","arrays.sort(nums2);","class","get()","hashmap","hashmap();","i=0;","ii","int","int[]","int[result.size()];","intersect","intersect(int[]","j","j++;","leetcod","list","map","map.get(nums2[i])","map.put(nums2[i],","new","nums1,","nums2)","nums2[j]){","o(1)o(1)o(1)。","public","r","result","result.add(nums2[i]);","solut","two","while(i","{","}","}else{","先对数组进行排序，然后两个数组分别设一个指针，分别比较。","复杂度分析","思路","时间复杂度为","的","解答1[java]：","解答2[java]："],"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":["(char","(right","(s","0,","0;","1。如果指向的字符不在","438.",":","=","==",">","anagram","arraylist<>();","ch","class","find","findanagrams(str","import","int","int[128];","int[]","java.util.arraylist;","java.util.list;","leetcod","left","len_","len_p","list","map","map[ch]++;","map，把","new","null","p","p)","p.length()","p.length();","p.tochararray())","public","re","res;","return","right","s,","s.length())","s.length();","solut","string","{","||","}","中对应的值减去","中所有的字符在","中的值先加1。","中，会导致那个字符对应的值小于0，根据这个条件，把左指针一步一步移到和右指针相同的位置，并且在移动的过程中把","先设计了一个","思路","恢复成最初的数值。这样就相当于从一个新的位置重新开始。","然后设计两个指针，右指针指向哪个字符，就把这个字符在","解法1[java]："],"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":["(char","(int","(po","0;","451.",":","=","c","c;","char[]","char[s.length()];","charact","class","frequenc","frequencysort(str","int","int[128];","int[]","leetcod","map","map[c]++;","map[max])","map[max];","max","new","po","public","re","repeat","s)","s.tochararray())","solut","sort","string","{","}","解答1[java]："],"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":["!=","&&","(int","(r,","0","0;","1]","1][c","766.","=",">","boolean","c","c)","class","false;","false，如果遍历顺利完成，返回","group","hashmap","hashmap<>();","istoeplitzmatrix(int[][]","leetcod","matrix","matrix)","matrix[r","matrix[r][c])","new","public","r","return","solut","toeplitz","true;","true。判断其左上方元素的时候要确保","{","}","代码","以保证数组不会越界。","使用","依次遍历元素，然后判断其值和其坐上方元素的值是都一样，如果不一样，就返回","和","存储每个组的值，然后依次遍历元素，根据","托普利兹矩阵。","核心思想","相同的元素是在同一条对角线上的，可以看作同一组。使用一个","算出来他所在的组，然后判断其值和其所在组的值是否一致。","表示行号和列号，r","解答1[java]：","解答2[java]："],"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":["%","(0,","(1,","(a[i]","(a[j]","(i","(ie.","(int","(note","),","*/",".",".maptoint(i",".toarray();","0","0)","0),","0,","0;","1","1)","1),","1.","1:","1;","2","2)","2):","2,","4","905.",";","=","==",">","[2,4,1,3],","[2,4,3,1]","[3,1,2,4]","[4,2,1,3]","[4,2,3,1],","a)","a,","a.","a.length","a;","a[i]","a[i];","a[j]","a[j];","a[k]","abov","accepted.","addit","answer","array","b","b%2))","b%2));","below","built","case","cases,","class","compar","complexity.","complexity:","condition.","consist","continue.","correct,","correct:","depend","desired.","done","each","element","elements.)","even","eventu","everyth","exampl","follow","for(int","get","given","i)","i++","i++;","idecreas","implement","input:","int","int[]","int[a.length];","integer.compare(a%2,","integer[]","integer[]。排序完成之后再转换为原生数组。","integer[a.length];","integers,","invari","j","j.","k","leetcod","leetcode官方题解及解析：905.","length","loop","maintain","maintained,","make","need","neg","new","nnn","non","normally,","note:","o(1)o(1)o(1)","o(n)o(n)o(n)","o(n)o(n)o(n),","o(nlogn)o(nlogn)o(nlogn)","o(nlogn)o(nlogn)o(nlogn),","odd","on","one.","output","output:","pariti","parity/","pass","place","pointer","public","quicksort","result","return","satisfi","smaller.","solut","sort","sort,","sort.","sortarraybyparity(int[]","space","step","swap","t","then,","throughout","time","tmp","tmp;","two","we'll","{","}","不能对原生类型使用，所以要对原生数组进行装箱，把","因为","复杂度分析","思路","改为","时间复杂度","解答1[java]：二次筛选","解答2[java]：使用comparator()","解答3[java]：使用快排","题目","题目来源：https://leetcode.com/problems/sort"]},"length":64},"tokenStore":{"root":{"0":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.031007751937984496},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.05128205128205128},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.056074766355140186},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.04938271604938271},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.041379310344827586},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.041379310344827586},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.029411764705882353},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.020512820512820513},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.039603960396039604},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.038834951456310676},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.02054794520547945},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.046511627906976744},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.13043478260869565},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.06382978723404255},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.02666666666666667},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.0625},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.011682242990654205},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.06060606060606061},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.02702702702702703},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.04411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.013888888888888888},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.053763440860215055},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.038461538461538464},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.046511627906976744},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.013937282229965157}},"/":{"docs":{},"/":{"docs":{},"记":{"docs":{},"录":{"docs":{},"本":{"docs":{},"层":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.0392156862745098},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"{":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}}},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"要":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"第":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}}}}}}},"a":{"docs":{},"⊕":{"docs":{},"a":{"docs":{},"=":{"0":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}},"docs":{}}}}},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"形":{"docs":{},"式":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}},"1":{"0":{"1":{"docs":{},".":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":2.505181347150259}}}},"4":{"docs":{},".":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":1.6666666666666665}}}},"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}},".":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":3.333333333333333}}},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.031007751937984496},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405}}},")":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}},",":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}},"1":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}},".":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":3.333333333333333}}}},"2":{"1":{"docs":{},".":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":1.4285714285714284}}}},"5":{"docs":{},".":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":2.5}}}},"docs":{},"×":{"1":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.019230769230769232}}},"docs":{}},".":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 12. 矩阵中的路径.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 12. 矩阵中的路径.html","tf":3.333333333333333}}}},"3":{"6":{"docs":{},".":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":2.5}}},",":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}},"7":{"docs":{},",":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}},".":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":2.009009009009009}}},"：":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}},"docs":{},".":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":3.341085271317829}}}},"4":{"1":{"docs":{},".":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":2.0081967213114753}}}},"docs":{}},"5":{"3":{"docs":{"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353}},".":{"docs":{"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":1.4619047619047618}}}},"4":{"docs":{},".":{"docs":{"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":1.2794117647058822}}}},"5":{"docs":{},".":{"docs":{"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":2.5}}}},"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}},".":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":3.333333333333333}}}},"6":{"7":{"docs":{},".":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":1.25}}}},"9":{"docs":{},".":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":2.5}}}},"docs":{}},"8":{"docs":{},".":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":3.333333333333333}}}},"9":{"docs":{},".":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":1.4345238095238093}}}},"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.037383177570093455},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.015384615384615385},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}}}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}},"+":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}},"docs":{}}}}},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0234375},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.05128205128205128},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862}}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.02},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.0625},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.057971014492753624},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.013888888888888888},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"/":{"docs":{},"/":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}},"}":{"docs":{},",":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}},".":{"docs":{"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":2.5},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}},"]":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}},")":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802}},")":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564}}}},";":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}},"[":{"docs":{},"c":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"要":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"第":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}}}}}}},"号":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"第":{"0":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"2":{"docs":{},"号":{"docs":{},"指":{"docs":{},"针":{"docs":{},"最":{"docs":{},"初":{"docs":{},"也":{"docs":{},"指":{"docs":{},"向":{"docs":{},"“":{"docs":{},"第":{"0":{"docs":{},"节":{"docs":{},"点":{"docs":{},"”":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"2":{"docs":{},"号":{"docs":{},"指":{"docs":{},"针":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"次":{"docs":{},"，":{"docs":{},"到":{"docs":{},"达":{"docs":{},"第":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"此":{"docs":{},"时":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"差":{"docs":{},"距":{"docs":{},"为":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{},"前":{"docs":{},"边":{"docs":{},"的":{"docs":{},"语":{"docs":{},"句":{"docs":{},"中":{"docs":{},"，":{"docs":{},"已":{"docs":{},"经":{"docs":{},"预":{"docs":{},"先":{"docs":{},"把":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"在":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}}}}}},"m":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}},"s":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}},"次":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"刚":{"docs":{},"刚":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"进":{"docs":{},"来":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"就":{"docs":{},"变":{"docs":{},"到":{"docs":{},"了":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"2":{"0":{"2":{"docs":{},".":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":2.5}}}},"5":{"docs":{},".":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":2.5}}}},"6":{"docs":{},".":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":2}}}},"9":{"docs":{},".":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":1.6666666666666665}}}},"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}}},"1":{"5":{"docs":{},".":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":1.6666666666666665}}}},"docs":{}},"2":{"5":{"docs":{},".":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":1.6666666666666665}}}},"docs":{}},"3":{"2":{"docs":{},".":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":1.6666666666666665}}}},"4":{"docs":{},".":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":2}}}},"docs":{}},"4":{"0":{"docs":{},".":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":1.6666666666666665}}}},"2":{"docs":{},".":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":2.5}}}},"docs":{}},"6":{"0":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}},"docs":{},".":{"docs":{"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":1.4285714285714284}}}},"7":{"docs":{},".":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":3.333333333333333},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":2.5},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}},"8":{"3":{"docs":{},".":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":2.5}}}},"docs":{},".":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":3.333333333333333}}}},"9":{"0":{"docs":{},".":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":2.5}}}},"docs":{},".":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":3.3402298850574708},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}},"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}},".":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":3.333333333333333},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":2}}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}},")":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},",":{"docs":{},"n":{"docs":{},">":{"2":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"=":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"+":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"2":{"docs":{},")":{"docs":{},",":{"docs":{},"n":{"docs":{},">":{"2":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}},"docs":{}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"2":{"docs":{},")":{"docs":{},"，":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}},"docs":{}}}}},";":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}},":":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"×":{"1":{"2":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.019230769230769232}}},"docs":{}},"6":{"2":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}},"docs":{}},"7":{"2":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}},"docs":{}},"8":{"2":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}},"docs":{}},"docs":{},"n":{"2":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}},"docs":{}}},";":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}},"]":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802}},")":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}},"，":{"docs":{},"往":{"docs":{},"后":{"docs":{},"看":{"docs":{},"两":{"docs":{},"位":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"是":{"docs":{},"往":{"docs":{},"后":{"docs":{},"看":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}}}}}}}}}}},";":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}},"m":{"docs":{},"s":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"是":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}}}}},"d":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":1.6666666666666665}}}},"3":{"0":{"docs":{},".":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":2}}}},"4":{"9":{"docs":{},".":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":2}}}},"docs":{}},"5":{"0":{"docs":{},".":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":1.6666666666666665}}}},"docs":{}},"9":{"docs":{},".":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":3.338187702265372}}}},"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.015384615384615385},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625}}},".":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":3.333333333333333},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":1.4285714285714284},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},"}":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"2":{"docs":{},"或":{"docs":{},"者":{"3":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":3.333333333333333}}}}},"]":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}},";":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812}}},")":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}},"4":{"3":{"8":{"docs":{},".":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":2}}}},"docs":{},".":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":2.5}}}},"5":{"1":{"docs":{},".":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":2}}}},"docs":{}},"8":{"docs":{},".":{"docs":{"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":2.5}}}},"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}},".":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":3.333333333333333}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":3.333333333333333}}}}},"m":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}},"5":{"3":{"docs":{},".":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":2.5}}}},"4":{"docs":{},".":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":2.5068965517241377}}}},"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}},"种":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"单":{"docs":{},"例":{"docs":{},"模":{"docs":{},"式":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"、":{"docs":{},"原":{"docs":{},"理":{"docs":{},"和":{"docs":{},"演":{"docs":{},"化":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625}}},".":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":3.333333333333333}}}},"6":{"2":{"docs":{},"×":{"6":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}},"docs":{}}},"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}},".":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":3.333333333333333}}},"}":{"docs":{},"，":{"docs":{},"则":{"docs":{},"重":{"docs":{},"建":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"并":{"docs":{},"输":{"docs":{},"出":{"docs":{},"它":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}},"7":{"0":{"docs":{},".":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":2.5}}}},"2":{"docs":{},"×":{"7":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}},"docs":{}}},"5":{"docs":{},".":{"docs":{"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":2.5}}}},"6":{"6":{"docs":{},".":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":2.5}}}},"docs":{},".":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":2}}}},"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405}},"}":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"2":{"docs":{},"或":{"docs":{},"者":{"3":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}},",":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625}}},".":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":3.333333333333333}}},";":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}},"8":{"0":{"docs":{},".":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":1.4285714285714284}}}},"2":{"docs":{},"×":{"8":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}},"docs":{}}},"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682}},",":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}},"}":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}},".":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":3.333333333333333}}}},"9":{"0":{"5":{"docs":{},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":2}}}},"docs":{}},"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}},".":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":3.333333333333333}}},"]":{"docs":{},"\"":{"docs":{},",":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}},")":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}},"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.2}}}}}},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}},"e":{"docs":{},"t":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.02586206896551724}},"{":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.018018018018018018}}}}}},"a":{"docs":{},"p":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}},"介":{"docs":{},"绍":{"docs":{"./":{"ref":"./","tf":10.2}}}},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.2}}},"单":{"docs":{},"例":{"docs":{},"模":{"docs":{},"式":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":3.333333333333333}}}}}}}},"本":{"docs":{},"系":{"docs":{},"列":{"docs":{},"页":{"docs":{},"面":{"docs":{},"是":{"docs":{},"把":{"docs":{},"博":{"docs":{},"客":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"文":{"docs":{},"章":{"docs":{},"按":{"docs":{},"照":{"docs":{},"类":{"docs":{},"别":{"docs":{},"聚":{"docs":{},"合":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"，":{"docs":{},"更":{"docs":{},"方":{"docs":{},"便":{"docs":{},"读":{"docs":{},"者":{"docs":{},"对":{"docs":{},"同":{"docs":{},"一":{"docs":{},"类":{"docs":{},"别":{"docs":{},"的":{"docs":{},"文":{"docs":{},"章":{"docs":{},"集":{"docs":{},"中":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"做":{"docs":{},"是":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"拓":{"docs":{},"展":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"和":{"docs":{},"第":{"docs":{"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353}}}}},"解":{"docs":{},"法":{"docs":{},"是":{"docs":{},"借":{"docs":{},"助":{"docs":{},"了":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}},"采":{"docs":{},"用":{"docs":{"./":{"ref":"./","tf":0.2}}}},"(":{"0":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}},"1":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}},"docs":{},")":{"docs":{},"{":{"docs":{},"}":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}},"i":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.02666666666666667},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.018018018018018018},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.03225806451612903},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.017341040462427744},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}},"e":{"docs":{},"g":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}},"2":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}},"docs":{}}}}},"e":{"docs":{},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862}}}}}}}}}}}}},"p":{"docs":{},"[":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},")":{"docs":{},"]":{"docs":{},"+":{"docs":{},"+":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},")":{"docs":{},"]":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}},"n":{"1":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}},"2":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}},"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.028846153846153848},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.03759398496240601}},"u":{"docs":{},"m":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}}}}}}},"+":{"1":{"docs":{},")":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}},"docs":{}}},"r":{"1":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}},"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372}},"o":{"docs":{},"w":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}},"o":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.009345794392523364}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.0196078431372549},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176}}}}}}},",":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}},"t":{"1":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.02072538860103627},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.02072538860103627}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135}}}}}}},"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682}}}}},"c":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}},"u":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077}}}}},"r":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}},"e":{"docs":{},"r":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}},"!":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748}}}}}}}}}}}}}},"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}}}}}}}}}}},"q":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.013157894736842105},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.006166495375128468}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}}}}}}}}}}},"l":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}},"o":{"docs":{},"f":{"docs":{},"p":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}},"n":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}},"docs":{}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}},"o":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564}},"w":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}},"p":{"1":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.02054794520547945}}},"2":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863}}},"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334}}}}}}}}}}}},"o":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.03076923076923077}}}}}}}}}}}}}}}},"a":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802}}}},"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}},"j":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}}}}},";":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216}}}}}}},"s":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}},"b":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"j":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}}}}}}},"docs":{}}}},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},")":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}}}},"d":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044}}}}}}}}}},"docs":{}}}}}},"k":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}}}},"=":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.02586206896551724},"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.046153846153846156},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.04597701149425287},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.056338028169014086},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.1032258064516129},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0625},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.0963855421686747},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.03076923076923077},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.07920792079207921},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.08527131782945736},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.11475409836065574},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.025906735751295335},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.1103448275862069},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.042105263157894736},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.08737864077669903},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.09090909090909091},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.10273972602739725},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.11627906976744186},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.1282051282051282},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.039603960396039604},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.08928571428571429},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.08695652173913043},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.0851063829787234},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.08666666666666667},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.125},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.046153846153846156},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.1103448275862069},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.10144927536231885},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.13043478260869565},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.058823529411764705},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.045454545454545456},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.025906735751295335},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.037383177570093455},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.12121212121212122},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.07547169811320754},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.04672897196261682},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.05405405405405406},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.06557377049180328},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.06666666666666667},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.058823529411764705},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.042105263157894736},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.08823529411764706},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0410958904109589},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.045112781954887216},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.12598425196850394},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.1118421052631579},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.10294117647058823},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.0625},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.06521739130434782},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.04081632653061224},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.09763617677286741},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.0425531914893617},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.034482758620689655},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.08602150537634409},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.07608695652173914},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.09826589595375723},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.08974358974358974},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.07692307692307693},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.13953488372093023},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.037037037037037035},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.03832752613240418}},"=":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827},"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.020512820512820513},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.04597701149425287},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.04950495049504951},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.046632124352331605},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.024271844660194174},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.0196078431372549},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.046632124352331605},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.03278688524590164},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.022556390977443608},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.008221993833504625},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.0425531914893617},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.02564102564102564},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}},"b":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.028037383177570093},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.02702702702702703},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.015544041450777202},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.015544041450777202},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.008221993833504625},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357}},"[":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},"[":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":1.6830218068535825}}},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}},"t":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.018691588785046728}},",":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}},"s":{"docs":{},",":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}},";":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}},"s":{"docs":{},"t":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":1.4285714285714284}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}},"⊕":{"docs":{},"b":{"docs":{},"⊕":{"docs":{},"a":{"docs":{},"=":{"docs":{},"(":{"docs":{},"a":{"docs":{},"⊕":{"docs":{},"a":{"docs":{},")":{"docs":{},"⊕":{"docs":{},"b":{"docs":{},"=":{"0":{"docs":{},"⊕":{"docs":{},"b":{"docs":{},"=":{"docs":{},"b":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}},"docs":{}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}},"u":{"docs":{},"y":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":1.4285714285714284}}},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}}}},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}},")":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176}}},"%":{"2":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},";":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}},"docs":{}}},"c":{"1":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}},"2":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862}}},"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.020689655172413793},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.020689655172413793},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.04938271604938271}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.034482758620689655},"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.025806451612903226},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.024096385542168676},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.028846153846153848},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.03278688524590164},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.02072538860103627},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.024271844660194174},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.017857142857142856},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.0425531914893617},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.02072538860103627},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.014018691588785047},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.03773584905660377},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.018018018018018018},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.019736842105263157},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.013888888888888888},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.03225806451612903},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.02564102564102564},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}}},"i":{"docs":{},"m":{"docs":{},"b":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":2.5}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812}}}}}}}}}}}}}}}},"h":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}},"a":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":1.4285714285714284},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":2}}}},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}},"[":{"2":{"5":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.015748031496062992}}}}},"docs":{}},"docs":{}},"docs":{},"]":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.047244094488188976},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},"]":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}},"e":{"docs":{},"r":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.058823529411764705}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.0425531914893617}},"s":{"docs":{},")":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}},"s":{"docs":{},")":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}},"]":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}},"o":{"docs":{},"r":{"docs":{"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":2.5}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.009345794392523364}}},"x":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.018691588785046728}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}},":":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.020905923344947737}}}}}}}}},"a":{"docs":{},"r":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}},"d":{"docs":{},"e":{"docs":{},"_":{"0":{"7":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}}}}},"docs":{}},"1":{"1":{"docs":{},"_":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}},":":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}},")":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}},"u":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.008221993833504625}},",":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}},"r":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}},")":{"docs":{},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.046153846153846156}},";":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334}}},"y":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}},")":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}},";":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}},"s":{"docs":{},"e":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},"s":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":2}}}}},":":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}},";":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"{":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827}}}},"d":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":1.4285714285714284},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}},"{":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}},".":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}},"(":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":2.5},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":2.5},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":1.6805555555555554},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.013043478260869565},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}},")":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},".":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748}}},"s":{"docs":{},".":{"docs":{},")":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"{":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}}}}}},")":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},".":{"docs":{},"g":{"docs":{},".":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}},"x":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"e":{"docs":{},":":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.017341040462427744}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}}},"[":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.017341040462427744}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.006166495375128468}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"t":{"docs":{},"u":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}},"d":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":1.4619047619047618},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":1.2794117647058822},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":2}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353}}}}}}}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.041666666666666664},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}},";":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.015544041450777202},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.015544041450777202},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.02459016393442623},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.006166495375128468},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.0425531914893617},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}},"。":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"顺":{"docs":{},"利":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}},"s":{"docs":{},"t":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082}},")":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436}}}}}}},"m":{"docs":{"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":1.4285714285714284}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}},"2":{"docs":{},")":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}},"docs":{}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":2}},"y":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748}}}}}}},"i":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}}},"e":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}},"docs":{}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.0425531914893617}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.02586206896551724}},"e":{"docs":{},";":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.04310344827586207}}}}},"t":{"docs":{},"i":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.07179487179487179},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0234375},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.028846153846153848},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.0594059405940594},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.06201550387596899},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.027586206896551724},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.05339805825242718},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.03424657534246575},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.09302325581395349},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.023809523809523808},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.13043478260869565},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.14893617021276595},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.03333333333333333},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.125},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.06153846153846154},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.027586206896551724},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.057971014492753624},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.13043478260869565},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.06818181818181818},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.028037383177570093},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.09090909090909091},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.04504504504504504},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.06666666666666667},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.058823529411764705},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.08823529411764706},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0410958904109589},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.022556390977443608},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.03937007874015748},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.010964912280701754},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.10294117647058823},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.09722222222222222},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.021739130434782608},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.027210884353741496},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.06382978723404255},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.021505376344086023},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.017341040462427744},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.02564102564102564},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.038461538461538464},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.046511627906976744},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}},"*":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.015384615384615385}}},"[":{"1":{"2":{"8":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.031496062992125984}}}}},"docs":{}},"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}}}}},"docs":{},"]":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.058823529411764705},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.031496062992125984},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.03468208092485549},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.0641025641025641},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.017421602787456445}},"[":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}},"n":{"1":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}},"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406}},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}},"docs":{}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304}}},",":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"%":{"2":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}},"docs":{}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"。":{"docs":{},"排":{"docs":{},"序":{"docs":{},"完":{"docs":{},"成":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"原":{"docs":{},"生":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":2},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":1.6794871794871793}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.02564102564102564}}}}}}}}}}}}}}},")":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.0297029702970297}}},"2":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}},")":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}},";":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}},"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.0297029702970297}},";":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}}}},")":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":1.25}},":":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.025806451612903226},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.042105263157894736},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.011682242990654205},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.042105263157894736},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.023121387283236993},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.02564102564102564}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":1.6666666666666665},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":1.6666666666666665},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}}}}}}},"a":{"docs":{},"g":{"docs":{"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":2.5}}}}},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}},"t":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}},"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}},"2":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}},"3":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}},"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":2.5}}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"z":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"j":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.02}},"+":{"1":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334}}},"docs":{}}},"+":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}},";":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},";":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}},"i":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":1.4285714285714284},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":2.018018018018018},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":1.25},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":1.25},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":1.6666666666666665},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":1.6666666666666665}},"。":{"docs":{"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353}}}},")":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"二":{"docs":{},"分":{"docs":{},"搜":{"docs":{},"索":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}},"=":{"0":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}},"docs":{}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}},"j":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.0297029702970297},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.0425531914893617},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.04666666666666667},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.0313588850174216}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"'":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}},"v":{"docs":{},"a":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}},"》":{"docs":{},"上":{"docs":{},"所":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"的":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}},"s":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682}}}}}}}}}}}}},"f":{"docs":{},"x":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{},"详":{"docs":{},"解":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}}}}}}},"d":{"docs":{},"k":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"n":{"1":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.01644398766700925}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.008221993833504625}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.006166495375128468}}}},"2":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.024665981500513873}},"×":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}},"]":{"docs":{},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}}}},"3":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.012332990750256937}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}}}},"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.028846153846153848},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.017857142857142856},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.028037383177570093},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.05263157894736842},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.015748031496062992},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.021505376344086023},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}},"e":{"docs":{},"w":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.02586206896551724},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.03225806451612903},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.03076923076923077},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.020689655172413793},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.042105263157894736},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.02054794520547945},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.020689655172413793},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.03773584905660377},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.042105263157894736},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.047244094488188976},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.015350877192982455},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.017391304347826087},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.02040816326530612},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.02877697841726619},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.03468208092485549},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.05128205128205128},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.046511627906976744},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}}}}}}},"x":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}},"指":{"docs":{},"向":{"docs":{},"双":{"docs":{},"亲":{"docs":{},"结":{"docs":{},"点":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.010964912280701754},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}},"e":{"docs":{},"d":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.006166495375128468},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"g":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.02072538860103627},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.02072538860103627},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.012332990750256937},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.02564102564102564}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.025806451612903226},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.03614457831325301},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.02072538860103627},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.019417475728155338},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.03424657534246575},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.02072538860103627},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.009345794392523364},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.02459016393442623},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.017543859649122806},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.02158273381294964}},"{":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.04819277108433735},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.03278688524590164},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.014563106796116505},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.019736842105263157},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.007194244604316547}}},"，":{"docs":{},"就":{"docs":{},"交":{"docs":{},"换":{"docs":{},"它":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"其":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"镜":{"docs":{},"像":{"docs":{},"化":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"1":{"docs":{},",":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}}},"2":{"docs":{},")":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},")":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}}},"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.02702702702702703},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.023121387283236993}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":2},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":2.5},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":2.027027027027027},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":2.507518796992481}},"s":{"docs":{},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.020512820512820513},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}}},":":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}}}}}}}}}},".":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}},"\"":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}},"s":{"1":{"docs":{},")":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497}},"{":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}},",":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.02564102564102564}}}},"2":{"docs":{},")":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.017341040462427744},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.02564102564102564}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},"{":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}}},"docs":{},",":{"docs":{"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.0425531914893617},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.013888888888888888}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}},")":{"docs":{"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.046153846153846156},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.045454545454545456},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.02702702702702703},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0410958904109589},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.03225806451612903}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}},";":{"docs":{"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}},"docs":{},"i":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.045454545454545456}},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}},"]":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}},";":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}},"j":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}},"k":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}},")":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564}},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}}}}}},"[":{"docs":{},"i":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}},"]":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}},";":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564}}}}},"j":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}},"]":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.04950495049504951}}}}}}}}}}}}},",":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}},";":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497}}},":":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},")":{"docs":{},"{":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}},"docs":{}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.024096385542168676},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":1.4345238095238093},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.011682242990654205},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.013157894736842105},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.02877697841726619}},".":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}},")":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},"s":{"docs":{},".":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.013360739979445015}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.008221993833504625}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.003083247687564234}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"n":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"e":{"docs":{},"l":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}},")":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.028846153846153848},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.022556390977443608},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}},">":{"2":{"docs":{},"n":{"docs":{},">":{"2":{"docs":{},"n":{"docs":{},">":{"2":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}},"docs":{}}}},"docs":{}}}},"docs":{}},"+":{"1":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"要":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"第":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}}}}}}},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"同":{"docs":{},"时":{"docs":{},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"当":{"2":{"docs":{},"号":{"docs":{},"指":{"docs":{},"针":{"docs":{},"变":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"指":{"docs":{},"向":{"docs":{},"了":{"docs":{},"第":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"1":{"docs":{},"号":{"docs":{},"指":{"docs":{},"针":{"docs":{},"应":{"docs":{},"该":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}},";":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}},"t":{"docs":{},"h":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":1.4285714285714284}}}},"n":{"docs":{},"n":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}},"/":{"2":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}},"docs":{}}},"p":{"1":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}},"2":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.02054794520547945}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}},"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.038461538461538464}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.0603448275862069},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.042105263157894736},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.042105263157894736},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}},"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.018499486125385406}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}},"docs":{}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304}}}},"i":{"docs":{},"]":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}},"e":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.013157894736842105}},",":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"]":{"docs":{},"存":{"docs":{},"的":{"docs":{},"是":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}},"v":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}},"指":{"docs":{},"向":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.013157894736842105}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}},"s":{"docs":{},")":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}},"[":{"docs":{},"i":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}},"]":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.0603448275862069},"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.04597701149425287},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.028169014084507043},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.025806451612903226},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.03614457831325301},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.046153846153846156},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.057692307692307696},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.039603960396039604},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.031007751937984496},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.06557377049180328},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.025906735751295335},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.06315789473684211},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.043689320388349516},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.09090909090909091},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.017857142857142856},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.0425531914893617},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.057971014492753624},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.025906735751295335},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.016355140186915886},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.06060606060606061},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.03773584905660377},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.018018018018018018},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.02459016393442623},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.06315789473684211},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.05482456140350877},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.020833333333333332},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.034782608695652174},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.034013605442176874},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.013360739979445015},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.03225806451612903},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.038461538461538464},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}}}},"s":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.046153846153846156},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.021739130434782608},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"执":{"docs":{},"行":{"docs":{},"中":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"应":{"docs":{},"该":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625}}}}}}}},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.013157894736842105}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.010964912280701754}}}}},"p":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}},"(":{"docs":{},")":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}},"t":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}},"i":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"_":{"2":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}},"3":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}},"4":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}},"docs":{}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":2.010452961672474}}},"y":{"docs":{},"/":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}},"i":{"docs":{},"r":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":2.5217391304347827}},",":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}},";":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":2.5},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":2.0020554984583763}}}}}}}}},"s":{"docs":{},"s":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}},")":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.024096385542168676}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.024096385542168676}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}},"c":{"docs":{},"e":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.013888888888888888}},")":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}},",":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}},"p":{"docs":{},"o":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.013888888888888888}},"s":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}},"，":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"都":{"docs":{},"是":{"docs":{},"小":{"docs":{},"于":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}},"根":{"docs":{},"据":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}},")":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}},";":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}},"r":{"1":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}},"2":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}},"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.034482758620689655},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.034482758620689655},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.07407407407407407}},"e":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.02586206896551724},"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.020512820512820513},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.034482758620689655},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0234375},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.03614457831325301},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.0297029702970297},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.03626943005181347},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.020689655172413793},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.03398058252427184},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.020689655172413793},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.03626943005181347},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.014018691588785047},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.018691588785046728},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.02702702702702703},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.040983606557377046},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.03007518796992481},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.013157894736842105},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.027777777777777776},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.02608695652173913},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.05442176870748299},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.014388489208633094},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.06382978723404255},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.034482758620689655},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":1.4285714285714284},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.018018018018018018},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.04411764705882353},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.017341040462427744},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863}},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}}},"docs":{}}}}}}}}}},";":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},")":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}},";":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":1.4285714285714284},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":1.4285714285714284},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":2.521276595744681},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":1.4285714285714284},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.0425531914893617}}}}}}}}}}}}}}}}}}},"v":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":2}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}},"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}}}}},"s":{"docs":{},",":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248}}}}},"o":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}},")":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.019417475728155338},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":2.5},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":1.4619047619047618},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":1.2794117647058822}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.04411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.027777777777777776},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.014388489208633094},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}}},"o":{"docs":{},"f":{"docs":{},"p":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}},"e":{"docs":{},")":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.015625}},"，":{"docs":{},"后":{"docs":{},"来":{"docs":{},"发":{"docs":{},"现":{"docs":{},"不":{"docs":{},"行":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}},",":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.014563106796116505}}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},")":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}},")":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}},";":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}}}}}}}}}}}}},"s":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":2.5},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":2.018018018018018}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.07758620689655173}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.02586206896551724}}},"{":{"docs":{},"}":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827}}}}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},";":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}},"{":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.018018018018018018}}}}}}}}}}}}}}},"i":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}}},"z":{"docs":{},"e":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":1.6666666666666665}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.0603448275862069},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.03773584905660377},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.017543859649122806},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.007194244604316547}}}}},"r":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.015384615384615385},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.014563106796116505}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.015384615384615385}}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.015384615384615385}}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256}}}}},"c":{"docs":{},"k":{"1":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}}}}},";":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}},"2":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748}}}}}}}}}}},"docs":{}}}}}}}}}}}},";":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}},"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.012903225806451613},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.03076923076923077},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":2.5},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":1.6753623188405795},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":1.6666666666666665},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.008221993833504625}},".":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.03076923076923077},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},";":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},";":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}}}}}}}},"i":{"docs":{},"r":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":2.5}}}}},"r":{"1":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}},"2":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}},"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"1":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}},"docs":{}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"2":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.056338028169014086}}},"docs":{}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":2.513333333333333},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.0196078431372549},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.03773584905660377},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":2.531496062992126},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":2.0128205128205128},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}},"[":{"2":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}},"docs":{}},"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.03260869565217391}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}},"c":{"docs":{},"k":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":1.4285714285714284}}}}},"e":{"docs":{},"p":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.017241379310344827}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.009249743062692703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"3":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.009249743062692703}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}},"|":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.009249743062692703}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.009249743062692703}}}}}}}}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":2.505181347150259}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.028846153846153848},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.019417475728155338},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.0425531914893617},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.03773584905660377},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.018018018018018018},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.013888888888888888},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.03225806451612903},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.02564102564102564},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}}},"r":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":1.4285714285714284},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":2.5},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":1.4285714285714284},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":1.4619047619047618},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":1.2794117647058822},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":1.25},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":2},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":2.010452961672474}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216}}}}}}}}}}}}}},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}},"docs":{}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}},";":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"[":{"docs":{},"^":{"docs":{},"a":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.015748031496062992},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}},")":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}},"{":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":2.5},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":1.25},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":1.6813725490196076}},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":1.4285714285714284},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":2}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":2.5},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":1.6666666666666665}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},":":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}},"e":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},"e":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":1.6666666666666665}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406}}}}}},"l":{"docs":{},"l":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":1.4285714285714284}}}},"t":{"1":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}}},"2":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}}},"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":2.5068965517241377}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.009345794392523364},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.006166495375128468},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.013937282229965157}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}},")":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}},"b":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}},"docs":{}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}},"docs":{}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}}}}},",":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}},"p":{"docs":{},"l":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}},"v":{"docs":{},"e":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125}}}},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}},"n":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}},"h":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":1.6666666666666665},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":1.6666666666666665}}},"n":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.034482758620689655}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"4":{"2":{"docs":{},"'":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}},"docs":{}},"docs":{}}}}}}}},"{":{"0":{"docs":{},",":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}},"1":{"docs":{},",":{"2":{"docs":{},",":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}},"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}},"2":{"docs":{},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},"4":{"docs":{},",":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}},"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.02586206896551724},"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.035897435897435895},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.05747126436781609},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.07042253521126761},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.07741935483870968},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.03125},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.08433734939759036},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.046153846153846156},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.057692307692307696},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.09900990099009901},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.05426356589147287},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.06557377049180328},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.05181347150259067},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.027586206896551724},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.08421052631578947},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.05825242718446602},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.09090909090909091},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0547945205479452},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.06976744186046512},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.07692307692307693},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.047619047619047616},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.08695652173913043},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.0851063829787234},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.03333333333333333},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.0625},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.09230769230769231},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.027586206896551724},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.08695652173913043},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.08695652173913043},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.06818181818181818},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.05181347150259067},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.04205607476635514},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.06060606060606061},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.07547169811320754},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.018691588785046728},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.04504504504504504},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.09016393442622951},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.1},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.08823529411764706},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.08421052631578947},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.058823529411764705},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0821917808219178},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.07518796992481203},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.047244094488188976},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.06359649122807018},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.07352941176470588},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.05555555555555555},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.05652173913043478},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.09523809523809523},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.041109969167523124},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.0425531914893617},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.05747126436781609},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.0967741935483871},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.043478260869565216},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.04046242774566474},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.0641025641025641},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.05128205128205128},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.06976744186046512},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.06172839506172839},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.024390243902439025}},"{":{"0":{"docs":{},",":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}},"docs":{}}},"}":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.08620689655172414},"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.02564102564102564},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.034482758620689655},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.07042253521126761},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.07741935483870968},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.03125},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.08433734939759036},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.046153846153846156},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.04950495049504951},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.046511627906976744},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.08196721311475409},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.05181347150259067},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.027586206896551724},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.042105263157894736},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.06310679611650485},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0547945205479452},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.06976744186046512},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.03571428571428571},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.03333333333333333},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.06153846153846154},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.027586206896551724},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.045454545454545456},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.05181347150259067},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.03271028037383177},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.09090909090909091},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.03773584905660377},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.018691588785046728},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.036036036036036036},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.09016393442622951},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.042105263157894736},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0821917808219178},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.07518796992481203},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.06359649122807018},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.058823529411764705},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.04861111111111111},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.04782608695652174},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.09523809523809523},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.041109969167523124},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.14893617021276595},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.04597701149425287},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.03225806451612903},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.06358381502890173},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.02564102564102564},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.046511627906976744},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.06172839506172839},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.020905923344947737}},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"{":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}}},"《":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}},"不":{"docs":{},"好":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"二":{"docs":{},"：":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"能":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"但":{"docs":{},"效":{"docs":{},"率":{"docs":{},"不":{"docs":{},"高":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"法":{"docs":{},"一":{"docs":{},"：":{"docs":{},"只":{"docs":{},"适":{"docs":{},"合":{"docs":{},"于":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}},"是":{"docs":{},"线":{"docs":{},"性":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"两":{"docs":{},"者":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"颗":{"docs":{},"只":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"没":{"docs":{},"有":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"在":{"docs":{},"重":{"docs":{},"建":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"把":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}},"那":{"docs":{},"么":{"docs":{},"直":{"docs":{},"接":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}}}}},"过":{"docs":{},"这":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"同":{"docs":{},"样":{"docs":{},"是":{"docs":{},"有":{"docs":{},"限":{"docs":{},"状":{"docs":{},"态":{"docs":{},"机":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"有":{"docs":{},"好":{"docs":{},"几":{"docs":{},"个":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"核":{"docs":{},"心":{"docs":{},"应":{"docs":{},"该":{"docs":{},"都":{"docs":{},"是":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"三":{"docs":{},"进":{"docs":{},"制":{"docs":{},"的":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"。":{"docs":{},"我":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"对":{"docs":{},"我":{"docs":{},"而":{"docs":{},"言":{"docs":{},"是":{"docs":{},"真":{"docs":{},"的":{"docs":{},"很":{"docs":{},"难":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"完":{"docs":{},"完":{"docs":{},"全":{"docs":{},"全":{"docs":{},"理":{"docs":{},"解":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"先":{"docs":{},"把":{"docs":{},"几":{"docs":{},"个":{"docs":{},"解":{"docs":{},"释":{"docs":{},"的":{"docs":{},"帖":{"docs":{},"子":{"docs":{},"记":{"docs":{},"下":{"docs":{},"来":{"docs":{},"，":{"docs":{},"等":{"docs":{},"到":{"docs":{},"有":{"docs":{},"时":{"docs":{},"间":{"docs":{},"再":{"docs":{},"来":{"docs":{},"攻":{"docs":{},"克":{"docs":{},"。":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"建":{"docs":{},"立":{"docs":{},"字":{"docs":{},"母":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"把":{"docs":{},"要":{"docs":{},"建":{"docs":{},"立":{"docs":{},"映":{"docs":{},"射":{"docs":{},"关":{"docs":{},"系":{"docs":{},"的":{"docs":{},"字":{"docs":{},"母":{"docs":{},"同":{"docs":{},"时":{"docs":{},"映":{"docs":{},"射":{"docs":{},"到":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"建":{"docs":{},"立":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"间":{"docs":{},"接":{"docs":{},"映":{"docs":{},"射":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"对":{"docs":{},"原":{"docs":{},"生":{"docs":{},"类":{"docs":{},"型":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"要":{"docs":{},"对":{"docs":{},"原":{"docs":{},"生":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"，":{"docs":{},"把":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"外":{"docs":{},"没":{"docs":{},"有":{"docs":{},"办":{"docs":{},"法":{"docs":{},"访":{"docs":{},"问":{"docs":{},"它":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"它":{"docs":{},"是":{"docs":{},"懒":{"docs":{},"汉":{"docs":{},"式":{"docs":{},"的":{"docs":{},"；":{"docs":{},"同":{"docs":{},"时":{"docs":{},"读":{"docs":{},"取":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"性":{"docs":{},"能":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"；":{"docs":{},"也":{"docs":{},"不":{"docs":{},"依":{"docs":{},"赖":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"。":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385}}}}}}}}}}}},"间":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"动":{"docs":{},"态":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"根":{"docs":{},"据":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"内":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"和":{"docs":{},"与":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"作":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"确":{"docs":{},"定":{"docs":{},"是":{"docs":{},"收":{"docs":{},"缩":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"还":{"docs":{},"是":{"docs":{},"向":{"docs":{},"右":{"docs":{},"扩":{"docs":{},"大":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"，":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}},"枚":{"docs":{},"举":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}},"一":{"docs":{},"个":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}},"布":{"docs":{},"尔":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"标":{"docs":{},"记":{"docs":{},"所":{"docs":{},"有":{"docs":{},"格":{"docs":{},"子":{"docs":{},"是":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"了":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"输":{"docs":{},"入":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"比":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"判":{"docs":{},"断":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"判":{"docs":{},"断":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{},"递":{"docs":{},"归":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"实":{"docs":{},"参":{"docs":{},"都":{"docs":{},"填":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"作":{"docs":{},"为":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"来":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"把":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"按":{"docs":{},"照":{"docs":{},"以":{"docs":{},"下":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"：":{"docs":{},"①":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"②":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"③":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"④":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{},"。":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.010526315789473684},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085}}}}}}}}}},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"和":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}}}}},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{},"，":{"docs":{},"等":{"docs":{},"到":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"走":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"时":{"docs":{},"，":{"docs":{},"把":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"从":{"docs":{},"头":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"向":{"docs":{},"中":{"docs":{},"间":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"相":{"docs":{},"互":{"docs":{},"对":{"docs":{},"比":{"docs":{},"。":{"docs":{},"判":{"docs":{},"断":{"docs":{},"之":{"docs":{},"后":{"docs":{},"先":{"docs":{},"把":{"docs":{},"结":{"docs":{},"果":{"docs":{},"存":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{},"链":{"docs":{},"表":{"docs":{},"结":{"docs":{},"构":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}}}},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"多":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"并":{"docs":{},"不":{"docs":{},"够":{"docs":{},"高":{"docs":{},"效":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":3.333333333333333},"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":3.333333333333333},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":3.333333333333333},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":3.333333333333333},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":3.333333333333333},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":3.333333333333333},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":3.333333333333333},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":3.333333333333333},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":3.333333333333333},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":3.333333333333333},"jian-zhi-offer/20190304 - 剑指Offer 12. 矩阵中的路径.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 12. 矩阵中的路径.html","tf":3.333333333333333},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":3.341085271317829},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":3.333333333333333},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":3.338514680483592},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":3.3402298850574708},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":2},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":3.338187702265372},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}},":":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"（":{"docs":{},"递":{"docs":{},"归":{"docs":{},"&":{"docs":{},"&":{"docs":{},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{},"）":{"docs":{},"（":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"）":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"加":{"1":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}},"docs":{},"上":{"docs":{},"了":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}},"参":{"docs":{},"考":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}},"资":{"docs":{},"料":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}},"文":{"docs":{},"献":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}},"数":{"docs":{},":":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}},"如":{"docs":{},"何":{"docs":{},"正":{"docs":{},"确":{"docs":{},"地":{"docs":{},"写":{"docs":{},"出":{"docs":{},"单":{"docs":{},"例":{"docs":{},"模":{"docs":{},"式":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}},"果":{"docs":{},"此":{"docs":{},"题":{"docs":{},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{},"【":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"该":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"统":{"docs":{},"计":{"docs":{},"该":{"docs":{},"整":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"】":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"？":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"前":{"docs":{},"向":{"docs":{},"后":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"空":{"docs":{},"格":{"docs":{},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{},"空":{"docs":{},"格":{"docs":{},"替":{"docs":{},"换":{"docs":{},"成":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"1":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"第":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}},"2":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"第":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}},"docs":{},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"第":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"为":{"docs":{},"真":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}},"某":{"docs":{},"个":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"是":{"1":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"和":{"docs":{},"结":{"docs":{},"果":{"docs":{},"进":{"docs":{},"行":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}}}},"docs":{}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"多":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"慢":{"docs":{},"的":{"docs":{},"，":{"docs":{},"优":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"运":{"docs":{},"行":{"docs":{},"总":{"docs":{},"时":{"docs":{},"间":{"docs":{},"由":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}},"不":{"docs":{},"会":{"docs":{},"为":{"docs":{},"零":{"docs":{},"的":{"docs":{},"。":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}},"这":{"docs":{},"种":{"docs":{},"写":{"docs":{},"法":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"使":{"docs":{},"用":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},"本":{"docs":{},"身":{"docs":{},"机":{"docs":{},"制":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"问":{"docs":{},"题":{"docs":{},"；":{"docs":{},"由":{"docs":{},"于":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"懒":{"docs":{},"加":{"docs":{},"载":{"docs":{},"（":{"docs":{},"惰":{"docs":{},"性":{"docs":{},"加":{"docs":{},"载":{"docs":{},"）":{"docs":{},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"创":{"docs":{},"建":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"：":{"docs":{},"当":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"发":{"docs":{},"调":{"docs":{},"用":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"式":{"docs":{},"访":{"docs":{},"问":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"把":{"docs":{},"字":{"docs":{},"符":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"要":{"docs":{},"求":{"docs":{},"贴":{"docs":{},"近":{"docs":{},"底":{"docs":{},"层":{"docs":{},"的":{"docs":{},"思":{"docs":{},"考":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"对":{"docs":{},"字":{"docs":{},"符":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}},"才":{"docs":{},"是":{"docs":{},"真":{"docs":{},"的":{"docs":{},"全":{"docs":{},"自":{"docs":{},"动":{"docs":{},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"打":{"docs":{},"印":{"docs":{},"。":{"docs":{},"设":{"docs":{},"计":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"基":{"docs":{},"于":{"docs":{},"一":{"docs":{},"下":{"docs":{},"规":{"docs":{},"律":{"docs":{},"：":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}},"叫":{"docs":{},"做":{"docs":{},"摩":{"docs":{},"尔":{"docs":{},"计":{"docs":{},"数":{"docs":{},"法":{"docs":{},"（":{"docs":{},"b":{"docs":{},"o":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}}}}}}}}}}}}},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"众":{"docs":{},"数":{"docs":{},"一":{"docs":{},"定":{"docs":{},"位":{"docs":{},"于":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"对":{"docs":{},"应":{"docs":{},"两":{"docs":{},"种":{"docs":{},"映":{"docs":{},"射":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"都":{"docs":{},"是":{"docs":{},"字":{"docs":{},"符":{"docs":{},"映":{"docs":{},"射":{"docs":{},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"上":{"docs":{},"边":{"docs":{},"使":{"docs":{},"用":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}},"解":{"docs":{},"答":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"保":{"docs":{},"留":{"docs":{},"最":{"docs":{},"多":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}}}}}}}}}}}},"法":{"docs":{},"只":{"docs":{},"适":{"docs":{},"合":{"docs":{},"于":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}},"值":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}}}},"是":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}},"判":{"docs":{},"断":{"docs":{},"其":{"docs":{},"实":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"要":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"只":{"docs":{},"要":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"看":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}},"么":{"docs":{},"一":{"docs":{},"组":{"docs":{},"数":{"docs":{},"就":{"docs":{},"表":{"docs":{},"示":{"docs":{},"下":{"docs":{},"一":{"docs":{},"步":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"走":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"越":{"docs":{},"界":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}},"道":{"docs":{},"题":{"docs":{},"可":{"docs":{},"以":{"docs":{},"和":{"docs":{},"第":{"2":{"8":{"3":{"docs":{},"题":{"docs":{"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085}}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"句":{"docs":{},"，":{"docs":{},"不":{"docs":{},"论":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}},"样":{"docs":{},"就":{"docs":{},"解":{"docs":{},"出":{"docs":{},"题":{"docs":{},"目":{"docs":{},"。":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"不":{"docs":{},"同":{"docs":{},"位":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"总":{"docs":{},"共":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"两":{"docs":{},"次":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"ref":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","tf":0.008620689655172414}}}}}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}},"&":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.02702702702702703}},"&":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.031007751937984496},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.02072538860103627},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.02072538860103627},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.006166495375128468},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357}}}},"+":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.015384615384615385},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.046875},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.0891089108910891},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.03333333333333333},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.04411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.02877697841726619},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},"=":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405}}},"+":{"docs":{},"i":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"换":{"docs":{},"成":{"docs":{},"下":{"docs":{},"一":{"docs":{},"种":{"docs":{},"走":{"docs":{},"法":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"圈":{"docs":{},"使":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"行":{"docs":{},"数":{"docs":{},"和":{"docs":{},"列":{"docs":{},"数":{"docs":{},"来":{"docs":{},"判":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"越":{"docs":{},"界":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"圈":{"docs":{},"就":{"docs":{},"要":{"docs":{},"靠":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669}}}}},"/":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.011682242990654205},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}},"/":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.035897435897435895},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.012903225806451613},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0234375},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.04950495049504951},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.03699897225077081}},"在":{"docs":{},"完":{"docs":{},"成":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"的":{"docs":{},"替":{"docs":{},"换":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{},"等":{"docs":{},"于":{"docs":{},"p":{"2":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}}}}},"=":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}},"*":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}},"*":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.034782608695652174},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.04081632653061224}}}}},">":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.03007518796992481},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.014388489208633094},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.037037037037037035},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},">":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}},"=":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.02},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}},"a":{"docs":{},"y":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":1.4285714285714284},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":1.4285714285714284},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":1.4285714285714284},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":1.2794117647058822},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":1.25},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":1.673611111111111},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":2.005780346820809},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":1.6666666666666665},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":2.0209059233449476}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.04516129032258064},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}},">":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}}},"2":{"docs":{},"]":{"docs":{},")":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802}}}}},"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.042105263157894736},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.042105263157894736},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564}}}},"s":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}},"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}},"docs":{}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}},"docs":{}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497}}}}}}}}}}}}}}}}}},"。":{"docs":{"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333}}},",":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}},"n":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.0297029702970297},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"r":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}},"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}},"docs":{}}}}}}}}}}}}}}}}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.020689655172413793},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.020689655172413793}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":2.5},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":2}}}}}}}},"d":{"docs":{},"d":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":2}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}},"(":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},"i":{"docs":{},"t":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"）":{"docs":{},"。":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"减":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}},")":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}},"a":{"docs":{},"⊕":{"0":{"docs":{},"=":{"docs":{},"a":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}},"docs":{}}},"⊕":{"0":{"docs":{},"=":{"docs":{},"a":{"docs":{},"a":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}},"docs":{},"a":{"docs":{},"=":{"0":{"docs":{},"a":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"docs":{}}},"b":{"docs":{},"⊕":{"docs":{},"a":{"docs":{},"=":{"docs":{},"(":{"docs":{},"a":{"docs":{},"⊕":{"docs":{},"a":{"docs":{},")":{"docs":{},"⊕":{"docs":{},"b":{"docs":{},"=":{"0":{"docs":{},"⊕":{"docs":{},"b":{"docs":{},"=":{"docs":{},"b":{"docs":{},"a":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}},"docs":{}}}}}}}}}}}}}},"|":{"docs":{},"b":{"docs":{},";":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}},",":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.013937282229965157}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}},";":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},";":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"j":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}},";":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"k":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}},"d":{"1":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334}}},"2":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}},"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.022556390977443608}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":1.4285714285714284},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":1.4285714285714284},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}}},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904}},";":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}},";":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.017857142857142856}}}},"i":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904}}}}}},"o":{"docs":{},"c":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}},"w":{"docs":{},"n":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.03070175438596491}},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}},"4":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}}}},"q":{"docs":{},"u":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.042105263157894736},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.042105263157894736},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.013605442176870748}}}},"e":{"docs":{},"p":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669}},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":1.6830218068535825}},".":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}},"s":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"f":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"f":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}},")":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}},"p":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406}},"[":{"1":{"docs":{},"]":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406}}}},"2":{"docs":{},"]":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406}}}},"docs":{},"i":{"docs":{},"]":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077}}}}}},";":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}},"l":{"1":{"docs":{},",":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}},"2":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}},"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372}},"e":{"docs":{},"n":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.041666666666666664},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.015384615384615385},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.017857142857142856},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.020512820512820513}}},":":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}},"_":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}},"p":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}},"f":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.0392156862745098},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.04411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.020833333333333332},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}},"p":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0390625}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0234375}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.014563106796116505}}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}},")":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}},",":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}},"]":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":2.5},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":2},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":1.4285714285714284},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":3.333333333333333},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":3.333333333333333},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":1.4345238095238093},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":1.4285714285714284},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":2.5},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":2.5},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":2.5},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":2.5},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":2.5068965517241377},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":2.5},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":2.5},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":2},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":1.4285714285714284},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":2.505181347150259},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":1.6666666666666665},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":1.4285714285714284},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":2.5},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":2.5},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":2.027027027027027},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":2.0081967213114753},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":1.4619047619047618},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":1.2794117647058822},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":2.5},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":1.25},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":2.5},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":2.5},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":2.5},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":2},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":1.6666666666666665},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":1.6666666666666665},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":1.6666666666666665},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":1.6666666666666665},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":2},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":1.6666666666666665},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":2.5114942528735633},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":2.5},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":2.5},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":2},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":1.6666666666666665},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":2},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":2},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":2.5},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":2}},"e":{"docs":{},"官":{"docs":{},"方":{"docs":{},"题":{"docs":{},"解":{"docs":{},"及":{"docs":{},"解":{"docs":{},"析":{"docs":{},"：":{"1":{"0":{"4":{"docs":{},".":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}},"docs":{}},"docs":{}},"9":{"0":{"5":{"docs":{},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}},"a":{"docs":{},"f":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.027586206896551724},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.019801980198019802},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":1.4285714285714284},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.027586206896551724},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":2},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":2},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":2.0020554984583763},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.02564102564102564}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.03870967741935484},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0547945205479452},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.05357142857142857},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.03278688524590164},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.021929824561403508}},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904}}}}},"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.012903225806451613}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.012903225806451613}}}}}}}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.012903225806451613}}}}}}},".":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}},">":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.05128205128205128},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},":":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}},"n":{"docs":{},"k":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":2.0081967213114753},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":2.0065789473684212},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":2}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}},">":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}},"r":{"docs":{},"g":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}},"e":{"docs":{},",":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}},"s":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":1.673611111111111}}}}}}}},"o":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":1.4285714285714284},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}},"w":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}},"o":{"docs":{},"k":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"，":{"docs":{},"向":{"docs":{},"后":{"docs":{},"看":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"是":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}},"p":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}}}}}},"m":{"1":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.015748031496062992}}},"2":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.015748031496062992}}},"docs":{},"i":{"docs":{},"d":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.008221993833504625}},"d":{"docs":{},"l":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}}}}},"n":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":2},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":2.5},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.023121387283236993}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.019801980198019802}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}},"(":{"docs":{},")":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}}}}}}}},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":2},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":1.4619047619047618},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":1.2794117647058822},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":1.6666666666666665}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304}},"e":{"docs":{},";":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176}}}}}}}}}},"]":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497}},")":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":2.5068965517241377},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":1.6666666666666665},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":2.5}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}},",":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}}}}},"docs":{},"r":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{},"]":{"docs":{},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436}},"{":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.0425531914893617}}}}}}}}}}}}}}},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{},")":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}},",":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}}}}}},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}},",":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"d":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}}},"x":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}},"docs":{}}},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}}}}}}}}}}}}}}},";":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":2.5},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":1.673676012461059}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077}}}}}}}}}}}}}},"m":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077}},")":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.06060606060606061}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304}}}}}},")":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304}}},";":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304}}}}}}}}}},"p":{"docs":{"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.029411764705882353},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.05128205128205128},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},"]":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.0196078431372549}}}}},"c":{"docs":{},"'":{"docs":{},"]":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}},"c":{"docs":{},"]":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}}}}},"h":{"docs":{},"]":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}},";":{"docs":{"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}},"docs":{}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}},"docs":{}}}}}}}}}},"，":{"docs":{},"把":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}},"i":{"docs":{},"n":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":2.5}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248}}}}}}}}}}}}}},"e":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":2.5}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.03225806451612903}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":2.5}}},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.017391304347826087}},"(":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044}},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.02040816326530612}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}},";":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}}}}}},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{},")":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}},"由":{"docs":{},"于":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"对":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}}},".":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.011682242990654205}}}}}}}}}}}},"/":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"h":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"h":{"docs":{},")":{"docs":{},"。":{"docs":{},"m":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}}}},"m":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"m":{"docs":{},")":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.06153846153846154}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},":":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}},"n":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}},"t":{"docs":{},"o":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044}}}},"e":{"docs":{},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}},"b":{"docs":{},"j":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}},"d":{"docs":{},"d":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}},"i":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":2.5},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":2.5}}}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.0425531914893617},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.012903225806451613},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.024096385542168676},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}},"u":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}},"e":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}},"，":{"docs":{},"并":{"docs":{},"把":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.03225806451612903}}}},"t":{"docs":{},"e":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},"e":{"docs":{},"d":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}},"docs":{}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"!":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}}}}},"docs":{}}}}},"i":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":1.4285714285714284}}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":2}}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}},"d":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":2.510869565217391}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608}}}}}}}}}}}}}}}},"a":{"docs":{},"y":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}},"e":{"docs":{},"'":{"docs":{},"l":{"docs":{},"l":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}},"|":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.02774922918807811}},"|":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0041109969167523125},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.02564102564102564}}},"=":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}},"一":{"docs":{},"个":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}},"格":{"docs":{},"子":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"线":{"docs":{},"性":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"和":{"docs":{},"列":{"docs":{},"数":{"docs":{},"算":{"docs":{},"出":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"青":{"docs":{},"蛙":{"docs":{},"一":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"上":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}},"直":{"docs":{},"加":{"docs":{},"，":{"docs":{},"用":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385}}}}},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"断":{"docs":{},"被":{"docs":{},"返":{"docs":{},"回":{"docs":{},"到":{"docs":{},"上":{"docs":{},"一":{"docs":{},"层":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}}}}}}}}}}}}}}}}}},"头":{"docs":{},"一":{"docs":{},"尾":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"不":{"docs":{},"断":{"docs":{},"向":{"docs":{},"中":{"docs":{},"间":{"docs":{},"靠":{"docs":{},"拢":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}},"个":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"去":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"和":{"docs":{},"第":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"判":{"docs":{},"断":{"docs":{},"这":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},".":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}},"。":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.017857142857142856}}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}},"即":{"docs":{},"第":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}}}},"元":{"docs":{},"素":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"出":{"docs":{},"现":{"docs":{},"两":{"docs":{},"次":{"docs":{},"，":{"docs":{},"让":{"docs":{},"你":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"几":{"docs":{},"，":{"docs":{},"要":{"docs":{},"求":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"作":{"docs":{},"者":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436}}}}}}},"到":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.03076923076923077},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"在":{"1":{"docs":{},"到":{"docs":{},"n":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"。":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"能":{"docs":{},"修":{"docs":{},"改":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"入":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"8":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"{":{"2":{"docs":{},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"在":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"（":{"docs":{},"每":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"相":{"docs":{},"同":{"docs":{},"）":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"都":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"列":{"docs":{},"都":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"请":{"docs":{},"完":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"含":{"docs":{},"有":{"docs":{},"该":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"中":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"最":{"docs":{},"快":{"docs":{},"方":{"docs":{},"法":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"分":{"docs":{},"析":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.021505376344086023},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.011560693641618497},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}},"总":{"docs":{},"结":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},"把":{"docs":{},"值":{"docs":{},"为":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"看":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"右":{"docs":{},"上":{"docs":{},"角":{"docs":{},"或":{"docs":{},"者":{"docs":{},"左":{"docs":{},"下":{"docs":{},"角":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{},"逐":{"docs":{},"步":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"比":{"docs":{},"较":{"docs":{},"范":{"docs":{},"围":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"直":{"docs":{},"接":{"docs":{},"根":{"docs":{},"据":{"docs":{},"序":{"docs":{},"号":{"docs":{},"返":{"docs":{},"回":{"docs":{},"对":{"docs":{},"应":{"docs":{},"值":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"看":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"放":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"和":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":3.333333333333333}}}}}}}},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},"算":{"docs":{},"法":{"docs":{},"要":{"docs":{},"快":{"docs":{},"。":{"docs":{},"上":{"docs":{},"边":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"优":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"是":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}},"效":{"docs":{},"率":{"docs":{},"更":{"docs":{},"高":{"docs":{},"？":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}},"比":{"docs":{},"使":{"docs":{},"用":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}},"为":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}},"和":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"进":{"docs":{},"行":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.006968641114982578}},"为":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}},"对":{"docs":{},"数":{"docs":{},"级":{"docs":{},"别":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}}}}},"：":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.021505376344086023}},"。":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}}}}}},"降":{"docs":{},"到":{"docs":{},"了":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385}}}}}}}}},"，":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}},"正":{"docs":{},"数":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},"牛":{"docs":{},"客":{"docs":{},"网":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}},"的":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}},"元":{"docs":{},"素":{"docs":{},"放":{"docs":{},"到":{"docs":{},"第":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"。":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"某":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"重":{"docs":{},"复":{"docs":{},"了":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"重":{"docs":{},"复":{"docs":{},"了":{"docs":{},"几":{"docs":{},"次":{"docs":{},"。":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"入":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"7":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}},"，":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}},"直":{"docs":{},"接":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}},"如":{"docs":{},"果":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"压":{"docs":{},"入":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"每":{"docs":{},"次":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"栈":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"的":{"docs":{},"数":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"作":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"把":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"也":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.010526315789473684},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}},"先":{"docs":{},"把":{"docs":{},"元":{"docs":{},"素":{"docs":{},"加":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"自":{"docs":{},"己":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"让":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"n":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"，":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"？":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}},"小":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"无":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"地":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"一":{"docs":{},"个":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}},"横":{"docs":{},"着":{"docs":{},"或":{"docs":{},"者":{"docs":{},"竖":{"docs":{},"着":{"docs":{},"去":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"。":{"docs":{},"请":{"docs":{},"问":{"docs":{},"用":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.019230769230769232}}}}},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"相":{"docs":{},"乘":{"docs":{},"，":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"的":{"docs":{},"位":{"docs":{},"数":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}},"量":{"docs":{},"已":{"docs":{},"经":{"docs":{},"足":{"docs":{},"够":{"docs":{},"了":{"docs":{},"。":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}},"类":{"docs":{},"库":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}},"位":{"docs":{},"都":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"找":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"位":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"做":{"docs":{},"异":{"docs":{},"或":{"docs":{},"，":{"docs":{},"得":{"docs":{},"出":{"docs":{},"的":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"系":{"docs":{},"就":{"docs":{},"能":{"docs":{},"确":{"docs":{},"定":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"继":{"docs":{},"续":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"是":{"docs":{},"在":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}},"库":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"通":{"docs":{},"用":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"只":{"docs":{},"有":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}},"相":{"docs":{},"关":{"docs":{},"链":{"docs":{},"接":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}},"当":{"docs":{},"于":{"docs":{},"把":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"了":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"递":{"docs":{},"归":{"docs":{},"调":{"docs":{},"用":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"，":{"docs":{},"p":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"条":{"docs":{},"对":{"docs":{},"角":{"docs":{},"线":{"docs":{},"上":{"docs":{},"的":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"作":{"docs":{},"同":{"docs":{},"一":{"docs":{},"组":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"法":{"1":{"docs":{},"[":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},"：":{"docs":{},"数":{"docs":{},"数":{"docs":{},"判":{"docs":{},"定":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"]":{"docs":{},"：":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}},"动":{"docs":{},"态":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"加":{"docs":{},"判":{"docs":{},"断":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}},"从":{"docs":{},"后":{"docs":{},"向":{"docs":{},"前":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"并":{"docs":{},"替":{"docs":{},"换":{"docs":{},"空":{"docs":{},"格":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}}}}}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}}}}}}}}}}}},"只":{"docs":{},"适":{"docs":{},"合":{"docs":{},"对":{"docs":{},"数":{"docs":{},"字":{"docs":{},"型":{"docs":{},"问":{"docs":{},"题":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"重":{"docs":{},"复":{"docs":{},"。":{"docs":{},"解":{"docs":{},"法":{"2":{"docs":{},"和":{"docs":{},"解":{"docs":{},"法":{"3":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{},"重":{"docs":{},"复":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"利":{"docs":{},"用":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}}}}}}}},"2":{"docs":{},"[":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"]":{"docs":{},"：":{"docs":{},"排":{"docs":{},"序":{"docs":{},"然":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}},"打":{"docs":{},"表":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}}}}}}}}}}}}},"：":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}},"3":{"docs":{},"[":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"]":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"​":{"2":{"docs":{},"​":{"docs":{},"​":{"docs":{},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}},"答":{"1":{"docs":{},"[":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"]":{"docs":{"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085}},"：":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.019230769230769232},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"ref":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","tf":0.03333333333333333},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}},"使":{"docs":{},"用":{"docs":{},"栈":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}},"递":{"docs":{},"归":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}},"算":{"docs":{},"法":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}},"二":{"docs":{},"次":{"docs":{},"筛":{"docs":{},"选":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}},":":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}},"：":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.010526315789473684},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.010526315789473684}}},"小":{"docs":{},"优":{"docs":{},"化":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}},"2":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}},"[":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}},"：":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.010526315789473684},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.010526315789473684},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}},"使":{"docs":{},"用":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"重":{"docs":{},"建":{"docs":{},"链":{"docs":{},"表":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}}}}},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}},"算":{"docs":{},"法":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}},"，":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}},"有":{"docs":{},"限":{"docs":{},"状":{"docs":{},"态":{"docs":{},"机":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}},"神":{"docs":{},"奇":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}}}}}}}},"3":{"docs":{},"[":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"]":{"docs":{},"：":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}},"递":{"docs":{},"归":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"快":{"docs":{},"排":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}}}},"docs":{"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353}},"[":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"]":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}}}}}}},"负":{"docs":{},"数":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}},"输":{"docs":{},"入":{"docs":{},"无":{"docs":{},"效":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}},"有":{"docs":{},"效":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"为":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"按":{"docs":{},"链":{"docs":{},"表":{"docs":{},"值":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"到":{"docs":{},"头":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},":":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.005128205128205128}}}}}},"题":{"docs":{},"目":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.028846153846153848},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"：":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}},"请":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"把":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"替":{"docs":{},"换":{"docs":{},"成":{"docs":{},"\"":{"docs":{},"%":{"2":{"0":{"docs":{},"\"":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"某":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"请":{"docs":{},"重":{"docs":{},"建":{"docs":{},"出":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"都":{"docs":{},"不":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"源":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"解":{"docs":{},"析":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"ref":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","tf":0.029411764705882353}}}}}}}}}}}}}}},"（":{"1":{"docs":{},"）":{"docs":{},"找":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.015384615384615385}}}}}}}}}}}},"a":{"docs":{},"的":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"是":{"1":{"docs":{},"，":{"docs":{},"b":{"docs":{},"的":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"是":{"0":{"docs":{},"；":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}}}},"2":{"docs":{},"）":{"docs":{},"不":{"docs":{},"修":{"docs":{},"改":{"docs":{},"数":{"docs":{},"组":{"docs":{},"找":{"docs":{},"出":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","tf":0.010256410256410256}}}}}}}}}}}}}},"a":{"docs":{},"的":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"是":{"0":{"docs":{},"，":{"docs":{},"b":{"docs":{},"的":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"是":{"1":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}}},"行":{"8":{"docs":{},"列":{"docs":{},"）":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"，":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}},"docs":{}}},"docs":{}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}},"[":{"0":{"docs":{},",":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}},"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},"输":{"docs":{},"出":{"docs":{},":":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"4":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"docs":{}}},"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"docs":{}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"9":{"docs":{},",":{"2":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"docs":{}}},"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"]":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}},"t":{"1":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}},",":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}},"2":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.025906735751295335},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.025906735751295335}},")":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135}}}}}}}},"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.0392156862745098},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.013937282229965157}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.022988505747126436}}},")":{"docs":{"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.0297029702970297},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085}}}}}}},"i":{"docs":{},"l":{"docs":{"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085}}}},"k":{"docs":{},"e":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.018691588785046728}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.010277492291880781},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"ref":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","tf":0.02127659574468085},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}},"。":{"docs":{},"判":{"docs":{},"断":{"docs":{},"其":{"docs":{},"左":{"docs":{},"上":{"docs":{},"方":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"要":{"docs":{},"确":{"docs":{},"保":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.015544041450777202},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":2.5155440414507773},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":1.6853582554517132}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0390625},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.06557377049180328},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.046632124352331605},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.019417475728155338},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.046632124352331605},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.02102803738317757}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.08433734939759036}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}},"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669}}}}}}}}}}}}}}},")":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}},"/":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}},"u":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248}}}}}}}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},"e":{"docs":{},",":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}},"n":{"docs":{},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"u":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}},"w":{"docs":{},"o":{"docs":{"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":2.5},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":2},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":1.25},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":2},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":1.6666666666666665},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"a":{"docs":{},"p":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}},")":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.023622047244094488},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}},")":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}},"{":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}},";":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.015748031496062992},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"当":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.011682242990654205},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":1.4285714285714284},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.010452961672473868}}}}},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}},"p":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044}},"(":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}},"e":{"docs":{},"l":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"z":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":2.5}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":3.3678160919540225}}}}}}}}},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":3.333333333333333}}}}}}},"镜":{"docs":{},"像":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":3.333333333333333}},"。":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}}}}},"深":{"docs":{},"度":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":3.3430420711974107}}}}}}}},"从":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}},"右":{"docs":{},"上":{"docs":{},"角":{"docs":{},"开":{"docs":{},"始":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}}}},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"最":{"docs":{},"慢":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"进":{"docs":{},"行":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"向":{"docs":{},"前":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"替":{"docs":{},"换":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"先":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"空":{"docs":{},"格":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"先":{"docs":{},"补":{"docs":{},"充":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"空":{"docs":{},"格":{"docs":{},"，":{"docs":{},"每":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"，":{"docs":{},"就":{"docs":{},"在":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"补":{"docs":{},"充":{"docs":{},"两":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"下":{"docs":{},"来":{"docs":{},"，":{"docs":{},"替":{"docs":{},"换":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"总":{"docs":{},"长":{"docs":{},"度":{"docs":{},"就":{"docs":{},"会":{"docs":{},"确":{"docs":{},"定":{"docs":{},"下":{"docs":{},"来":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尾":{"docs":{},"到":{"docs":{},"头":{"docs":{},"打":{"docs":{},"印":{"docs":{},"链":{"docs":{},"表":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":3.333333333333333}}}}}}}}},"外":{"docs":{},"层":{"docs":{},"向":{"docs":{},"内":{"docs":{},"层":{"docs":{},"，":{"docs":{},"一":{"docs":{},"圈":{"docs":{},"一":{"docs":{},"圈":{"docs":{},"地":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}}}}}}}}},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"选":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}}}}}}}}}},"拓":{"docs":{},"展":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","tf":0.011494252873563218}},"：":{"docs":{},"反":{"docs":{},"转":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}},"%":{"2":{"0":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"这":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"之":{"docs":{},"后":{"docs":{},"字":{"docs":{},"符":{"docs":{},"需":{"docs":{},"要":{"docs":{},"整":{"docs":{},"体":{"docs":{},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"采":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"会":{"docs":{},"变":{"docs":{},"成":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.022556390977443608},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.020905923344947737}}},"'":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}},";":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334}}}}},"2":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}},"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}},"%":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}},")":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}},")":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.02},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}},",":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},",":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.056338028169014086}}},"h":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{},"”":{"docs":{},"，":{"docs":{},"则":{"docs":{},"输":{"docs":{},"出":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}},"i":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":2.507518796992481}}}}},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.02564102564102564},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190308 - LeetCode 1. Two Sum.html":{"ref":"leetcode/20190308 - LeetCode 1. Two Sum.html","tf":0.045454545454545456},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.017341040462427744}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.017341040462427744}}}}},"细":{"docs":{},"节":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}}},"2":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}},"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.01935483870967742},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"ref":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","tf":0.043478260869565216},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.010964912280701754},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.013360739979445015}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.012903225806451613},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.010964912280701754},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.011305241521068859}},";":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.025806451612903226},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.010964912280701754},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.006166495375128468}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0051387461459403904}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.003083247687564234}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}}}}}},",":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904}}},";":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.017857142857142856},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.017543859649122806},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.008221993833504625}},"/":{"docs":{},"/":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0020554984583761563}}}}},")":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.015350877192982455},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.006166495375128468}}}}},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682}}}}}}},"i":{"docs":{"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564}},"g":{"docs":{},"h":{"docs":{"leetcode/20190308 - LeetCode 18. 4Sum.html":{"ref":"leetcode/20190308 - LeetCode 18. 4Sum.html","tf":0.009900990099009901}}}}}},"“":{"docs":{},"w":{"docs":{},"e":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}},"%":{"2":{"0":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"%":{"2":{"0":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{},"”":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":0.014084507042253521}}}}}},"替":{"docs":{},"换":{"docs":{},"空":{"docs":{},"格":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","tf":3.333333333333333}}}}}},"!":{"docs":{},"=":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.025806451612903226},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.03614457831325301},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0410958904109589},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"ref":"leetcode/20190308 - LeetCode 15. 3Sum.html","tf":0.02564102564102564},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.004672897196261682},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.01639344262295082},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.015350877192982455},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.029804727646454265},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.021505376344086023},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"构":{"docs":{},"建":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"链":{"docs":{},"表":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"部":{"docs":{},"分":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}}}},"构":{"docs":{},"建":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}},"示":{"docs":{},"意":{"docs":{},"图":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}},"例":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"递":{"docs":{},"归":{"docs":{},"算":{"docs":{},"法":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"导":{"docs":{},"致":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"ref":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"等":{"docs":{},"于":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"写":{"docs":{},"法":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}},"x":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}},")":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}}},";":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015}}},"o":{"docs":{},"y":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}},"r":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.028037383177570093}}}}},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"道":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"：":{"docs":{},"[":{"docs":{},"编":{"docs":{},"程":{"docs":{},"题":{"docs":{},"]":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"遍":{"docs":{},"历":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.006896551724137931},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"相":{"docs":{},"似":{"docs":{},"，":{"docs":{},"j":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}}}}}}}}}}},"大":{"docs":{},"于":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}},"曾":{"docs":{},"经":{"docs":{},"想":{"docs":{},"把":{"docs":{},"这":{"docs":{},"里":{"docs":{},"：":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"每":{"docs":{},"个":{"docs":{},"值":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":0.0078125}}}}}}}}}}}}}}}}}},"重":{"docs":{},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","tf":3.333333333333333}}}}}}},"①":{"docs":{},"如":{"docs":{},"果":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"其":{"docs":{},"【":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"】":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"左":{"docs":{},"边":{"docs":{},"竖":{"docs":{},"着":{"docs":{},"放":{"docs":{},"，":{"docs":{},"右":{"docs":{},"边":{"docs":{},"变":{"docs":{},"成":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"下":{"docs":{},"跳":{"docs":{},"一":{"docs":{},"级":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}},"②":{"docs":{},"如":{"docs":{},"果":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"其":{"docs":{},"【":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"包":{"docs":{},"含":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"】":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"左":{"docs":{},"边":{"docs":{},"横":{"docs":{},"着":{"docs":{},"放":{"docs":{},"，":{"docs":{},"要":{"docs":{},"放":{"docs":{},"两":{"docs":{},"个":{"docs":{},"，":{"docs":{},"右":{"docs":{},"边":{"docs":{},"变":{"docs":{},"成":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"下":{"docs":{},"跳":{"docs":{},"两":{"docs":{},"级":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}},"主":{"docs":{},"要":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}}},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"和":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"找":{"docs":{},"出":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"？":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"除":{"docs":{},"了":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"向":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"父":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"1":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.017391304347826087}}},"2":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044}},"，":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}},"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.013043478260869565}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.013043478260869565}}}},"2":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.013043478260869565}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.013043478260869565}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}}},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.013043478260869565}}}},"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.014563106796116505},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":1.6927536231884057},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":1.6802721088435373}},".":{"docs":{"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.006802721088435374}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.009708737864077669}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}},"/":{"docs":{},"/":{"docs":{},"当":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"当":{"docs":{},"前":{"docs":{},"层":{"docs":{},"以":{"docs":{},"后":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"元":{"docs":{},"素":{"docs":{},"全":{"docs":{},"是":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"这":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}},";":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135}}}}}}}},"t":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}},"docs":{}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135}}}}}}}}}}},"中":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.03076923076923077}}},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"且":{"docs":{},"减":{"docs":{},"去":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"就":{"docs":{},"不":{"docs":{},"够":{"docs":{},"了":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"之":{"docs":{},"前":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}},"先":{"docs":{},"加":{"1":{"docs":{},"。":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}},"docs":{}}}},"字":{"docs":{},"符":{"docs":{},"在":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}},"才":{"docs":{},"会":{"docs":{},"被":{"docs":{},"减":{"docs":{},"成":{"docs":{},"负":{"docs":{},"数":{"docs":{},"。":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"在":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"是":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385}}}}}},"加":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"先":{"docs":{},"把":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}},"剩":{"docs":{},"下":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"交":{"docs":{},"换":{"docs":{"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"那":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"这":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"把":{"docs":{},"左":{"docs":{},"指":{"docs":{},"针":{"docs":{},"一":{"docs":{},"步":{"docs":{},"一":{"docs":{},"步":{"docs":{},"移":{"docs":{},"到":{"docs":{},"和":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"把":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"字":{"docs":{},"母":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"母":{"docs":{},"都":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"值":{"docs":{},"减":{"docs":{},"去":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"在":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}}},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}},"，":{"docs":{},"检":{"docs":{},"查":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}},"零":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},"]":{"docs":{},"、":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"[":{"docs":{},"'":{"docs":{},"b":{"docs":{},"'":{"docs":{},"]":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"准":{"docs":{},"，":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}},"也":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"整":{"docs":{},"个":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"正":{"docs":{},"确":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}}}}},"思":{"docs":{},"路":{"1":{"docs":{},"：":{"docs":{},"给":{"docs":{},"较":{"docs":{},"短":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"和":{"docs":{},"较":{"docs":{},"长":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"补":{"docs":{},"齐":{"docs":{},"，":{"docs":{},"补":{"docs":{},"的":{"docs":{},"高":{"docs":{},"位":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"设":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.028985507246376812},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.058823529411764705},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.015037593984962405},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.015748031496062992},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"ref":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","tf":0.014705882352941176},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.022988505747126436},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":3.333333333333333}}}}}},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"和":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","tf":0.015384615384615385}}}}}}}}}}}}},"的":{"docs":{},"前":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"存":{"docs":{},"成":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}},"\\":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.02102803738317757}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.057692307692307696}}}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.06542056074766354}}}}}}},"优":{"docs":{},"点":{"docs":{},"：":{"docs":{},"打":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"表":{"docs":{},"可":{"docs":{},"复":{"docs":{},"用":{"docs":{},"。":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"：":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"态":{"docs":{},"跳":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"问":{"docs":{},"题":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}},"为":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406}}},"成":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}},"对":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"问":{"docs":{},"题":{"docs":{},"分":{"docs":{},"析":{"docs":{},"的":{"docs":{},"非":{"docs":{},"常":{"docs":{},"好":{"docs":{},"的":{"docs":{},"一":{"docs":{},"篇":{"docs":{},"文":{"docs":{},"章":{"docs":{},"：":{"docs":{},"计":{"docs":{},"算":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"纳":{"docs":{},"契":{"docs":{},"数":{"docs":{},"，":{"docs":{},"分":{"docs":{},"析":{"docs":{},"算":{"docs":{},"法":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"称":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":3.333333333333333}}}}}}},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"，":{"docs":{},"统":{"docs":{},"计":{"docs":{},"这":{"docs":{},"一":{"docs":{},"位":{"docs":{},"上":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"3":{"docs":{},"取":{"docs":{},"余":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"余":{"docs":{},"数":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"这":{"docs":{},"个":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"末":{"docs":{},"尾":{"docs":{},"加":{"docs":{},"零":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"优":{"docs":{},"化":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}}}}},"应":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"类":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}},"所":{"docs":{},"以":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}},"，":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"=":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{},"+":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"−":{"2":{"docs":{},")":{"docs":{},",":{"docs":{},"n":{"docs":{},">":{"2":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"=":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"都":{"docs":{},"相":{"docs":{},"互":{"docs":{},"之":{"docs":{},"间":{"docs":{},"做":{"docs":{},"异":{"docs":{},"或":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"必":{"docs":{},"然":{"docs":{},"能":{"docs":{},"够":{"docs":{},"找":{"docs":{},"出":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"成":{"docs":{},"对":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"异":{"docs":{},"或":{"docs":{},"之":{"docs":{},"后":{"docs":{},"所":{"docs":{},"有":{"docs":{},"位":{"docs":{},"都":{"0":{"docs":{},"了":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"模":{"docs":{},"式":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":3.3429487179487176}},"算":{"docs":{},"法":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}},"。":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406}}}}}}}},"求":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}},"：":{"docs":{},"每":{"docs":{},"一":{"docs":{},"类":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"下":{"docs":{},"的":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"乘":{"docs":{},"以":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"，":{"docs":{},"不":{"docs":{},"是":{"docs":{},"相":{"docs":{},"加":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"形":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"问":{"docs":{},"题":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 12. 矩阵中的路径.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 12. 矩阵中的路径.html","tf":3.333333333333333}}}}}}}},"级":{"docs":{},"。":{"docs":{},"求":{"docs":{},"该":{"docs":{},"青":{"docs":{},"蛙":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}},"台":{"docs":{},"阶":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"上":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}},"的":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}}}}}}}}}},"跳":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"问":{"docs":{},"题":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}}}}}},"项":{"docs":{"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"ref":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","tf":0.009615384615384616}}},"旋":{"docs":{},"转":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"从":{"docs":{},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{},"对":{"docs":{},"比":{"docs":{},"两":{"docs":{},"个":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"总":{"docs":{},"会":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"组":{"docs":{},"数":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"数":{"docs":{},"往":{"docs":{},"后":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"操":{"docs":{},"作":{"docs":{},"移":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"数":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"ref":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","tf":3.333333333333333}}}}}}}}},"正":{"docs":{},"方":{"docs":{},"形":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"。":{"docs":{"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125}}}}}}}},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"几":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"间":{"docs":{},"是":{"docs":{},"有":{"docs":{},"规":{"docs":{},"律":{"docs":{},"的":{"docs":{},"。":{"docs":{"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.07253886010362694},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0410958904109589},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.03571428571428571},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.07253886010362694},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.04906542056074766},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.07377049180327869},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.02631578947368421},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.02608695652173913},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.04081632653061224}},"/":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.007009345794392523},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.034782608695652174},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"ref":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","tf":0.04081632653061224},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}},"y":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863}}},"代":{"docs":{},"码":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.021052631578947368},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.021052631578947368},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.003083247687564234},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357}}}},"回":{"docs":{},"溯":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}}},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{},"的":{"docs":{},"运":{"docs":{},"动":{"docs":{},"范":{"docs":{},"围":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":3.333333333333333}},"_":{"docs":{},"_":{"docs":{},"牛":{"docs":{},"客":{"docs":{},"网":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}},"。":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.007751937984496124}}}}}}}}}}},"核":{"docs":{},"心":{"docs":{},"思":{"docs":{},"想":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","tf":0.015503875968992248},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","tf":0.01639344262295082},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.010362694300518135},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":0.013793103448275862},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.010526315789473684},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.011904761904761904},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"ref":"leetcode/20190327 - LeetCode 48. Rotate Image.html","tf":0.03125},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.013793103448275862},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.010362694300518135},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.010526315789473684},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0043859649122807015},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"ref":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","tf":0.008695652173913044},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.024691358024691357}}},"路":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.010526315789473684},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.010526315789473684},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.003083247687564234}}}},"目":{"docs":{},"的":{"docs":{},"：":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"镜":{"docs":{},"像":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"回":{"docs":{},"文":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}}}}}}}},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"树":{"docs":{},"退":{"docs":{},"化":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"变":{"docs":{},"成":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"一":{"docs":{},"句":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}},"：":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}},"docs":{}}}}},"docs":{}}}}},"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}},"占":{"docs":{},"用":{"docs":{},"，":{"docs":{},"两":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"数":{"docs":{},"值":{"docs":{},"差":{"docs":{},"距":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}},"镜":{"docs":{},"像":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"和":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"很":{"docs":{},"像":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","tf":0.0051813471502590676},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"ref":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","tf":0.0051813471502590676}}}}}}}}}}}}}},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"打":{"docs":{},"印":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"ref":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","tf":3.3402298850574708},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"ref":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","tf":0.006896551724137931}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"栈":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":2}}}}}},"包":{"docs":{},"含":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":2}}}},"同":{"docs":{},"样":{"docs":{},"使":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"压":{"docs":{},"入":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"相":{"docs":{},"比":{"docs":{},"解":{"docs":{},"答":{"1":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"。":{"docs":{},"当":{"docs":{},"要":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"小":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"把":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"同":{"docs":{},"时":{"docs":{},"压":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"当":{"docs":{},"要":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"把":{"docs":{},"当":{"docs":{},"前":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"取":{"docs":{},"出":{"docs":{},"来":{"docs":{},"再":{"docs":{},"压":{"docs":{},"入":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"栈":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"是":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"自":{"docs":{},"有":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"的":{"docs":{},"用":{"docs":{},"处":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.010526315789473684},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"理":{"docs":{},"，":{"docs":{},"i":{"docs":{},"f":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}},"带":{"docs":{},"取":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"功":{"docs":{},"能":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.010526315789473684},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.010526315789473684}}}}}}}}}}}},"弹":{"docs":{},"出":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"查":{"docs":{},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"也":{"docs":{},"把":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"一":{"docs":{},"一":{"docs":{},"对":{"docs":{},"应":{"docs":{},"，":{"docs":{},"不":{"docs":{},"用":{"docs":{},"再":{"docs":{},"检":{"docs":{},"查":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"ref":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","tf":0.010526315789473684},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"ref":"leetcode/20190326 - LeetCode 155. Min Stack.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.03076923076923077},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.014018691588785047},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0273972602739726},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.017341040462427744},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"ref":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","tf":0.023255813953488372}},"s":{"docs":{},"e":{"docs":{},"t":{"2":{"docs":{},")":{"docs":{},"{":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}},"docs":{}}}}},"?":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.0136986301369863},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"写":{"docs":{},"法":{"docs":{},"：":{"docs":{},"双":{"docs":{},"循":{"docs":{},"环":{"docs":{"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"ref":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}},"进":{"docs":{},"阶":{"docs":{},"：":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"是":{"docs":{},"正":{"docs":{},"向":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"加":{"docs":{},"法":{"docs":{},"。":{"docs":{"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"ref":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","tf":0.00684931506849315}}}}},"定":{"docs":{},"义":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"ref":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","tf":0.00819672131147541}}}}}}},"动":{"docs":{},"态":{"docs":{},"窗":{"docs":{},"口":{"docs":{"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"ref":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","tf":0.023255813953488372}}}},"规":{"docs":{},"划":{"docs":{},"。":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406}}}}}}},"当":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}},"作":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}},"算":{"docs":{},"法":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}},"出":{"docs":{},"来":{"docs":{},"他":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"组":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{},"其":{"docs":{},"值":{"docs":{},"和":{"docs":{},"其":{"docs":{},"所":{"docs":{},"在":{"docs":{},"组":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"次":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"算":{"docs":{},"出":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"，":{"docs":{},"定":{"docs":{},"位":{"docs":{},"到":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"ref":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"被":{"docs":{},"减":{"docs":{},"过":{"docs":{},"。":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}},"z":{"0":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}},"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216},"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":2.5}}}}},"a":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}},"：":{"docs":{"leetcode/20190304 - LeetCode 27. Remove Element.html":{"ref":"leetcode/20190304 - LeetCode 27. Remove Element.html","tf":0.02127659574468085},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}},"\"":{"0":{"docs":{},"\"":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}},"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.006578947368421052},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.02877697841726619}},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}},")":{"docs":{},";":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.013157894736842105},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.029804727646454265},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608}}}}},"位":{"docs":{},"。":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}},"和":{"docs":{},"第":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}},"二":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.013333333333333334}}}}}}}}},"数":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}},"的":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"第":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}},"先":{"docs":{},"存":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"再":{"docs":{},"统":{"docs":{},"一":{"docs":{},"计":{"docs":{},"算":{"docs":{},"进":{"docs":{},"位":{"docs":{},"。":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}}}}},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"把":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"ref":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","tf":0.006666666666666667}}}}}}}}}}},"为":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"除":{"docs":{},"了":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"之":{"docs":{},"外":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"成":{"docs":{},"对":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"数":{"docs":{},"中":{"docs":{},"，":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"是":{"0":{"docs":{},"的":{"docs":{},"数":{"docs":{},"是":{"docs":{},"成":{"docs":{},"对":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"是":{"1":{"docs":{},"的":{"docs":{},"数":{"docs":{},"也":{"docs":{},"是":{"docs":{},"成":{"docs":{},"对":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"截":{"docs":{},"至":{"docs":{},"目":{"docs":{},"前":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"正":{"docs":{},"子":{"docs":{},"序":{"docs":{},"和":{"docs":{},"。":{"docs":{"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"ref":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","tf":0.015384615384615385}}}}}}}}}}}}}},"行":{"docs":{},"号":{"docs":{},"和":{"docs":{},"列":{"docs":{},"号":{"docs":{},"，":{"docs":{},"r":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}}}},"比":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"在":{"docs":{},"于":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"由":{"docs":{"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"ref":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"路":{"docs":{},"快":{"docs":{},"排":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"ref":"leetcode/20190305 - LeetCode 75. Sort Colors.html","tf":0.043478260869565216}}}}}}}}},"了":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"只":{"docs":{},"有":{"docs":{},"不":{"docs":{},"在":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}},"假":{"docs":{},"设":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}},"其":{"docs":{},"中":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"零":{"docs":{},"的":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"小":{"docs":{},"于":{"docs":{},"零":{"docs":{},"，":{"docs":{},"但":{"docs":{},"至":{"docs":{},"少":{"docs":{},"要":{"docs":{},"等":{"docs":{},"于":{"docs":{},"零":{"docs":{},"。":{"docs":{},"不":{"docs":{},"然":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"减":{"docs":{},"到":{"docs":{},"零":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"前":{"docs":{},"面":{"docs":{},"已":{"docs":{},"经":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"到":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"发":{"docs":{},"生":{"docs":{},"循":{"docs":{},"环":{"docs":{},"了":{"docs":{},"。":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"掉":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}},"指":{"docs":{},"向":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"，":{"docs":{},"在":{"docs":{},"判":{"docs":{},"断":{"docs":{},"之":{"docs":{},"后":{"docs":{},"都":{"docs":{},"会":{"docs":{},"被":{"docs":{},"减":{"docs":{},"去":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"不":{"docs":{},"是":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"最":{"docs":{},"初":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}},"被":{"docs":{},"减":{"docs":{},"为":{"docs":{},"零":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"再":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"ref":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","tf":0.00980392156862745}}}}}}}}}}}}}}}},"k":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.06818181818181818},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.013888888888888888},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.021505376344086023},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},")":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.020833333333333332}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}},"y":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.021739130434782608}}}},"]":{"docs":{},";":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}},"t":{"docs":{},"h":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":1.6666666666666665}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}},"就":{"docs":{},"是":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}},"换":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"众":{"docs":{},"数":{"docs":{},"占":{"docs":{},"总":{"docs":{},"体":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"以":{"docs":{},"上":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"众":{"docs":{},"数":{"docs":{},"总":{"docs":{},"能":{"docs":{},"脱":{"docs":{},"颖":{"docs":{},"而":{"docs":{},"出":{"docs":{},"。":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"定":{"docs":{},"会":{"docs":{},"经":{"docs":{},"过":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}},"补":{"docs":{},"充":{"docs":{},"解":{"docs":{},"答":{"docs":{},"：":{"docs":{},"修":{"docs":{},"改":{"docs":{},"版":{"docs":{"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"ref":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","tf":0.022727272727272728}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"本":{"docs":{},"题":{"docs":{},"中":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}}}}}},"类":{"docs":{},"的":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}},"几":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}},"相":{"docs":{},"关":{"docs":{},"方":{"docs":{},"法":{"docs":{"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"ref":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","tf":0.002336448598130841}}}}}}}},"涉":{"docs":{},"及":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"存":{"docs":{},"储":{"docs":{},"截":{"docs":{},"至":{"docs":{},"目":{"docs":{},"前":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"存":{"docs":{},"储":{"docs":{},"截":{"docs":{},"至":{"docs":{},"目":{"docs":{},"前":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"ref":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"打":{"docs":{},"一":{"docs":{},"个":{"docs":{},"表":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"通":{"docs":{},"过":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"再":{"docs":{},"对":{"docs":{},"比":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"式":{"docs":{},"也":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"分":{"docs":{},"别":{"docs":{},"设":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"ref":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}},"型":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"ref":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","tf":0.018867924528301886}}},"整":{"docs":{},"数":{"docs":{},"有":{"3":{"2":{"docs":{},"个":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"。":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}},"docs":{}},"docs":{}}}}},"且":{"docs":{},"再":{"docs":{},"开":{"docs":{},"辟":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"固":{"docs":{},"定":{"docs":{},"(":{"docs":{},"与":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"是":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"从":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"中":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{},"设":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{},"a":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"异":{"docs":{},"或":{"docs":{},"它":{"docs":{},"自":{"docs":{},"己":{"docs":{},"都":{"docs":{},"等":{"docs":{},"于":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}},"再":{"docs":{},"把":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"为":{"1":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"都":{"docs":{},"相":{"docs":{},"互":{"docs":{},"之":{"docs":{},"间":{"docs":{},"做":{"docs":{},"异":{"docs":{},"或":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"必":{"docs":{},"然":{"docs":{},"能":{"docs":{},"够":{"docs":{},"找":{"docs":{},"出":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"中":{"docs":{},"的":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"以":{"docs":{},"这":{"docs":{},"一":{"docs":{},"位":{"docs":{},"是":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}},"将":{"docs":{},"这":{"docs":{},"一":{"docs":{},"位":{"docs":{},"为":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.018691588785046728}}}}}}},"无":{"docs":{},"关":{"docs":{},")":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}},"来":{"docs":{},"源":{"docs":{},"：":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"解":{"docs":{},"决":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"让":{"docs":{},"你":{"docs":{},"拍":{"docs":{},"案":{"docs":{},"叫":{"docs":{},"绝":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"问":{"docs":{},"题":{"docs":{},"？":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"前":{"docs":{},"面":{"docs":{},"找":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"数":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"异":{"docs":{},"或":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"是":{"docs":{},"那":{"docs":{},"两":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"形":{"docs":{},"式":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{},"某":{"docs":{},"一":{"docs":{},"位":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"即":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"就":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"在":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"假":{"docs":{},"设":{"docs":{},"我":{"docs":{},"们":{"docs":{},"已":{"docs":{},"经":{"docs":{},"选":{"docs":{},"择":{"docs":{},"了":{"docs":{},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"我":{"docs":{},"们":{"docs":{},"选":{"docs":{},"择":{"docs":{},"的":{"docs":{},"是":{"docs":{},"从":{"docs":{},"右":{"docs":{},"向":{"docs":{},"左":{"docs":{},"数":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"，":{"docs":{},"简":{"docs":{},"称":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"的":{"docs":{},"第":{"2":{"docs":{},"位":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"可":{"docs":{},"能":{"docs":{},"：":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}},"docs":{}}}}}}},"还":{"docs":{},"是":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}},"现":{"docs":{},"在":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"这":{"docs":{},"一":{"docs":{},"位":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 136. Single Number.html":{"ref":"leetcode/20190308 - LeetCode 136. Single Number.html","tf":0.009345794392523364}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}},"^":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.018018018018018018}}},"~":{"docs":{},"a":{"docs":{},";":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}},"b":{"docs":{},";":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}},"或":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}},"者":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"1":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"上":{"docs":{},"。":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}},"docs":{}}}},"如":{"docs":{},"果":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}},"统":{"docs":{},"计":{"docs":{},"每":{"docs":{},"一":{"docs":{},"位":{"docs":{},"上":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"和":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"1":{"docs":{},"进":{"docs":{},"行":{"docs":{},"位":{"docs":{},"与":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}},"语":{"docs":{},"句":{"docs":{},"如":{"docs":{},"果":{"docs":{},"改":{"docs":{},"为":{"docs":{"leetcode/20190324 - LeetCode 137. Single Number II.html":{"ref":"leetcode/20190324 - LeetCode 137. Single Number II.html","tf":0.009009009009009009}}}}}}}},"利":{"docs":{},"用":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"已":{"docs":{},"经":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"ref":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}},"左":{"docs":{},"右":{"docs":{},"。":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}},"边":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"还":{"docs":{},"是":{"docs":{},"右":{"docs":{},"边":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"是":{"docs":{},"大":{"docs":{},"于":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}},"选":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"就":{"docs":{},"加":{"1":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"就":{"docs":{},"减":{"1":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"leetcode/20190309 - LeetCode 169. Majority Element.html":{"ref":"leetcode/20190309 - LeetCode 169. Majority Element.html","tf":0.0136986301369863}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}},"吗":{"docs":{},"？":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"这":{"docs":{},"背":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"学":{"docs":{},"规":{"docs":{},"律":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 202. Happy Number.html":{"ref":"leetcode/20190308 - LeetCode 202. Happy Number.html","tf":0.007518796992481203}}}}}}}}}}}}}}}},"减":{"docs":{},"为":{"2":{"docs":{},"m":{"docs":{},"s":{"docs":{},"。":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"也":{"docs":{},"要":{"docs":{},"占":{"docs":{},"用":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{},"而":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"反":{"docs":{},"复":{"docs":{},"调":{"docs":{},"用":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}},"转":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"和":{"docs":{},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}},"难":{"docs":{},"道":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"使":{"docs":{},"用":{"docs":{"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"ref":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","tf":0.007874015748031496}}}}}}}}},"刚":{"docs":{},"好":{"docs":{},"指":{"docs":{},"向":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"节":{"docs":{},"点":{"docs":{},"定":{"docs":{},"义":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}},"完":{"docs":{},"整":{"docs":{},"测":{"docs":{},"试":{"docs":{},"代":{"docs":{},"码":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}},"设":{"docs":{},"计":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"ref":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","tf":0.0021929824561403508}}}}}}}}}}},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"了":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"也":{"docs":{},"不":{"docs":{},"能":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"题":{"docs":{},"意":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}},"深":{"docs":{},"入":{"docs":{},"理":{"docs":{},"解":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}},"要":{"docs":{},"理":{"docs":{},"解":{"docs":{},"这":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"有":{"docs":{},"所":{"docs":{},"了":{"docs":{},"解":{"docs":{},"。":{"docs":{"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"ref":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"不":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"从":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"从":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"从":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"一":{"docs":{},"次":{"docs":{},"走":{"docs":{},"两":{"docs":{},"步":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"一":{"docs":{},"次":{"docs":{},"走":{"docs":{},"一":{"docs":{},"步":{"docs":{},"。":{"docs":{},"当":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"可":{"docs":{},"以":{"docs":{},"走":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"走":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"可":{"docs":{},"以":{"docs":{},"走":{"docs":{},"到":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"同":{"docs":{},"样":{"docs":{},"走":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"此":{"docs":{},"时":{"docs":{},"把":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"压":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"找":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"开":{"docs":{},"头":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"ref":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","tf":0.0010277492291880781}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"–":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}},"字":{"docs":{},"符":{"docs":{},"集":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}},"但":{"docs":{},"是":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{},"题":{"docs":{},"目":{"docs":{},"中":{"docs":{},"额":{"docs":{},"外":{"docs":{},"提":{"docs":{},"示":{"docs":{},"了":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"算":{"docs":{},"法":{"docs":{},"是":{"docs":{},"否":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"不":{"docs":{},"适":{"docs":{},"合":{"docs":{},"处":{"docs":{},"理":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"。":{"docs":{"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"ref":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"后":{"docs":{},"边":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"就":{"docs":{},"是":{"docs":{},"多":{"docs":{},"余":{"docs":{},"的":{"docs":{},"了":{"docs":{},"。":{"docs":{},"不":{"docs":{},"如":{"docs":{},"改":{"docs":{},"为":{"docs":{},"直":{"docs":{},"接":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"。":{"docs":{},"加":{"docs":{},"上":{"docs":{},"了":{"docs":{},"判":{"docs":{},"断":{"docs":{},"就":{"docs":{},"一":{"docs":{},"定":{"docs":{},"会":{"docs":{},"判":{"docs":{},"断":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"开":{"docs":{},"销":{"docs":{},"更":{"docs":{},"小":{"docs":{},"。":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}}}}},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"直":{"docs":{},"接":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"，":{"docs":{},"多":{"docs":{},"余":{"docs":{},"的":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"docs":{},"少":{"docs":{},"于":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}},"一":{"docs":{},"遍":{"docs":{},"是":{"docs":{},"确":{"docs":{},"定":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}},"二":{"docs":{},"遍":{"docs":{},"是":{"docs":{},"确":{"docs":{},"定":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}}}}}}}},"行":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"改":{"docs":{},"为":{"docs":{},"：":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"判":{"docs":{},"断":{"docs":{},"：":{"docs":{"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"ref":"leetcode/20190304 - LeetCode 283. Move Zeros.html","tf":0.010752688172043012}}}}}}}}},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"ref":"leetcode/20190308 - LeetCode 290. Word Pattern.html","tf":0.010869565217391304}}}}},"小":{"docs":{},"菜":{"docs":{},"园":{"docs":{},"博":{"docs":{},"客":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}},"很":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"先":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"圈":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"错":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"o":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"o":{"docs":{},")":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"函":{"docs":{},"数":{"docs":{},"去":{"docs":{},"做":{"docs":{},"散":{"docs":{},"列":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"与":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"多":{"docs":{},"少":{"docs":{},"无":{"docs":{},"关":{"docs":{},"，":{"docs":{},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"多":{"docs":{},"少":{"docs":{},"元":{"docs":{},"素":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"o":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"基":{"docs":{},"本":{"docs":{},"上":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"ref":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","tf":0.005780346820809248}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"恢":{"docs":{},"复":{"docs":{},"成":{"docs":{},"最":{"docs":{},"初":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"重":{"docs":{},"新":{"docs":{},"开":{"docs":{},"始":{"docs":{},"。":{"docs":{"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"ref":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"数":{"docs":{},"组":{"docs":{},"不":{"docs":{},"会":{"docs":{},"越":{"docs":{},"界":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}}}}},"依":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{},"其":{"docs":{},"值":{"docs":{},"和":{"docs":{},"其":{"docs":{},"坐":{"docs":{},"上":{"docs":{},"方":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"都":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"每":{"docs":{},"个":{"docs":{},"组":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"依":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}},"托":{"docs":{},"普":{"docs":{},"利":{"docs":{},"兹":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"。":{"docs":{"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"ref":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","tf":0.012345679012345678}}}}}}}}},".":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}}}}}}}}}},"改":{"docs":{},"为":{"docs":{"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"ref":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","tf":0.003484320557491289}}}}},"length":3980},"corpusTokens":["!=","\"","\"\").tolowercase();","\");","\"0\"","\"singl","#includ","%","%20，那么就会导致这个空格之后字符需要整体向后移动，如果采用这种方式，那么时间复杂度会变成","&","&&","'","'%');","')","'0')","'0');","'0';","'2');","(!in.isempty())","(!q.isempty())","(!queue.isempty())","(!s.empty())","(!stack.isempty())","(!stack1.isempty())","(!stack2.isempty())","((end","(){}","(0,","(1,","(;","(;tail","(a","(a[i]","(a[j]","(array.length","(array[index1]","(array[indexmid]","(array[rightbound]","(c","(carri","(char","(count","(counter","(cur","(cur.next","(curr","(cursum","(d","(end","(exist.contains(n))","(fast","(first","(head","(head.valu","(i","(ie.","(index1","(index2","(int","(integ","(java","(k","(l","(left","(leftbound","(leftofpr","(len+1)","(length","(listnod","(lo","(low","(map[s.charat(left++)]++","(map[s.charat(right++)]","(matrix","(matrix.length","(middl","(n","(n+1)","(n1","(n1.valu","(n2","(n2.next","(newnum","(node","(node.left","(nodesseen.contains(head))","(note","(num","(num.length","(num[i]","(number","(nums.length","(nums[j]","(out.isempty())","(p1","(p2","(parent.left","(pnode.next","(pnode.right","(po","(products[i]","(queue1.isempty()","(queue1.size()","(r","(r,","(r1","(result","(right","(root","(row","(s","(s.length()","(sb.length()","(slow","(stack1.isempty()","(strarr.length","(sum_of_j_digit","(t1","(t1.val","(target","(the","(this.stackmin.isempty())","(threshold","(words.length","(只出现一次的数字)",")","),",");","*","*/","+","++;","++i，相当于换成下一种走法。第一圈使用数组行数和列数来判定是否越界，第二圈就要靠","+=",",",".",".maptoint(i",".toarray();","/","/*","/**","//","//move","//nums[i]","//remov","//在完成最后一个空格的替换之后，p1等于p2","/=","0","0)","0),","0){","0,","0;","0;//记录本层已经遍历的节点个数","0a⊕a=0","0};","0}};","0个节点，那么我们就要定位到第","0，得到这个数字二进制形式中任意一个为","1","1)","1))","1));","1)+f(n","1),","1);","1)f(n−1)，","1,","1.","10","10)","10);","10,","10.","101.","104.","10;","11","11.","12.","121.","125.","12×1","13.","136,","136.","137,","137.","137：singl","141.","15","15.","153","153.","154.","155.","167.","169.","18.","19.","1:","1;","1;//","1]","1])","1]))","1];","1][c","1m","1ms。","1},","1};","1。因为在前边的语句中，已经预先把","1。如果指向的字符不在","1个节点，那么我们就要定位到第","1号指针指向头节点之前的辅助节点，相当于第0个节点。2号指针最初也指向“第0节点”，然后2号指针遍历n+1次，到达第n+1个节点。此时，两个指针之间的差距为","1次，这样刚刚push进来的元素就变到了第一个。","2","2)","2),n>2f(n)=f(n−1)+f(n−2),n>2。","2):","2);","2)f(n−2)，","2,","2.","20","202.","205.","206.","209.","215.","225.","232.","234.","240.","242.","26.","260","27.","28.","283.","29.","290.","2;","2]","2])","2];","2]，往后看两位。现在是往后看","2d","2ms，但是这个算法是","2×12","2×62","2×72","2×82","2×n2","3","3)","3,","3.","30.","349.","350.","39.","3;","3]","3sum","3}，那么对应的输出是重复的数字2或者3。","4","4,","4.","43.","438.","451.","48.","4m","4sum","5","5,","5.","53.","54.","5种java单例模式的实现、原理和演化","6","6,","6.","62×6","6}，则重建出二叉树并输出它的头结点。","7","7,","7.","70.","72×7","75.","76.","766.","7;","7}，那么对应的输出是重复的数字2或者3。","8","8,","8.","80.","82×8","8}","9","9)","9.","905.","9]\",",":",":set2){",";","=","==",">",">=",">>","?","[0,","[1,2,2,1,3,4]输出:","[2,4,1,3],","[2,4,3,1]","[3,1,2,4]","[3,4]","[3,9,20,null,null,15,7],","[4,2,1,3]","[4,2,3,1],","[][]","[剑指offer]","\\","\\oplu","\\time","^","a)","a,","a.","a.length","a;","a[i]","a[i];","a[j]","a[j];","a[k]","aa⊕0=a","abov","accepted.","actual","actual.equals(rev);","add","add(","addit","addtwonumbers(listnod","adjac","advanc","algorithm）。","along","alreadi","an","anagram","ans.add(matrix[r2][c]);","ans.add(matrix[r][c1]);","ans;","answer","apart","append","args)","arr","arr[c]","arr[c]++;","array","array)","array,","array.length","array[0];","array[index1])","array[index2])","array[indexmid]","array[pivotindex];","arraydeque<>();","arraylist","arraylist();","arraylist<>();","arraylist>","arrays.copyof(result,","arrays.equals(str1,","arrays.sort(num);","arrays.sort(nums);","arrays.sort(nums1);","arrays.sort(nums2);","arrays.sort(str1);","arrays.sort(str2);","array。","ascii","avoid","a|b;","a⊕0=aa","a⊕a=0a","a⊕b⊕a=(a⊕a)⊕b=0⊕b=ba","a，就不会再减","b","b%2))","b%2));","b)","b;","back","balanc","balanced),","ba⊕b⊕a=(a⊕a)⊕b=0⊕b=b","below","best","between","binari","binarytreenod","bit","bit,","bits,","bitwis","blog","boolean","boolean[]","boolean[][]","boolean[max","boolean[r][c];","boolean[row","break;","built","buy","b。","c","c)","c);","c1","c1++;","c1;","c2","c:","c;","call","candid","candidate)","candidate;","carri","carry)","carry;","case","case,","cases,","ch","char","char[256];","char[]","char[s.length()];","charact","charat()","charmap","charmap['a']","check","child","children.","class","climb","climbstairs(int","code_07_reverselist","code_11_ispalindromelist","color","cols)","cols];","column","columns)","compar","complet","complex","complexity.","complexity:","condition.","consist","continue.","continue;","convert","correct,","correct:","count","count++;","counter","counter++;","countrange(const","countrange(numbers,","cur","cur,","cur.next.next","cur.next.next;","cur.next;","curr","curr.next","curr.next;","curr;","current","current.getkey();","current.getvalue();","current_depth","current_depth);","cursum","cursum;","cycl","d","d1","d2","d2;","d;","data","data)","data;","deep","deep;","definit","depend","depth","depth.","depth;","dequ","desired.","detail","dict","dierectioncount","directionofcolumn","directionofcolumn[i]","directionofrow","directionofrow，一个directionofcolumn，这样，directionofrow[i]","doc","done","doublenod","doublenode(1);","doublenode(2);","doublenode(3);","doublenode(4);","doublenode(int","down","dp","dp[1]","dp[2]","dp[i]","dummi","dummy.next","dummy.next;","dummy;","dummyhead","dummyhead.next;","dummyhead;","duplic","duplicate(int[]","duplication)","e)","e.g.","each","easysingleton{","element","element)","element.","elements.)","else{","empty\");","empty()","empty.","end","end)","end);","end){","end.last;","enum","even","eventu","everyth","exactli","exampl","example:","exist","exist.add(n);","exist[num","explan","extra","f(n−1)f(n","f(n−2)f(n","false;","false。","false，如果遍历顺利完成，返回","farthest","fast","fast)","fast.next","fast.next.next;","fibonacci(int","final","find","find(int","findanagrams(str","findkthlargest(int[]","findmin(int[]","finish","first","first.next","first.next.next;","first.next;","follow","for(char","for(int","form","foursum(int[]","freq","frequenc","frequencysort(str","front","gap","gener","get","get()","getduplication(const","getinstance()","getinstance(){","getnext(treelinknod","gitbook","github","given","group","h","handl","happi","happy.”，则输出","hascycle(listnod","hashmap","hashmap();","hashmap<>();","hashset","hashset();","hashset<>();","hashset细节","head","head)","head,","head.last","head.next","head.next.next","head.next.next.next","head.next.next.next.next","head.next;","head1","head1.next","head1.next.next","head2","head2.next","head2.next.last","head2.next.next","head2.next.next.last","head2.next.next.next","head2.next.next.next.last","head2.next.next;","head2.next;","head2;","head;","head;//","height","here.","hi","high","i)","i++","i++;","i+j","i+j+1","i;","i=0;","idecreas","if(arr[c]","if(count","if(end","if(inst","if(matrix.length","if(node.left","if(node.right","if(numb","if(nums.length","if(nums.size()","if(root","if(s.length()","if(set1.contains(num)){","if(start","if(target","ii","ii。","imag","implement","import","in)","in.push(node);","index","index);","index1","index2","index2)","index2;","indexforinord","indexforinorders.get(root.val);","indexmid","indexmid;","initi","input","input:","instanc","instance;","instanti","int","int*","int[128];","int[256];","int[2];","int[]","int[][]","int[a.length];","int[n","int[n1","int[nums1.length];","int[nums2.length];","int[result.size()];","integ","integer.compare(a%2,","integer.max_value,","integer.max_value;","integer.min_value;","integer[]","integer[]。排序完成之后再转换为原生数组。","integer[a.length];","integers,","intersect","intersect(int[]","intersection(int[]","invari","in，如果","isanagram(str","ishappy(int","isisomorphic(str","ismirror(root,","ismirror(t1.left,","ismirror(t1.right,","ismirror(treenod","isomorph","ispalindrome(str","ispalindrome1(nod","ispalindrome2(nod","ispalindrome3(nod","issymmetric(treenod","istoeplitzmatrix(int[][]","i，然后在剩下的长度中进行二分搜索","j","j++;","j.","jark'","java","java.lang.math;","java.util.arraydeque;","java.util.arraylist;","java.util.arrays;","java.util.deque;","java.util.hashmap;","java.util.hashset;","java.util.iterator;","java.util.linkedlist;","java.util.list;","java.util.queue;","java.util.scanner;","java.util.stack;","javafx.util.pair;","java》上所推荐的。","java队列queue接口详解","jdk","jumpfloor(int","k","k)","k++;","k];","keep","key","kth","l","l1,","l1;","l2)","l2;","larg","large,","largest","last","last;","leaf","leetcod","leetcode官方题解及解析：104.","leetcode官方题解及解析：905.","left","left)","left,","left;","left_height","leftbound","leftbound++;","leftbound]","leftdepth","leftofin","leftofin);","leftofin;","leftofpr","lefttrees","lefttreesize,","len","len_","len_p","length","length)","length++;","length,","length:","lengthoflongestsubstring(str","level","link","linkedlist","linkedlist();","linkedlist<>();","linkedlist>","list","list,","list.","list:","list>","listnod","listnode(","listnode(0);","listnode(carry);","listnode(int","listnode(sum","listnode)","listnode.next","listnode.next;","listnode;","lo","log(n)log(n)log(n).","longest","look","lookback，向后看。第一种解法是","loop","low","m1","m2","main","main(string[]","maintain","maintained,","major","majorityelement(int[]","make","map","map.get(nums2[i])","map.put(nums2[i],","map['a']","map['c']","map[c]++;","map[ch]++;","map[max])","map[max];","map，把","math.max(depth,","math.max(left_height,","math.max(max,","math.max(maxdepth(root.left),","math.min(min,","math.pow(d","matrix","matrix)","matrix,","matrix.length","matrix.length,","matrix[0].length","matrix[0].length;","matrix[r","matrix[r][c])","matrix[row][column])","matrix[row][column]){","max","max;","maxdepth(root.left);","maxdepth(root.right))+1;","maxdepth(root.right);","maxdepth(treenod","maximum","maxprofit","maxprofit(int","maxprofit)","maxprofit;","maxsubarray(int[]","maxsum","maxsum)","method","mid","mid.next","middl","middle);","middle;","min","min(int","min(result,","min]","min])","minimum","minnumberinrotatearray(int[]","minpric","minprice;","minsequentialsearch(array);","minstack","minstack()","minsubarraylen(int","minwindow(str","mirror(root.left);","mirror(root.right);","mirror(treenod","moor","move","movezeroes(int[]","movingcount(int","multipli","multiply(str","myqueu","myqueue()","myqueue();","mystack","mystack()","mystack();","n","n)","n+1个节点。那么我们就要定位到第","n+1，两个指针同时向右移动，当2号指针变为null的时候，相当于指向了第len+1个节点的时候，1号指针应该指向第","n/2","n1","n1.next","n1.next;","n1;","n2","n2.next","n2.next.next","n2.next.next;","n2.next;","n2.value)","n2;","n2];","n2×n","n3","n3.next","n3.next;","n3;","n;","n>2n>2n>2","need","neg","new","newnum)","next","next;","nexttemp","nexttemp;","next指向双亲结点","nnn","node","node(1);","node(2);","node(3);","node(int","node)","node,","node.","node.left;","node.next;","node;","nodes.","nodesseen","nodesseen.add(head);","non","nonzeroel","normally,","note:","nth","null","null)","null){","null;","nullptr","nullptr)","null，就交换它的左右子节点，然后对其左右子树进行镜像化。","num","num)","num);","num,","num.length","num1,","num1.charat(i)","num1.length(),","num2)","num2.charat(j)","num2.length();","num:","num:nums2){","num;","num[i","num[i]","num[i];","num[j","num[j]","num[num.length","number","number\"","number.","numbers,","numbers.length","numbers:","numbers[i]","nums)","nums,","nums,int","nums.length","nums.length;","nums1)","nums1){","nums1,","nums2)","nums2[j]){","nums[0];","nums[i","nums[i++]","nums[i]","nums[i];","nums[j];","nums[k++]","nums[len","nums[nums.length","nums[pivotpos];","o(1)","o(1)o(1)o(1)","o(1)o(1)o(1)。","o(h)o(h)o(h)。m","o(log(n))o(log(n))o(log(n))","o(logn)o(logn)o(logn)。","o(m)o(m)o(m)","o(n)","o(n)o(n)o(n)","o(n)o(n)o(n),","o(n)o(n)o(n).","o(n)o(n)o(n)。","o(n)o(n)o(n)。由于是直接对原数组进行操作，空间复杂度为","o(n)o(n)o(n)，空间复杂度为","o(n/2)o(n/2)o(n/2)","o(n2)o(n^2)o(n​2​​)。","o(nlogn)o(nlogn)o(nlogn)","o(nlogn)o(nlogn)o(nlogn),","obj","obj.empty();","obj.isempty();","obj.peek();","obj.pop();","obj.push(x);","obj.top();","object","occur","odd","on","once,","one.","onto","oper","out","out.pop();","out.push(in.pop());","output","output:","p","p)","p.length()","p.length();","p.tochararray())","p1","p1)","p1.next;","p1.val","p2","p2.next;","p2.val","p;","pair","pair(root,","pair(root.left,","pair(root.right,","palindrom","param_2","param_3","param_4","parent","parent;","pariti","parity/","part","partit","partition(int[]","pass","path","pattern","pattern,","pattern.length())","pattern.length();","peek()","pivot","pivot)","pivotindex","pivotindex,","pivotpo","pivotpos的index","pivotpos的，右边的都是小于","pivotpos的，根据","place","platform","pnode","pnode)","pnode.next;","pnode.right;","po","pointer","poll()","polllast()","pop","pop()","pop。","posofroot","post","post;","pre","pre,","pre;","pre[prel]存的是根节点的值","prev","prev;","prevent","prev指向前一个节点","prices[])","prices[i]","printdoublelinkedlist(doublenod","printdoublelinkedlist(head2);","printdoublelinkedlist(reverselist(head2));","printlinkedlist(head);","printlinkedlist(head1);","printlinkedlist(nod","printlistfromtailtohead(listnod","priorityqueu","privat","product","products)","products.length","products[i","products[i]","public","push","push(int","put()","put()，两个字符串执行中的返回值应该相同。","q","q.add(root);","q.add(t1.left);","q.add(t1.right);","q.add(t2.left);","q.add(t2.right);","q.poll();","q1","q2","q2，push","questions.","queue","queue.","queue.add(root);","queue.add(x);","queue.offer(node.left);","queue.offer(node.right);","queue.offer(root);","queue.poll();","queue.size();","queue.size();//当遍历完当前层以后，队列里元素全是下一层的元素，队列的长度是这一层的节点的个数","queue1","queue1.add(x);","queue1.peek();","queue1;","queue2","queue2.add(queue1.remove());","queue2.isempty())","queue2.remove();","queue2;","queue;","quicksort","r","r1","r1++;","r1;","r2","r2;","re","reconstructbinarycore(pre,","reconstructbinarytree(int[]","recov","rectcover(int","recurs","remov","removeduplicates(int[]","removeduplicates(vector&","removeelement(int[]","removenthfromend(listnod","repeat","replacespace(stringbuff","res;","result","result.add(nums2[i]);","result.next","result.next;","result;","result[index++]","result[resultindex++]","resultindex","resultindex);","resultset","ret","ret.add(head.val);","ret.add(listnode.val);","ret.add(stack.pop());","ret.addall(printlistfromtailtohead(listnode.next));","ret;","retriev","return","return;","rev","revers","reverselist(doublenod","reverselist(head.next);","reverselist(head1);","reverselist(listnod","reverselist(nod","right","right)","right);","right.next;","right;","right_height","right_height)","rightbound","rightdepth","rightofpr","rightofpre)","rightofpre)，后来发现不行，因为","rightofpre,","rightofpre。","root","root)","root);","root.left","root.left;","root.right","root.right;","root;","rotat","rotate(int[][]","row","row++;","rows,","s","s)","s,","s.add(0);","s.length())","s.length();","s.pop();","s.replaceall(\"[^a","s.tochararray())","s.tochararray()){","s.tochararray();","same","sampl","satisfi","save","sb","sb.append(num);","sb.charat(0)","sb.deletecharat(0);","sb.length()","sb.tostring();","schararray","se","search","searchmatrix(int[][]","second","seen","sell","set","set1","set1.add(num);","set2","set2.add(num);","set，如果","shrink","singl","singlenumber(int[]","singleton","singleton();","singleton(){}","singletonhold","singletonholder.instance;","singleton{","singli","size","slow","slow.next;","smaller.","smap","solut","sort","sort,","sort.","sortarraybyparity(int[]","sortcolors(int[]","sorted,","space","specifi","spiral","spiralorder(int[][]","square(int","square(n);","sstring","stack","stack();","stack.","stack.add(listnode.val);","stack.add(new","stack.polllast();","stack.pop().value)","stack.push(cur);","stack.push(right);","stack1","stack1.push(x);","stack1;","stack2","stack2.isempty())","stack2.peek();","stack2.pop();","stack2.push(stack1.pop());","stack2;","stack<>();","stackdata;","stackmin;","stair","start","start)","start,","start;","static","step","stock","storag","str","str)","str.charat(p1","str.length()","str.setcharat(p2","str.split(\"","str.tostring();","str1","str2","str2);","strarr","string","string[26];","string[]","stringbuff","stringbuffer(actual).reverse().tostring();","stringbuild","stringbuilder();","structur","subarray","submission。","substr","such:","sum","sum;","swap","swap(array,","symmetr","synchron","system.out.print(\"doubl","system.out.print(\"link","system.out.print(\"|","system.out.print(end.valu","system.out.print(head.valu","system.out.print(ispalindrome1(head)","system.out.print(ispalindrome2(head)","system.out.print(node.valu","system.out.println(\"=========================\");","system.out.println(\"queu","system.out.println();","system.out.println(ispalindrome3(head)","t","t)","t.length())","t.length(),","t.tochararray())","t.tochararray()){","t.tochararray();","t1","t1,","t2","t2)","t2.left)","t2.right);","t2.val)","t=\"abc\"，当","tail","take","target","target)","target,","tchararray","temp","temp;","then,","therefor","therefore,","this.stackdata","this.stackmin","this.stackmin.push(newnum);","this.val","this.valu","this:","threesum(int[]","threshold,","throughout","thu","time","tmap","tmp","tmp;","toeplitz","togeth","top","top()","topel","topelement;","tree","tree),","tree,","tree/","treedepth(root.left);","treedepth(root.right);","treedepth(treenod","treedepth2(binarytreenod","treelinknod","treelinknode(int","treenod","treenode(int","treenode(pre[leftofpre]);","true;","true。判断其左上方元素的时候要确保","tstring","two","twosum(int[]","unbalanc","unbalanced,","unicod","uniqu","unnamed42'","us","val","val)","val;","valid","valu","value;","value，并把原来的","visit","visited[0]","void","vote","way","we'll","whether","while(!queue.isempty()){","while(i","while(row=0){","window","without","word","wordpattern(str","worst","x","x)","x;","xor","xoy","y","z0","za","zero","{","{0,","{1,","{1,2,","{2,","{4,","{{0,","|","|=","||","}","};","}else{","~a;","~b;","–","“we","“we%20are%20happy.”。","①如果","①如果一个节点的右子树不为空，那么在中序遍历的下一个节点就是其【右子树的最左节点】。","①最左边竖着放，右边变成","①第一下跳一级，这个时候剩下的跳法就是","②如果","②如果一个节点的右子树为空，那么在中序遍历的下一个节点就是其【最近的一个祖先节点，这个祖先节点的左子树包含该节点】。","②最左边横着放，要放两个，右边变成","②第一下跳两级，这个时候剩下的跳法就是","《effect","一个","一个整数数组","一个格子的坐标可以根据线性顺序和列数算出","一只青蛙一次可以跳上","一头一尾两个指针不断向中间靠拢。","一直加，用","一直是指向最后一个节点，并且不断被返回到上一层调用的。","三路快排的思路","不为空，把","不为空，那么直接","不好的写法二：虽然在多线程环境中能工作，但效率不高","不好的解法一：只适合于单线程环境","不是线性变化的，有可能不会出现两者相等的情况。例如，如果一颗只有左子树没有右子树的二叉树，第一次递归的时候在重建右子树的时候就会导致","不直接建立字母之间的映射关系，而是把要建立映射关系的字母同时映射到另外一个数字。相当于建立了一个间接映射关系。","不能对原生类型使用，所以要对原生数组进行装箱，把","不过这个算法，同样是有限状态机，其实有好几个写法，不过核心应该都是做一个三进制的计数器。我觉得对我而言是真的很难理解，现在也没有完完全全理解。这里先把几个解释的帖子记下来，等到有时间再来攻克。","且再开辟的内存空间固定(与","两个数不一样，肯定至少有一个二进制位是不一样的。我们就从不一样的二进制位中选择一个。设这两个数为a","个","个位置上去，如果它和第","个位置上的元素值相等，那么可以判断这个元素是重复的。","个元素","个元素分成两部分。","个元素的数组，除了两个数只出现一次外，其余元素都出现两次，让你找出这两个只出现一次的数分别是几，要求时间复杂度为","个相同的元素。","个节点.","个节点。","个节点，也就是第","个节点，即第","中。","中加","中存储的是","中对应的值减去","中所有的字符在","中有相同字母，那么","中每个字母都不相同，那么","中的一个字符，且减去这个字符之后，这个字符的数量就不够了，因此需要把","中的值一定是负数，因为之前","中的值先加1。","中的字符在","中的字符才会被减成负数。","中的字符，那么这个字符在","中的所有元素","中，pop的时候，先把","中，会导致那个字符对应的值小于0，根据这个条件，把左指针一步一步移到和右指针相同的位置，并且在移动的过程中把","中，剩下最后一个元素，然后弹出这个元素并返回。然后交换","为标准，将数组的","为空。如果","为空，检查","为零的时候，map['a']、map['b']","主要分为两种情况：","主要是利用","之前的最大的子序列和。","之后，pivotpo","之外没有办法访问它，因此它是懒汉式的；同时读取实例的时候不会进行同步，没有性能缺陷；也不依赖","之间形成一个动态窗口，每次根据窗口内的元素的和与给定的数字作比较，确定是收缩窗口还是向右扩大窗口。","也为空，说明整个","也可以得到正确结果。","了。因为","了，所以只有不在","二叉树的下一个节点","二叉树的深度","二叉树的镜像","二叉树的镜像。","二维数组中的查找","介绍","从","从右上角开始","从后向前扫描替换的话，先扫描一遍字符串，根据空格的数量在字符串的末尾先补充足够的空格，每遇到一个空格，就在末尾补充两个空格，这样扫描一遍下来，替换之后的字符串的总长度就会确定下来。","从外层向内层，一圈一圈地遍历。","从头开始选一个值","从尾到头打印链表","从左到右从上到下遍历数组，这是最慢的方法。","从每一行开始，对每一行进行二分查找。","代码","以保证数组不会越界。","任何一个数字异或它自己都等于","优点：打出来的表可复用。缺点：空间复杂度为","但是这个实现依赖了","位。","位和第","位和第二个数的第","位数分别为","位的乘积会影响结果的第","位的乘积先存到结果的","位，最后再统一计算进位。","作者源代码","使用","使用一个","使用一个布尔类型的数组标记所有格子是都已经被访问过了。","使用两个栈，一个数据栈，一个最小值栈。push","使用两个队列","使用同样的思路解决。","使用字符串数组来进行判断。","使用快慢指针法，等到慢指针走到链表的一半时，把链表的右半部分翻转，翻转之后，两个指针，一个从头，一个从尾，同时向中间遍历，相互对比。判断之后先把结果存起来，然后把链表结构恢复，返回结果。","使用枚举","使用栈实现队列。","使用正则表达式和","使用递归的方式，首先，一次输入两个节点，然后对比两个节点的值，递归判断第一个节点的左子树节点和第二个节点的右子树节点是否相同，递归判断第一个节点的右子树节点和第二个节点的左子树节点是否相同。递归开始的时候，函数的两个实参都填","使用队列作为辅助。每次都从队列中弹出来两个对象，比较他们的值，如果相同，把他们的子节点按照以下顺序存入队列中：①第一个节点的左节点②第二个节点的右节点③第一个节点的右节点④第二个节点的左节点。","使用队列实现栈。","例如输入","依次遍历元素，然后判断其值和其坐上方元素的值是都一样，如果不一样，就返回","修改为","假设","元素之后，后边的判断就是多余的了。不如改为直接赋值。加上了判断就一定会判断","先对数组进行排序，然后两个数组分别设一个指针，分别比较。","先打一个表。注意通过","先排序，再对比。这个方式也适用于","先设计了一个","关键字，解决了多实例的问题，但是并不够高效。","其中至少有两个的值是小于等于零的。可以小于零，但至少要等于零。不然","再把第2位为1的所有数都相互之间做异或运算，必然能够找出a和b中的另外一个数字。","再然后，以这一位是","减为2ms。可能是函数调用也要占用一部分空间。而直接使用数组，除了数组的空间不需要额外的空间。","函数的栈","刚好指向最后一个节点。","判断一个二叉树是否是镜像二叉树。","判断链表是否为回文链表。","利用传入的数组已经有序的特点。","到","剑指offer","剑指offer:二叉树的深度（递归&&非递归）（java）","加1。如果","加上了","动态窗口","动态规划。","包含","原来的","参数:","参考","参考文献","参考资料","双向链表节点定义","反复调用","反转单链表和双链表。","变为","变态跳台阶问题","变成","另外一道类似的题目：[编程题]二叉树遍历","同样使用两个栈，不过压入逻辑相比解答1修改了一下。当要入栈的数字小于当前最小值的时候，把入栈的数字同时压入数据栈和最小值栈。当要入栈的数字大于等于当前最小值的时候，把当前最小值取出来再压入最小值栈一次，相当于当前的最小值是冗余的，但是冗余自有冗余的用处。","同理，if","吗？不知道这背后的数学规律。","和","和中序遍历序列","和第一种解法的思路相似，j","回溯的思想。","因为","因为除了这两个数之外其他的数都是成对出现的，所以其他的数中，第2位是0的数是成对出现的，第2位是1的数也是成对出现的。","因此，把第一个数的第","在string中遍历所有字符的最快方法","在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。","在一个长度为n+1的数组里的所有数字都在1到n的范围内，所以数组中至少有一个数字是重复的。请找出数组中任意一个重复的数字，但不能修改输入的数组。例如，如果输入长度为8的数组{2,","在一个长度为n的数组里的所有数字都在","型。","型整数有32个二进制位。","复杂度分析","大于","头插法构建逆序链表","头插法的关键部分","如何正确地写出单例模式","如果从前向后扫描空格然后把空格替换成","如果判断为真，说明","如果我们要删除倒数第1个节点，也就是要删除第len","如果我们要删除倒数第2个节点，也就是要删除第len","如果我们要删除倒数第n个节点，也就是要删除第","如果某个二进制位是1，通过和结果进行","如果此题修改为【判断该数组中是否存在该整数，如果存在，统计该整数出现的次数。】该怎么做？","字符集。","字符集。但是","字符集的字符串。题目中额外提示了可以考虑算法是否适用于","字符集的字符串处理。不适合处理","字符集的字符串，所以这个算法也可以通过。","存储每个组的值，然后依次遍历元素，根据","完整测试代码","实现。","实现单例模式","对于每个二进制位，统计这一位上1的个数，然后对3取余，如果余数不为0，说明不重复的那个数的这个二进制位为1。","对应位置的字符串是否相同。","对斐波那契问题分析的非常好的一篇文章：计算斐波纳契数，分析算法复杂度","对末尾加零的操作优化","对称的二叉树","将这一位为","小菜园博客","就一定会经过","就换下一个数，因为众数占总体的一半以上，所以众数总能脱颖而出。","就是","层次遍历。","层次遍历的另一种写法：双循环","左右。","左边寻找还是右边寻找。","左边的元素都是大于","已经包含了当前元素，说明发生循环了。就返回","已经存在，那么就覆盖掉","已经被减到零，说明前面已经匹配到的字符","带取最小值功能的栈。","开始，所以跳法可以分为两类","弹出元素的时候，不需要再进行检查，弹出元素的同时，也把最小值栈的元素弹出，因为最小值栈的元素是冗余的，就是为了一一对应，不用再检查。","当","当作返回值。","当链表长度为","很巧妙的一个算法，先把一个数组的最大值和最小值圈起来。","快慢指针，不过不是两个指针都从头开始，而是快指针从第一个节点开始，慢指针从第二个节点开始，这样，快指针一次走两步，慢指针一次走一步。当链表长度为奇数的时候，快指针可以走到最后一个，此时，慢指针走向链表右半部分的第一个节点。当链表长度为偶数的时候，快指针可以走到倒数第二个节点，此时慢指针同样走到链表右半部分的第一个节点。此时把链表的右半部分压栈，然后找一个指针指向开头，一个一个比较。","思路","思路1：给较短链表的长度和较长链表的长度补齐，补的高位节点的值都设为0。","总结","恢复成最初的数值。这样就相当于从一个新的位置重新开始。","我们可以用","或","或者","所以","所以如果两个字符串模式相同，只要按顺序执行","所以，f(n)=f(n−1)+f(n−2),n>2f(n)=f(n","所以，如果我们把第2位为0的所有数都相互之间做异或运算，必然能够找出a和b中的一个数字，因为其他的数都是成对出现的，异或之后所有位都0了。","托普利兹矩阵。","把二维数组看作一个矩阵，选择矩阵右上角或者左下角的元素开始比较。逐步缩小比较范围。","把值为","把所有元素放到栈中，然后从头开始遍历，和栈中弹出来的元素进行比较。","把每一步的结果计算出来，最后直接根据序号返回对应值。","把结果看作一个大小为","拓展","拓展：反转双向链表","指向","指向位置的字符是哪个，在判断之后都会被减去","指向当前节点。最初的时候，prev指向null，cur指向第一个节点。最后","指向的不是","指针指向的字符是","操作，如果","操作，把这个1添加到结果中对应的二进制位上。","改为","数据结构进行深度优先遍历。","数组中重复的数字","数组为","数组和","数组效率更高？","数组来判断。","数组比使用","数组的算法要快。上边的算法优化之后是","数组的长度","斐波那契数。","斐波那契数列","斐波那契数列算法时间复杂度","方法是比较慢的，优化之后运行总时间由","方法的时候，就会创建多个实例。","旋转之后，从左向右对比两个相邻的数，总会找到一组数，第一个数大于第二个数，那么第二个数就是最小值。因为第二个数往后的所有数就是旋转操作移到最后的一系列数。","旋转数组的最小数字","旋转正方形矩阵。","旋转的数字旋转之后，几个位置的数字之间是有规律的。","无关)。","时间复杂度","时间复杂度为","时间复杂度为对数级别","时间复杂度降到了","时间复杂度：o(n)o(n)o(n)","时间复杂度：o(n)o(n)o(n)。","时，","是不会为零的。","是两个数组的长度。","是私有的，除了","曾经想把这里：","替换空格","最后一句","最后使用了一个","最坏情况下，树退化成一个单链表，递归空间复杂度变成","有一个","本篇文章的几个题目都可以看做是斐波那契问题。","本系列页面是把博客中的一些文章按照类别聚合在一起，更方便读者对同一类别的文章集中阅读。","本解法是借助了","本题和第","本题拓展","机器人的运动范围","机器人的运动范围__牛客网","机器人的运动范围。","来源：有哪些解决完之后让你拍案叫绝的算法问题？","来进行判断是因为如果是","构建","核心思想","核心思路","核心目的：我们要定位到要删除元素的前一个元素。","根据前面找一个不同数的思路算法，在这里把所有元素都异或，那么得到的结果就是那两个只出现一次的元素异或的结果。","根据异或的性质","次的，所以开销更小。","次，但是如果直接赋值，多余的赋值操作的次数是少于","正数","每个位置的字符也不能相同，如果相同，就不符合题意。","每次","比上一个算法优化的地方在于空间复杂度由","求斐波那契数列的第","没错，hashset的contains方法是调用map.containskey(o)方法的，containskey(o)是根据hash函数去做散列的，所以与元素的多少无关，无论是多少元素containskey(o)的时间复杂度基本上o(1)。","注意","注意：每一类跳法的总数是第一下的跳法乘以剩下的跳法，不是相加。","涉及两个变量，一个存储截至目前最小的值，一个存储截至目前最大的利润。","深入理解java","然后设计两个指针，右指针指向哪个字符，就把这个字符在","然后，因为这两个只出现一次的元素一定是不相同的，所以这两个元素的二进制形式肯定至少有某一位是不同的，即一个为","版本。","牛客网","现在假设我们已经选择了某一个二进制位，假设我们选择的是从右向左数第2位，简称第2位。","用两个栈实现队列","用两个栈来实现一个队列，完成队列的push和pop操作。","的","的两个数相乘，乘积的位数不超过","的位都是我们要找的那一位。","的元素放到第","的关系就能确定如果要继续寻找是在","的大矩形，总共有多少种方法？","的小矩形无重叠地覆盖一个","的小矩形横着或者竖着去覆盖更大的矩形。请问用","的库，并不是一个通用的解法。","的引用。","的所有元素做异或，得出的数就是只出现一次的数中的一个","的所有元素做异或，得出的数就是只出现一次的数中的另一个。","的数组，那么第一个数的第","的数量已经足够了。","的时候","的时候，","的时候，prev","的时候，先把元素加到最后，然后自己弹出元素的同时让元素进入队列，循环n","的时候，如果小于等于当前最小值，同时压入两个栈，然后每次弹出的时候，数据栈弹出的数和最小值栈的栈顶作比较，如果相同，那么把最小值也弹出。","的时候，直接","的测试用例只有","的特性。hashmap","的类库。","的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。例如，如果输入长度为7的数组","的问题。","相关链接","相同的元素是在同一条对角线上的，可以看作同一组。使用一个","相当于把当前节点的下一个节点指向了当前节点。递归调用到最后，p","矩形覆盖问题","矩阵中的路径","示例","示意图如下：","空间占用，两次调用，数值差距很大，不知道为什么。","空间复杂度","空间复杂度：","空间复杂度：o(1)o(1)o(1)","空间复杂度：o(n)o(n)o(n)","第","第一遍是确定，如果","第二遍是确定，如果","简单介绍本题中用到的","算出来他所在的组，然后判断其值和其所在组的值是否一致。","算法","类的","类的几个方法。","类的相关方法","级。求该青蛙跳上一个","级台阶，也可以跳上","级的台阶总共有多少种跳法。","给定一棵二叉树和其中的一个结点，如何找出中序遍历顺序的下一个结点？树中的结点除了有两个分别指向左右子结点的指针以外，还有一个指向父结点的指针。","统计每一位上1的个数，通过和二进制1进行位与操作。","缓存中序遍历数组每个值对应的索引","而a和b的第2位，只有两种可能：","节点即可。","获取根节点在中序遍历序列中的位置","行可以直接改为：","行有一个判断：","补充解答：修改版","表示截至目前的最大正子序和。","表示行号和列号，r","被减为零之后，如果再遇到字符","要理解这个算法需要对快速排序算法有所了解。","解法1[c++]：数数判定","解法1[java]：","解法1[java]：从后向前扫描并替换空格","解法1[java]：动态重排序加判断","解法1[java]：快慢指针","解法1只适合对数字型问题进行查找重复。解法2和解法3还可以用于对象的查找重复。","解法1：利用矩阵的特点","解法2[java]：hash表","解法2[java]：双指针","解法2[java]：打表","解法2[java]：排序然后判断","解法2：","解法3[java]：使用hash数据结构","解法3：时间复杂度为o(n2)o(n^2)o(n​2​​)","解答","解答1[java]","解答1[java]:","解答1[java]：","解答1[java]：二次筛选","解答1[java]：使用两个队列","解答1[java]：使用栈","解答1[java]：递归","解答1[java]：递归算法","解答1小优化","解答1：","解答2","解答2[java]","解答2[java]：","解答2[java]：使用comparator()","解答2[java]：使用一个队列","解答2[java]：使用头插法重建链表","解答2[java]：时间复杂度","解答2[java]：有限状态机","解答2[java]：神奇的解法","解答2[java]：非递归","解答2[java]：非递归算法","解答2[java]：非递归，深度优先遍历","解答3[java]：","解答3[java]：使用快排","解答3[java]：递归","解答3[java]：非递归，广度优先遍历","解答[java]","设计两个指针，一个","语句如果改为","负数","跳台阶问题","输入:","输入一个链表，按链表值从尾到头的顺序返回一个arraylist。","输入无效，或者数组中没有重复的数字","输入有效，并且数组中存在重复的数字，返回值为重复的数字","返回值:","还是","这个值。","这个判断其实可以不要，因为只要遇到第一个","这个才是真的全自动顺时针打印。设计了两个数组，一个","这个是","这个算法叫做摩尔计数法（boyer","这个算法基于一下规律：","这个算法是通过两个数组，两个数组对应两种映射关系。但是都是字符映射到字符的。","这个算法比上边使用","这个算法的原理是，数组排序之后，众数一定位于","这个解法只适合于","这个解答，可以适用于保留最多不超过","这个问题要求贴近底层的思考方式，直接对字符进行操作。","这么一组数就表示下一步该怎么走，如果越界了，那么","这也看作一个斐波那契问题。","这句，不论","这样就解出题目。忽略寻找不同位的过程，总共遍历数组两次，时间复杂度为o(n)。","这种写法仍然使用jvm本身机制保证了线程安全问题；由于","这种写法使用了懒加载（惰性加载）模式，当需要使用到的时候在进行判断，然后创建实例。","这种写法存在的问题是：当有多个线程并发调用","这种方式访问数组的时候，会自动把字符转换为","这道题可以和第283题","进阶：链表中的数是正向存储的","选定一个数，遇到相同的就加1，不同就减1，count","递归的另一种写法","递归的方式，如果一个节点不等于","递归算法有可能导致函数调用栈溢出。","遍历两次，第一次算出链表长度，第二次，定位到要删除的节点的前一个节点。","遍历的时候被减过。","采用","重建二叉树","链表加法。","链表定义","链表的结构","镜像二叉树和这道题很像。","队列中的元素为int类型。","队列的前两个元素都存成根节点。","难道是因为使用","静态内部类","项","顺时针打印矩阵","题可以使用同样的方法解决。","题目","题目再解析","题目来源：https://leetcode.com/problems/maximum","题目来源：https://leetcode.com/problems/sort","题目：","题目：请实现一个函数，把字符串中的每个空格替换成\"%20\"。","题目：输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列","（1）a的第2位是1，b的第2位是0；","（1）找出数组中重复的数字","（2行8列）的矩形，","（2）a的第2位是0，b的第2位是1。","（2）不修改数组找出重复的数字","，一个cur","，另一个为","，现在需要找到这一位。","："],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"介绍","keywords":"","body":"介绍\n本系列页面是把博客中的一些文章按照类别聚合在一起，更方便读者对同一类别的文章集中阅读。\n采用 Gitbook 实现。\n"},"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html":{"url":"jian-zhi-offer/20190311 - 剑指Offer 2. 实现单例模式.html","title":"剑指Offer 2. 实现单例模式","keywords":"","body":"\n不好的解法一：只适合于单线程环境\npublic class Singleton{\n    private static Singleton instance;\n    private Singleton(){}\n\n    public static Singleton getInstance(){\n        if(instance == null){\n            instance = new Singleton();\n        }\n\n        return instance;\n    }\n}\n\n这种写法使用了懒加载（惰性加载）模式，当需要使用到的时候在进行判断，然后创建实例。\n这种写法存在的问题是：当有多个线程并发调用 getInstance() 方法的时候，就会创建多个实例。\n不好的写法二：虽然在多线程环境中能工作，但效率不高\npublic class Singleton{\n    private Singleton(){}\n    private static Singleton instance;\n\n    public static synchronized Singleton getInstance(){\n        if(instance == null){\n            instance = new Singleton();\n        }\n\n        return instance;\n    }\n}\n\n加上了 synchronized 关键字，解决了多实例的问题，但是并不够高效。\n静态内部类\npublic class Singleton {  \n    private static class SingletonHolder {  \n        private static final Singleton INSTANCE = new Singleton();  \n    }  \n    private Singleton (){}  \n    public static final Singleton getInstance() {  \n        return SingletonHolder.INSTANCE; \n    }  \n}\n\n《Effective Java》上所推荐的。\n这种写法仍然使用JVM本身机制保证了线程安全问题；由于 SingletonHolder 是私有的，除了 getInstance() 之外没有办法访问它，因此它是懒汉式的；同时读取实例的时候不会进行同步，没有性能缺陷；也不依赖 JDK 版本。\n使用枚举\npublic enum EasySingleton{\n    INSTANCE;\n}\n\n参考资料\n\n如何正确地写出单例模式 - Jark's blog\nJava Singletons Using Enum\n5种JAVA单例模式的实现、原理和演化\n\n"},"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html":{"url":"jian-zhi-offer/20190227 - 剑指Offer 3. 数组中重复的数字.html","title":"剑指Offer 3. 数组中重复的数字","keywords":"","body":"（1）找出数组中重复的数字\n题目\n在一个长度为n的数组里的所有数字都在 0 到 n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。例如，如果输入长度为7的数组 {2, 3, 1, 0, 2, 5, 3}，那么对应的输出是重复的数字2或者3。\n\n解法1[Java]：动态重排序加判断\n把值为 i 的元素放到第 i 个位置上去，如果它和第 i 个位置上的元素值相等，那么可以判断这个元素是重复的。\npublic class Solution {\n    public boolean duplicate(int[] numbers, int length, int[] duplication) {\n        // check whether the array is valid\n        if (numbers == null || length  length - 1) {\n                return false;\n            }\n        }\n\n        for (int i = 0; i \n复杂度分析\n时间复杂度为 O(n)O(n)O(n)。由于是直接对原数组进行操作，空间复杂度为 O(1)O(1)O(1)。\n解法2[Java]：排序然后判断\n解法3[Java]：使用Hash数据结构\n总结\n解法1只适合对数字型问题进行查找重复。解法2和解法3还可以用于对象的查找重复。\n（2）不修改数组找出重复的数字\n题目\n在一个长度为n+1的数组里的所有数字都在1到n的范围内，所以数组中至少有一个数字是重复的。请找出数组中任意一个重复的数字，但不能修改输入的数组。例如，如果输入长度为8的数组{2, 3, 5, 4, 3, 2, 6, 7}，那么对应的输出是重复的数字2或者3。\n解法1[C++]：数数判定\n#include \n\nint countRange(const int* numbers, int length, int start, int end);\n\n// 参数:\n//        numbers:     一个整数数组\n//        length:      数组的长度\n// 返回值:             \n//        正数  - 输入有效，并且数组中存在重复的数字，返回值为重复的数字\n//        负数  - 输入无效，或者数组中没有重复的数字\nint getDuplication(const int* numbers, int length)\n{\n    if(numbers == nullptr || length = start)\n    {\n        int middle = ((end - start) >> 1) + start;\n        int count = countRange(numbers, length, start, middle);\n        if(end == start)\n        {\n            if(count > 1)\n                return start;\n            else\n                break;\n        }\n\n        if(count > (middle - start + 1))\n            end = middle;\n        else\n            start = middle + 1;\n    }\n    return -1;\n}\n\nint countRange(const int* numbers, int length, int start, int end)\n{\n    if(numbers == nullptr)\n        return 0;\n\n    int count = 0;\n    for(int i = 0; i = start && numbers[i] \n相关链接\n\n（1）找出数组中重复的数字 作者源代码 - Github\n（2）不修改数组找出重复的数字 作者源代码 - Github\n（1）找出数组中重复的数字 - 牛客网\n\n"},"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html":{"url":"jian-zhi-offer/20190227 - 剑指Offer 4. 二维数组中的查找.html","title":"剑指Offer 4. 二维数组中的查找","keywords":"","body":"二维数组中的查找\n题目：\n在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\n\n解法1：利用矩阵的特点\n把二维数组看作一个矩阵，选择矩阵右上角或者左下角的元素开始比较。逐步缩小比较范围。\npublic class Solution {\n    public boolean Find(int target, int[][] matrix) {\n        if (matrix == null || matrix.length == 0 || matrix[0].length == 0)\n            return false;\n\n        int row = 0, column = matrix[0].length - 1; // 从右上角开始\n        while (row = 0) {\n            if (target == matrix[row][column])\n                return true;\n            else if (target > matrix[row][column])\n                row++;\n            else\n                column--;\n        }\n        return false;\n    }\n}\n\n解法2：\n从每一行开始，对每一行进行二分查找。\n解法3：时间复杂度为O(n2)O(n^2)O(n​2​​)\n从左到右从上到下遍历数组，这是最慢的方法。\npublic class Solution {\n    public boolean Find(int target, int [][] array) {\n        for(int i = 0; i \n拓展\n如果此题修改为【判断该数组中是否存在该整数，如果存在，统计该整数出现的次数。】该怎么做？\n相关链接\n\n二维数组中的查找 作者源代码 - Github\n二维数组中的查找 作者源代码 - 牛客网\n\n"},"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html":{"url":"jian-zhi-offer/20190227 - 剑指Offer 5. 替换空格.html","title":"剑指Offer 5. 替换空格","keywords":"","body":"题目\n题目：请实现一个函数，把字符串中的每个空格替换成\"%20\"。\n例如输入 “We are happy.”，则输出 “We%20are%20happy.”。\n\n解法1[Java]：从后向前扫描并替换空格\npublic class Solution {\n    public String replaceSpace(StringBuffer str) {\n        int p1 = str.length() - 1;\n        for (int i = 0; i = 0 && p2 > p1) { //在完成最后一个空格的替换之后，p1等于p2\n            char c = str.charAt(p1--);\n            if (c == ' ') {\n                str.setCharAt(p2--, '0');\n                str.setCharAt(p2--, '2');\n                str.setCharAt(p2--, '%');\n            } else {\n                str.setCharAt(p2--, c);\n            }\n        }\n        return str.toString();\n    }\n}\n\n这个问题要求贴近底层的思考方式，直接对字符进行操作。\n如果从前向后扫描空格然后把空格替换成 %20，那么就会导致这个空格之后字符需要整体向后移动，如果采用这种方式，那么时间复杂度会变成 O(n2)O(n^2)O(n​2​​)。\n从后向前扫描替换的话，先扫描一遍字符串，根据空格的数量在字符串的末尾先补充足够的空格，每遇到一个空格，就在末尾补充两个空格，这样扫描一遍下来，替换之后的字符串的总长度就会确定下来。\n相关链接\n\nStringBuffer - Java Docs\n\n"},"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html":{"url":"jian-zhi-offer/20190227 - 剑指Offer 6. 从尾到头打印链表.html","title":"剑指Offer 6. 从尾到头打印链表","keywords":"","body":"题目\n输入一个链表，按链表值从尾到头的顺序返回一个ArrayList。\n\n解答1[Java]：使用栈\nimport java.util.ArrayList;\nimport java.util.Stack;\n\npublic class Solution {\n    public ArrayList printListFromTailToHead(ListNode listNode) {\n        Stack stack = new Stack<>();\n        while (listNode != null) {\n            stack.add(listNode.val);\n            listNode = listNode.next;\n        }\n        ArrayList ret = new ArrayList<>();\n        while (!stack.isEmpty())\n            ret.add(stack.pop());\n        return ret;\n    }\n}\n\n解答2[Java]：使用头插法重建链表\nimport java.util.ArrayList;\nclass Solution {\n    public ArrayList printListFromTailToHead(ListNode listNode) {\n        // 头插法构建逆序链表\n        ListNode head = new ListNode(-1);\n        while (listNode != null) {\n            ListNode temp = listNode.next;\n            listNode.next = head.next;\n            head.next = listNode;\n            listNode = temp;\n        }\n        // 构建 ArrayList\n        ArrayList ret = new ArrayList<>();\n        head = head.next;\n        while (head != null) {\n            ret.add(head.val);\n            head = head.next;\n        }\n        return ret;\n    }\n}\n\nclass ListNode {\n    int val;\n    ListNode next = null;\n\n    ListNode(int val) {\n        this.val = val;\n    }\n}\n\n头插法的关键部分\nlistNode.next = head.next;\nhead.next = listNode;\n\n示意图如下：\n\n解答3[Java]：递归\nimport java.util.ArrayList;\nclass Solution {\n    public ArrayList printListFromTailToHead(ListNode listNode) {\n        ArrayList ret = new ArrayList<>();\n        if (listNode != null) {\n            ret.addAll(printListFromTailToHead(listNode.next));\n            ret.add(listNode.val);\n        }\n        return ret;\n    }    \n}\n\n递归算法有可能导致函数调用栈溢出。\n"},"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html":{"url":"jian-zhi-offer/20190228 - 剑指Offer 7. 重建二叉树.html","title":"剑指Offer 7. 重建二叉树","keywords":"","body":"题目\n题目：输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列 {1,2, 4, 7, 3, 5, 6, 8} 和中序遍历序列 {4, 7, 2, 1, 5, 3, 8, 6}，则重建出二叉树并输出它的头结点。\n\n解答1[Java]：递归\nimport java.util.HashMap;\n\npublic class Solution {\n    // 缓存中序遍历数组每个值对应的索引\n    private HashMap indexForInOrders = new HashMap<>();\n\n    public TreeNode reConstructBinaryTree(int[] pre, int[] in) {\n        for (int i = 0; i  rightOfPre)\n            return null;\n        TreeNode root = new TreeNode(pre[leftOfPre]); // pre[preL]存的是根节点的值\n        int posOfRoot = indexForInOrders.get(root.val); // 获取根节点在中序遍历序列中的位置\n        int leftTreeSize = posOfRoot - leftOfIn;\n        root.left = reConstructBinaryCore(pre, leftOfPre + 1, leftOfPre + leftTreeSize, leftOfIn);\n        root.right = reConstructBinaryCore(pre, leftOfPre + leftTreeSize + 1, rightOfPre, leftOfIn + leftTreeSize + 1);\n        return root;\n    }\n}\n\nclass TreeNode {\n    int val;\n    TreeNode left;\n    TreeNode right;\n\n    TreeNode(int x) {\n        val = x;\n    }\n}\n\n曾经想把这里：\nif (leftOfPre > rightOfPre)\n    return null;\n\n修改为 if (leftOfPre == rightOfPre)，后来发现不行，因为 leftOfPre 和 rightOfPre 不是线性变化的，有可能不会出现两者相等的情况。例如，如果一颗只有左子树没有右子树的二叉树，第一次递归的时候在重建右子树的时候就会导致 leftOfPre 大于 rightOfPre。\n另外一道类似的题目：[编程题]二叉树遍历 - 牛客网\n"},"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html":{"url":"jian-zhi-offer/20190228 - 剑指Offer 8. 二叉树的下一个节点.html","title":"剑指Offer 8. 二叉树的下一个节点","keywords":"","body":"题目\n给定一棵二叉树和其中的一个结点，如何找出中序遍历顺序的下一个结点？树中的结点除了有两个分别指向左右子结点的指针以外，还有一个指向父结点的指针。\n\n解答1[Java]：\n主要分为两种情况：\n①如果一个节点的右子树不为空，那么在中序遍历的下一个节点就是其【右子树的最左节点】。\n②如果一个节点的右子树为空，那么在中序遍历的下一个节点就是其【最近的一个祖先节点，这个祖先节点的左子树包含该节点】。\npublic class Solution {\n    public TreeLinkNode GetNext(TreeLinkNode pNode) {\n        if (pNode.right != null) {\n            TreeLinkNode node = pNode.right;\n            while (node.left != null)\n                node = node.left;\n            return node;\n        } else {\n            while (pNode.next != null) {\n                TreeLinkNode parent = pNode.next;\n                if (parent.left == pNode)\n                    return parent;\n                pNode = pNode.next;\n            }\n        }\n        return null;\n    }\n}\n\npublic class TreeLinkNode {\n    int val;\n    TreeLinkNode left = null;\n    TreeLinkNode right = null;\n    TreeLinkNode next = null; // next指向双亲结点\n\n    TreeLinkNode(int val) {\n        this.val = val;\n    }\n}\n\n"},"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html":{"url":"jian-zhi-offer/20190228 - 剑指Offer 9. 用两个栈实现队列.html","title":"剑指Offer 9. 用两个栈实现队列","keywords":"","body":"题目\n用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。\n\n解答1[Java]：\nimport java.util.Stack;\n\npublic class Solution {\n    Stack in = new Stack();\n    Stack out = new Stack();\n\n    public void push(int node) {\n        in.push(node);\n    }\n\n    public int pop() {\n        if (out.isEmpty())\n            while (!in.isEmpty())\n                out.push(in.pop());\n\n        if (out.isEmpty())\n            System.out.println(\"queue is empty\");\n\n        return out.pop();\n    }\n}\n\n思路\npush 的时候，直接 push 到 in 中。\npop 的时候，\n①如果 out 为空，检查 in，如果 in 也为空，说明整个 queue 为空。如果 in 不为空，把 in 中的所有元素 push 到 out 中。\n②如果 out 不为空，那么直接 pop。\n"},"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html":{"url":"jian-zhi-offer/20190228 - 剑指Offer 10. 斐波那契数列.html","title":"剑指Offer 10. 斐波那契数列","keywords":"","body":"本篇文章的几个题目都可以看做是斐波那契问题。\n斐波那契数列\n题目\n求斐波那契数列的第 n 项\n\n解法1[Java]：\npublic class Solution {\n    public int Fibonacci(int n) {\n        if (n \n时间复杂度为 O(n)O(n)O(n)，空间复杂度为 O(1)O(1)O(1)。\n解法2[Java]：打表\n把每一步的结果计算出来，最后直接根据序号返回对应值。\n优点：打出来的表可复用。缺点：空间复杂度为 O(n)O(n)O(n)。\n跳台阶问题\n这也看作一个斐波那契问题。\n题目\n一只青蛙一次可以跳上 1 级台阶，也可以跳上 2 级。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。\n解答1[Java]：\npublic class Solution {\n    public int JumpFloor(int n) {\n        if (n \n从 n>2n>2n>2 开始，所以跳法可以分为两类\n①第一下跳一级，这个时候剩下的跳法就是 f(n−1)f(n-1)f(n−1)，\n②第一下跳两级，这个时候剩下的跳法就是 f(n−2)f(n-2)f(n−2)，\n所以，f(n)=f(n−1)+f(n−2),n>2f(n)=f(n-1)+f(n-2),n>2f(n)=f(n−1)+f(n−2),n>2。\n注意：每一类跳法的总数是第一下的跳法乘以剩下的跳法，不是相加。\n矩形覆盖问题\n题目\n我们可以用 2×12 \\times 12×1 的小矩形横着或者竖着去覆盖更大的矩形。请问用 n 个 2×12 \\times 12×1 的小矩形无重叠地覆盖一个 2×n2 \\times n2×n 的大矩形，总共有多少种方法？\n解答1[Java]：\npublic class Solution {\n    public int RectCover(int n) {\n        if (n \n2×82 \\times 82×8 （2行8列）的矩形，\n①最左边竖着放，右边变成 2×72 \\times 72×7 的问题。\n②最左边横着放，要放两个，右边变成 2×62 \\times 62×6 的问题。\n变态跳台阶问题\n参考资料\n\n对斐波那契问题分析的非常好的一篇文章：计算斐波纳契数，分析算法复杂度\n斐波那契数列算法时间复杂度\n\n"},"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html":{"url":"jian-zhi-offer/20190304 - 剑指Offer 11. 旋转数组的最小数字.html","title":"剑指Offer 11. 旋转数组的最小数字","keywords":"","body":"\n解答1[Java]：\npublic class Solution {\n    public int minNumberInRotateArray(int[] array) {\n        int index1 = 0;\n        int index2 = array.length - 1;\n        int indexMid = 0;\n\n        if (array.length == 0) {\n            return 0;\n        }\n\n        while (array[index1] >= array[index2]) {\n            if (index2 - index1 == 1) {\n                indexMid = index2;\n                break;\n            }\n\n            indexMid = (index1 + index2) / 2;\n\n            if (array[index1] == array[indexMid] && array[indexMid] == array[index2]) {\n                return minSequentialSearch(array);\n            }\n\n            if (array[indexMid] >= array[index1]) {\n                index1 = indexMid;\n            } else if (array[indexMid] \n时间复杂度\n时间复杂度为对数级别 O(logN)O(logN)O(logN)。\n解答2[Java]：时间复杂度 O(n/2)O(n/2)O(n/2)\npublic class Solution {\n    public int minNumberInRotateArray(int[] array) {\n        if (array.length == 0) {\n            return 0;\n        }\n\n        int min = array[0];\n\n        for (int i = 1; i \n思路\n旋转之后，从左向右对比两个相邻的数，总会找到一组数，第一个数大于第二个数，那么第二个数就是最小值。因为第二个数往后的所有数就是旋转操作移到最后的一系列数。\n"},"jian-zhi-offer/20190304 - 剑指Offer 12. 矩阵中的路径.html":{"url":"jian-zhi-offer/20190304 - 剑指Offer 12. 矩阵中的路径.html","title":"剑指Offer 12. 矩阵中的路径","keywords":"","body":"\n"},"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html":{"url":"jian-zhi-offer/20190408 - 剑指Offer 13. 机器人的运动范围.html","title":"剑指Offer 13. 机器人的运动范围","keywords":"","body":"剑指Offer 13. 机器人的运动范围。\n\n解答1[Java]：递归算法\n核心思想\n回溯的思想。\n使用一个布尔类型的数组标记所有格子是都已经被访问过了。\n代码\npublic class Solution {\n    public int movingCount(int threshold, int rows, int columns) {\n        if (threshold = 0 && row = 0 && column  0) {\n            sum += num % 10;\n            num /= 10;\n        }\n\n        return sum;\n    }\n}\n\n解答2[Java]：非递归算法\n核心思想\n代码\nimport java.util.Stack;\n\npublic class Solution {\n    public int movingCount(int threshold, int rows, int cols) {\n        if (rows  s = new Stack<>();\n        boolean[] visited = new boolean[rows * cols];\n        int[][] xoy = {{0, 1, 0, -1}, {1, 0, -1, 0}};\n        int count = 0;\n        s.add(0);\n        visited[0] = true;\n        while (!s.empty()) {\n            int cur = s.pop();\n            count++;\n            // 一个格子的坐标可以根据线性顺序和列数算出\n            for (int i = 0; i = 0 && x = 0 && y  0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        return sum;\n    }\n}\n\n参考资料\n\n机器人的运动范围__牛客网\n\n"},"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html":{"url":"jian-zhi-offer/20190327 - 剑指Offer 27. 二叉树的镜像.html","title":"剑指Offer 27. 二叉树的镜像","keywords":"","body":"二叉树的镜像。\n\n解答1[Java]：\n核心思想\n递归的方式，如果一个节点不等于 null，就交换它的左右子节点，然后对其左右子树进行镜像化。\n代码\n/**\npublic class TreeNode {\n    int val = 0;\n    TreeNode left = null;\n    TreeNode right = null;\n\n    public TreeNode(int val) {\n        this.val = val;\n\n    }\n\n}\n*/\npublic class Solution {\n    public void Mirror(TreeNode root) {\n        if(root == null){\n            return;\n        }\n        TreeNode temp = root.left;\n        root.left = root.right;\n        root.right = temp;\n        Mirror(root.left);\n        Mirror(root.right);\n    }\n}\n\n"},"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html":{"url":"jian-zhi-offer/20190327 - 剑指Offer 28. 对称的二叉树.html","title":"剑指Offer 28. 对称的二叉树","keywords":"","body":"判断一个二叉树是否是镜像二叉树。\n\nLeetCode 101. Symmetric Tree\n解答1[Java]：\n核心思想\n使用递归的方式，首先，一次输入两个节点，然后对比两个节点的值，递归判断第一个节点的左子树节点和第二个节点的右子树节点是否相同，递归判断第一个节点的右子树节点和第二个节点的左子树节点是否相同。递归开始的时候，函数的两个实参都填 root 节点即可。\n代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        return isMirror(root, root);\n    }\n\n    public boolean isMirror(TreeNode t1, TreeNode t2) {\n        if (t1 == null && t2 == null)\n            return true;\n        if (t1 == null || t2 == null)\n            return false;\n        return (t1.val == t2.val) && isMirror(t1.right, t2.left) && isMirror(t1.left, t2.right);\n    }\n}\n\n复杂度分析\n时间复杂度\nO(n)O(n)O(n)\n空间复杂度\n最坏情况下，树退化成一个单链表，递归空间复杂度变成 O(n)O(n)O(n)。\n解答2[Java]：\n核心思想\n使用队列作为辅助。每次都从队列中弹出来两个对象，比较他们的值，如果相同，把他们的子节点按照以下顺序存入队列中：①第一个节点的左节点②第二个节点的右节点③第一个节点的右节点④第二个节点的左节点。\n队列的前两个元素都存成根节点。\n代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        Queue q = new LinkedList<>();\n        q.add(root);\n        q.add(root);\n        while (!q.isEmpty()) {\n            TreeNode t1 = q.poll();\n            TreeNode t2 = q.poll();\n            if (t1 == null && t2 == null)\n                continue;\n            if (t1 == null || t2 == null)\n                return false;\n            if (t1.val != t2.val)\n                return false;\n            q.add(t1.left);\n            q.add(t2.right);\n            q.add(t1.right);\n            q.add(t2.left);\n        }\n        return true;\n    }\n}\n\n参考\n\n剑指Offer 27. 镜像二叉树和这道题很像。\n\n"},"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html":{"url":"jian-zhi-offer/20190327 - 剑指Offer 29. 顺时针打印矩阵.html","title":"剑指Offer 29. 顺时针打印矩阵","keywords":"","body":"LeetCode 54. Spiral Matrix & 剑指Offer 29. 顺时针打印矩阵\n\n解答1[Java]：\n核心思想\n从外层向内层，一圈一圈地遍历。\n代码\nclass Solution {\n    public List spiralOrder(int[][] matrix) {\n        List ans = new ArrayList();\n        if (matrix.length == 0)\n            return ans;\n        int r1 = 0, r2 = matrix.length - 1;\n        int c1 = 0, c2 = matrix[0].length - 1;\n        while (r1  c1; c--) ans.add(matrix[r2][c]);\n                for (int r = r2; r > r1; r--) ans.add(matrix[r][c1]);\n            }\n            r1++;\n            c1++;\n            r2--;\n            c2--;\n        }\n        return ans;\n    }\n}\n\n解答2[Java]：\n核心思想\n这个才是真的全自动顺时针打印。设计了两个数组，一个 directionOfRow，一个directionOfColumn，这样，directionOfRow[i] 和 directionOfColumn[i] 这么一组数就表示下一步该怎么走，如果越界了，那么 ++i，相当于换成下一种走法。第一圈使用数组行数和列数来判定是否越界，第二圈就要靠 seen 数组来判断。\n代码\nimport java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List spiralOrder(int[][] matrix) {\n        List ans = new ArrayList();\n        if (matrix.length == 0) return ans;\n        int R = matrix.length, C = matrix[0].length;\n        boolean[][] seen = new boolean[R][C];\n        int[] directionOfRow = {0, 1, 0, -1};\n        int[] directionOfColumn = {1, 0, -1, 0};\n        int r = 0, c = 0, dierectionCount = 0;\n        for (int i = 0; i \n"},"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html":{"url":"jian-zhi-offer/20190326 - 剑指Offer 30. 包含 min 函数的栈.html","title":"剑指Offer 30. 包含 min 函数的栈","keywords":"","body":"带取最小值功能的栈。\n\n解答1：\n核心思想\n使用两个栈，一个数据栈，一个最小值栈。push 的时候，如果小于等于当前最小值，同时压入两个栈，然后每次弹出的时候，数据栈弹出的数和最小值栈的栈顶作比较，如果相同，那么把最小值也弹出。\n代码\nimport java.util.ArrayDeque;\nimport java.util.Deque;\n\npublic class MinStack {\n    private Deque stackData;\n    private Deque stackMin;\n\n    /** initialize your data structure here. */\n    public MinStack() {\n        this.stackData = new ArrayDeque<>();\n        this.stackMin = new ArrayDeque<>();\n    }\n\n    public void push(int newNum) {\n        if (this.stackMin.isEmpty()) {\n            this.stackMin.push(newNum);\n        } else if (newNum \n解答2[Java]：\n核心思路\n同样使用两个栈，不过压入逻辑相比解答1修改了一下。当要入栈的数字小于当前最小值的时候，把入栈的数字同时压入数据栈和最小值栈。当要入栈的数字大于等于当前最小值的时候，把当前最小值取出来再压入最小值栈一次，相当于当前的最小值是冗余的，但是冗余自有冗余的用处。\n弹出元素的时候，不需要再进行检查，弹出元素的同时，也把最小值栈的元素弹出，因为最小值栈的元素是冗余的，就是为了一一对应，不用再检查。\n代码\nimport java.util.ArrayDeque;\nimport java.util.Deque;\n\npublic class MinStack {\n    private Deque stackData;\n    private Deque stackMin;\n\n    /** initialize your data structure here. */\n    public MinStack() {\n        this.stackData = new ArrayDeque<>();\n        this.stackMin = new ArrayDeque<>();\n    }\n\n    public void push(int newNum) {\n        if (this.stackMin.isEmpty()) {\n            this.stackMin.push(newNum);\n        } else if (newNum \n"},"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html":{"url":"jian-zhi-offer/20190408 - 剑指Offer 39. 二叉树的深度.html","title":"剑指Offer 39. 二叉树的深度","keywords":"","body":"剑指Offer 39. 二叉树的深度\n\n解答1[Java]：递归\n/*\npublic class TreeNode {\n    int val = 0;\n    TreeNode left = null;\n    TreeNode right = null;\n\n    public TreeNode(int val) {\n        this.val = val;\n\n    }\n}\n*/\npublic class Solution {\n    public int TreeDepth(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n\n        int leftDepth = TreeDepth(root.left);\n        int rightDepth = TreeDepth(root.right);\n\n        return leftDepth > rightDepth ? leftDepth + 1 : rightDepth + 1;\n    }\n}\n\n递归的另一种写法\nclass Solution {\n    public int maxDepth(TreeNode root) {\n        if(root == null)\n            return 0;\n        return Math.max(maxDepth(root.left), maxDepth(root.right))+1;\n    }\n}\n\n解答2[Java]：非递归\n核心思想\n层次遍历。\n代码\nimport java.util.Queue;\nimport java.util.LinkedList;\npublic class Solution {\n    public int TreeDepth(TreeNode root) {\n        if(root == null)\n            return 0;\n        int deep = 0;\n        Queue queue = new LinkedList();\n        queue.offer(root);\n        int start = 0, end = 1;\n        while(!queue.isEmpty()){\n            TreeNode node = queue.poll();\n            start ++;\n            if(node.left != null){\n                queue.offer(node.left);\n            }\n            if(node.right != null){\n                queue.offer(node.right);\n            }\n            if(start == end){\n                end = queue.size();\n                start = 0;\n                deep ++;\n            }\n        }\n        return deep;\n    }\n}\n\n层次遍历的另一种写法：双循环\npublic class Solution {\n    public int treeDepth2(BinaryTreeNode root) {\n        if (root == null)\n            return 0;\n\n        BinaryTreeNode current = null;\n        LinkedList queue = new LinkedList();\n        queue.offer(root);\n        int cur, last;\n        int level = 0;\n        while (!queue.isEmpty()) {\n            cur = 0;//记录本层已经遍历的节点个数  \n            last = queue.size();//当遍历完当前层以后，队列里元素全是下一层的元素，队列的长度是这一层的节点的个数  \n            while (cur \n参考资料\n\n[剑指offer] 二叉树的深度\n剑指offer:二叉树的深度（递归&&非递归）（java）\n\n"},"leetcode/20190308 - LeetCode 1. Two Sum.html":{"url":"leetcode/20190308 - LeetCode 1. Two Sum.html","title":"LeetCode 1. Two Sum","keywords":"","body":"\n解答1[Java]：\nimport java.util.HashMap;\n\npublic class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        HashMap map = new HashMap();\n\n        for (int i = 0; i \n"},"leetcode/20190326 - LeetCode 2. Add Two Numbers.html":{"url":"leetcode/20190326 - LeetCode 2. Add Two Numbers.html","title":"LeetCode 2. Add Two Numbers","keywords":"","body":"链表加法。\n\n解答1[Java]：\n核心思想\n代码\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        ListNode dummyHead = new ListNode(0);\n        ListNode p1 = l1;\n        ListNode p2 = l2;\n        ListNode result = dummyHead;\n        int carry = 0;\n        int sum;\n\n        while (p1 != null || p2 != null) {\n            int x = (p1 != null) ? p1.val : 0;\n            int y = (p2 != null) ? p2.val : 0;\n            sum = x + y + carry;\n            carry = sum / 10;\n            result.next = new ListNode(sum % 10);\n            result = result.next;\n            if (p1 != null) {\n                p1 = p1.next;\n            }\n            if (p2 != null) {\n                p2 = p2.next;\n            }\n        }\n        if (carry > 0) {\n            result.next = new ListNode(carry);\n        }\n\n        return dummyHead.next;\n    }\n}\n\n进阶：链表中的数是正向存储的\n思路1：给较短链表的长度和较长链表的长度补齐，补的高位节点的值都设为0。\n"},"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html":{"url":"leetcode/20190305 - LeetCode 3. Longest Substring Without Repeating Characters.html","title":"LeetCode 3. Longest Substring Without Repeating Characters","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public int lengthOfLongestSubstring(String s) {\n        int[] freq = new int[256];\n        int l = 0;\n        int r = -1;\n        int res = 0;\n\n        while (l = s.length()) {\n                break;\n            } else if (r + 1  b ? a : b;\n    }\n}\n\n思路\n动态窗口\n"},"leetcode/20190308 - LeetCode 15. 3Sum.html":{"url":"leetcode/20190308 - LeetCode 15. 3Sum.html","title":"LeetCode 15. 3Sum","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public List> threeSum(int[] num) {\n        Arrays.sort(num);\n        List> res = new LinkedList<>();\n        for (int i = 0; i  0 && num[i] != num[i - 1])) {\n                int lo = i + 1, hi = num.length - 1, sum = 0 - num[i];\n                while (lo \n"},"leetcode/20190308 - LeetCode 18. 4Sum.html":{"url":"leetcode/20190308 - LeetCode 18. 4Sum.html","title":"LeetCode 18. 4Sum","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public List> fourSum(int[] num, int target) {\n        ArrayList> ans = new ArrayList<>();\n        if (num.length  target)\n                break; // first candidate too large, search finished\n            if (num[i] + num[num.length - 1] + num[num.length - 2] + num[num.length - 3]  0 && num[i] == num[i - 1])\n                continue; // prevents duplicate result in ans list\n                          // already sorted, only need to check the adjacent element\n\n            for (int j = i + 1; j  target)\n                    break; // second candidate too large\n                if (num[i] + num[j] + num[num.length - 1] + num[num.length - 2]  i + 1 && num[j] == num[j - 1])\n                    continue; // prevents duplicate results in ans list\n                int low = j + 1, high = num.length - 1;\n                while (low \n"},"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html":{"url":"leetcode/20190325 - LeetCode 19. Remove Nth Node From End of List.html","title":"LeetCode 19. Remove Nth Node From End of List","keywords":"","body":"LeetCode 19.\n\n链表定义\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\n解法1[Java]：\n核心思想\n遍历两次，第一次算出链表长度，第二次，定位到要删除的节点的前一个节点。\n算法\nclass Solution {\n    public ListNode removeNthFromEnd(ListNode head, int n) {\n        ListNode dummy = new ListNode(0);\n        dummy.next = head;\n        int length = 0;\n        ListNode first = head;\n        while (first != null) {\n            length++;\n            first = first.next;\n        }\n        length -= n;\n        first = dummy;\n        while (length > 0) {\n            length--;\n            first = first.next;\n        }\n        first.next = first.next.next;\n        return dummy.next;\n    }\n}\n\n解法2[Java]：双指针\n核心思想\n\n核心目的：我们要定位到要删除元素的前一个元素。\n\n当链表长度为 len 时，\n\n如果我们要删除倒数第1个节点，也就是要删除第len-0个节点，那么我们就要定位到第 len-1 个节点。\n如果我们要删除倒数第2个节点，也就是要删除第len-1个节点，那么我们就要定位到第 len-2 个节点。\n如果我们要删除倒数第n个节点，也就是要删除第 len-(n-1) 个节点，即第 len-n+1个节点。那么我们就要定位到第 len-n 个节点。\n\n1号指针指向头节点之前的辅助节点，相当于第0个节点。2号指针最初也指向“第0节点”，然后2号指针遍历n+1次，到达第n+1个节点。此时，两个指针之间的差距为 n+1，两个指针同时向右移动，当2号指针变为null的时候，相当于指向了第len+1个节点的时候，1号指针应该指向第 (len+1)-(n+1) 个节点，也就是第 len-n 个节点.\nclass Solution {\n    public ListNode removeNthFromEnd(ListNode head, int n) {\n        ListNode dummy = new ListNode(0);\n        dummy.next = head;\n        ListNode first = dummy;\n        ListNode second = dummy;\n        // Advances first pointer so that the gap between first and second is n nodes\n        // apart\n        for (int i = 1; i \n"},"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html":{"url":"leetcode/20190305 - LeetCode 26. Remove Duplicates form Sorted Array.html","title":"LeetCode 26. Remove Duplicates form Sorted Array","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public int removeDuplicates(int[] nums) {\n        if(nums.length == 0) return 0;\n\n        int head = 0;\n        int tail = 0;\n        for (;tail\n"},"leetcode/20190304 - LeetCode 27. Remove Element.html":{"url":"leetcode/20190304 - LeetCode 27. Remove Element.html","title":"LeetCode 27. Remove Element","keywords":"","body":"这道题可以和第283题 Remove Zeros 使用同样的思路解决。\n\n解答1[Java] ：\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i = 0;\n        for (int j = 0; j \n复杂度分析\n时间复杂度：O(n)O(n)O(n)\n空间复杂度：O(1)O(1)O(1)\n解答2[Java]：\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int head = 0;\n        int tail = nums.length;\n        while (head \n"},"leetcode/20190301 - LeetCode 43. Multiply Strings.html":{"url":"leetcode/20190301 - LeetCode 43. Multiply Strings.html","title":"LeetCode 43. Multiply Strings","keywords":"","body":"\n解答1[Java]:\nimport java.util.Scanner;\npublic class Main {\n    public String multiply(String num1, String num2) {\n        int n1 = num1.length(), n2 = num2.length();\n        int[] products = new int[n1 + n2];\n        for (int i = n1 - 1; i >= 0; i--) {\n            for (int j = n2 - 1; j >= 0; j--) {\n                int d1 = num1.charAt(i) - '0';\n                int d2 = num2.charAt(j) - '0';\n                products[i + j + 1] += d1 * d2;\n            }\n        }\n        int carry = 0;\n        for (int i = products.length - 1; i >= 0; i--) {\n            int tmp = (products[i] + carry) % 10;\n            carry = (products[i] + carry) / 10;\n            products[i] = tmp;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int num : products)\n            sb.append(num);\n        while (sb.length() != 0 && sb.charAt(0) == '0')\n            sb.deleteCharAt(0);\n        return sb.length() == 0 ? \"0\" : sb.toString();\n    }\n}\n\n这个算法基于一下规律：\n\n位数分别为 i 和 j 的两个数相乘，乘积的位数不超过 i+j 位。\n把结果看作一个大小为 i+j 的数组，那么第一个数的第 i 位和第二个数的第 j 位的乘积会影响结果的第 i+j 位和第 i+j+1 位。\n\n因此，把第一个数的第 i 位和第二个数的第 j 位的乘积先存到结果的 i+j+1 位，最后再统一计算进位。\n"},"leetcode/20190327 - LeetCode 48. Rotate Image.html":{"url":"leetcode/20190327 - LeetCode 48. Rotate Image.html","title":"LeetCode 48. Rotate Image","keywords":"","body":"旋转正方形矩阵。\n\n解答1[Java]：\n核心思想\n旋转的数字旋转之后，几个位置的数字之间是有规律的。\n代码\nclass Solution {\n    public void rotate(int[][] matrix) {\n        int r1 = 0;\n        int c1 = 0;\n        int r2 = matrix.length - 1;\n        int c2 = matrix[0].length - 1;\n        while (r1 \n"},"leetcode/20190310 - LeetCode 53. Maximum Subarray.html":{"url":"leetcode/20190310 - LeetCode 53. Maximum Subarray.html","title":"LeetCode 53. Maximum Subarray","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public int maxSubArray(int[] nums) {\n        if (nums.length  max ? dp[i] : max;\n        }\n        return max;\n    }\n}\n\n思路\n动态规划。\ndp[i] 中存储的是 i 之前的最大的子序列和。\n解答2[Java]：\nclass Solution {\n    public int maxSubArray(int[] nums) {\n        int maxSum = nums[0];\n        int curSum = 0;\n\n        for (int n : nums) {\n            curSum += n;\n            if (curSum > maxSum) {\n                maxSum = curSum;\n            }\n            if (curSum \n思路\n时间复杂度降到了 O(1)O(1)O(1)。\n一直加，用 curSum 表示截至目前的最大正子序和。\n"},"leetcode/20190327 - LeetCode 54. Spiral Matrix.html":{"url":"leetcode/20190327 - LeetCode 54. Spiral Matrix.html","title":"LeetCode 54. Spiral Matrix","keywords":"","body":"LeetCode 54. Spiral Matrix & 剑指Offer 29. 顺时针打印矩阵\n\n解答1[Java]：\n核心思想\n从外层向内层，一圈一圈地遍历。\n代码\nclass Solution {\n    public List spiralOrder(int[][] matrix) {\n        List ans = new ArrayList();\n        if (matrix.length == 0)\n            return ans;\n        int r1 = 0, r2 = matrix.length - 1;\n        int c1 = 0, c2 = matrix[0].length - 1;\n        while (r1  c1; c--) ans.add(matrix[r2][c]);\n                for (int r = r2; r > r1; r--) ans.add(matrix[r][c1]);\n            }\n            r1++;\n            c1++;\n            r2--;\n            c2--;\n        }\n        return ans;\n    }\n}\n\n解答2[Java]：\n核心思想\n这个才是真的全自动顺时针打印。设计了两个数组，一个 directionOfRow，一个directionOfColumn，这样，directionOfRow[i] 和 directionOfColumn[i] 这么一组数就表示下一步该怎么走，如果越界了，那么 ++i，相当于换成下一种走法。第一圈使用数组行数和列数来判定是否越界，第二圈就要靠 seen 数组来判断。\n代码\nimport java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List spiralOrder(int[][] matrix) {\n        List ans = new ArrayList();\n        if (matrix.length == 0) return ans;\n        int R = matrix.length, C = matrix[0].length;\n        boolean[][] seen = new boolean[R][C];\n        int[] directionOfRow = {0, 1, 0, -1};\n        int[] directionOfColumn = {1, 0, -1, 0};\n        int r = 0, c = 0, dierectionCount = 0;\n        for (int i = 0; i \n"},"leetcode/20190310 - LeetCode 70. Climbing Stairs.html":{"url":"leetcode/20190310 - LeetCode 70. Climbing Stairs.html","title":"LeetCode 70. Climbing Stairs","keywords":"","body":"\n解答1[Java]：\npublic class Solution {\n    public int climbStairs(int n) {\n        if (n == 1) {\n            return 1;\n        }\n        int[] dp = new int[n + 1];\n        dp[1] = 1;\n        dp[2] = 2;\n        for (int i = 3; i \n思路\n动态规划。\n解答2[Java]：\npublic class Solution {\n    public int climbStairs(int n) {\n        if (n == 1) {\n            return 1;\n        }\n        int first = 1;\n        int second = 2;\n        for (int i = 3; i \n思路\n斐波那契数。\n比上一个算法优化的地方在于空间复杂度由 O(n)O(n)O(n) 变为 O(1)O(1)O(1)。\n"},"leetcode/20190305 - LeetCode 75. Sort Colors.html":{"url":"leetcode/20190305 - LeetCode 75. Sort Colors.html","title":"LeetCode 75. Sort Colors","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public void sortColors(int[] nums) {\n        int zero = -1;\n        int two = nums.length;\n        int temp;\n\n        for (int i = 0; i \n三路快排的思路\n"},"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html":{"url":"leetcode/20190306 - LeetCode 76. Minimum Window Substring.html","title":"LeetCode 76. Minimum Window Substring","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public String minWindow(String s, String t) {\n        int[] map = new int[128];\n        for (char c : t.toCharArray()) map[c]++;\n        int counter = t.length(), left = 0, right = 0, head = 0, d = Integer.MAX_VALUE;\n        while (right  0) counter--;\n            while (counter == 0) {\n                if (right - left \n思路\n注意 if (map[s.charAt(right++)]-- > 0) 这句，不论 right 指向位置的字符是哪个，在判断之后都会被减去 1。因为在前边的语句中，已经预先把 t 中的字符在 map 中加 1 了，所以只有不在 t 中的字符才会被减成负数。\n同理，if (map[s.charAt(left++)]++ == 0) counter++; 如果判断为真，说明 left 指针指向的字符是 t 中的一个字符，且减去这个字符之后，这个字符的数量就不够了，因此需要把 counter 加1。如果 left 指向的不是 t 中的字符，那么这个字符在 map 中的值一定是负数，因为之前 right 遍历的时候被减过。\n假设 t=\"ABC\"，当 counter 为零的时候，map['A']、map['B'] 和 map['C'] 其中至少有两个的值是小于等于零的。可以小于零，但至少要等于零。不然 counter 是不会为零的。\n当 map['A'] 被减为零之后，如果再遇到字符 A，就不会再减 counter 了。因为 map['A'] 已经被减到零，说明前面已经匹配到的字符 A 的数量已经足够了。\n"},"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html":{"url":"leetcode/20190305 - LeetCode 80. Remove Duplicates from Sorted Array II.html","title":"LeetCode 80. Remove Duplicates from Sorted Array II","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public int removeDuplicates(int[] nums) {\n        int i = 0;\n        for (int n : nums)\n            if (i  nums[i - 2])\n                nums[i++] = n;\n        return i;\n    }\n}\n\n补充解答：修改版\nint removeDuplicates(vector& nums,int k) {\n    if(nums.size()\n这个解答，可以适用于保留最多不超过 K 个相同的元素。\n和第一种解法的思路相似，j-k 就是 lookback，向后看。第一种解法是 nums[i-2]，往后看两位。现在是往后看 k 位。\n"},"leetcode/20190327 - LeetCode 101. Symmetric Tree.html":{"url":"leetcode/20190327 - LeetCode 101. Symmetric Tree.html","title":"LeetCode 101. Symmetric Tree","keywords":"","body":"判断一个二叉树是否是镜像二叉树。\n\nLeetCode 101. Symmetric Tree\n解答1[Java]：\n核心思想\n使用递归的方式，首先，一次输入两个节点，然后对比两个节点的值，递归判断第一个节点的左子树节点和第二个节点的右子树节点是否相同，递归判断第一个节点的右子树节点和第二个节点的左子树节点是否相同。递归开始的时候，函数的两个实参都填 root 节点即可。\n代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        return isMirror(root, root);\n    }\n\n    public boolean isMirror(TreeNode t1, TreeNode t2) {\n        if (t1 == null && t2 == null)\n            return true;\n        if (t1 == null || t2 == null)\n            return false;\n        return (t1.val == t2.val) && isMirror(t1.right, t2.left) && isMirror(t1.left, t2.right);\n    }\n}\n\n复杂度分析\n时间复杂度\nO(n)O(n)O(n)\n空间复杂度\n最坏情况下，树退化成一个单链表，递归空间复杂度变成 O(n)O(n)O(n)。\n解答2[Java]：\n核心思想\n使用队列作为辅助。每次都从队列中弹出来两个对象，比较他们的值，如果相同，把他们的子节点按照以下顺序存入队列中：①第一个节点的左节点②第二个节点的右节点③第一个节点的右节点④第二个节点的左节点。\n队列的前两个元素都存成根节点。\n代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        Queue q = new LinkedList<>();\n        q.add(root);\n        q.add(root);\n        while (!q.isEmpty()) {\n            TreeNode t1 = q.poll();\n            TreeNode t2 = q.poll();\n            if (t1 == null && t2 == null)\n                continue;\n            if (t1 == null || t2 == null)\n                return false;\n            if (t1.val != t2.val)\n                return false;\n            q.add(t1.left);\n            q.add(t2.right);\n            q.add(t1.right);\n            q.add(t2.left);\n        }\n        return true;\n    }\n}\n\n参考\n\n剑指Offer 27. 镜像二叉树和这道题很像。\n\n"},"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html":{"url":"leetcode/20190113 - LeetCode 104. Maximum Depth of Binary Tree.html","title":"LeetCode 104. Maximum Depth of Binary Tree","keywords":"","body":"题目来源：https://leetcode.com/problems/maximum-depth-of-binary-tree/\nLeetCode官方题解及解析：104. Maximum Depth of Binary Tree\n题目\nGiven a binary tree, find its maximum depth.\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\nNote: A leaf is a node with no children.\nExample:\nGiven binary tree [3,9,20,null,null,15,7],\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\nreturn its depth = 3.\n\n解答1[Java]：递归算法\n/**\n * Definition for binary tree\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nimport java.lang.Math;\nclass Solution {\n  public int maxDepth(TreeNode root) {\n    if (root == null) {\n      return 0;\n    } else {\n      int left_height = maxDepth(root.left);\n      int right_height = maxDepth(root.right);\n      return Math.max(left_height, right_height) + 1;\n    }\n  }\n}\n\n复杂度分析\n\nTime complexity : we visit each node exactly once, thus the time complexity is O(N)O(N)O(N), where NNN is the number of nodes.\n\nSpace complexity : in the worst case, the tree is completely unbalanced, e.g. each node has only left child node, the recursion call would occur NNN times (the height of the tree), therefore the storage to keep the call stack would be O(N)O(N)O(N). But in the best case (the tree is completely balanced), the height of the tree would be log(N)log(N)log(N). Therefore, the space complexity in this case would be O(log(N))O(log(N))O(log(N))\ncompletely unbalanced would looks like this\n    3\n     \\\n     20\n       \\\n        7\n         \\\n          9\n           \\\n            15\ncompletely balanced would looks like this:\n        3\n     /     \\\n    9       20\n   / \\     /  \\\n  8   4   15   7\n\n\n解答2[Java]：非递归，深度优先遍历\n使用 Stack 数据结构进行深度优先遍历。\n/**\n * Definition for binary tree\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nimport javafx.util.Pair;\nimport java.lang.Math;\nclass Solution {\n  public int maxDepth(TreeNode root) {\n    LinkedList> stack = new LinkedList<>();\n    if (root != null) {\n      stack.add(new Pair(root, 1));\n    }\n\n    int depth = 0;\n    while (!stack.isEmpty()) {\n      Pair current = stack.pollLast();\n      root = current.getKey();\n      int current_depth = current.getValue();\n      if (root != null) {\n        depth = Math.max(depth, current_depth);\n        stack.add(new Pair(root.left, current_depth + 1));\n        stack.add(new Pair(root.right, current_depth + 1));\n      }\n    }\n    return depth;\n  }\n};\n\n复杂度分析\n\nTime complexity : O(N)O(N)O(N).\nSpace complexity : O(N)O(N)O(N).\n\n解答3[Java]：非递归，广度优先遍历\n使用 Queue 数据结构进行深度优先遍历。\n/**\n * Definition for binary tree\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nimport java.util.LinkedList;\nimport java.util.Queue;\npublic class Solution {\n    public int maxDepth(TreeNode root) {\n        if (root == null) return 0;\n        Queue queue = new LinkedList();\n        int depth = 0;\n        queue.add(root);\n        while (!queue.isEmpty()) {\n            int size = queue.size();\n            for (int i = 0; i \n复杂度分析\n\nTime complexity : O(N)O(N)O(N).\nSpace complexity : O(N)O(N)O(N).\n\nLinkedList 类的相关方法\n简单介绍本题中用到的 LinkedList 类的几个方法。\nadd(E e)\nAppends the specified element to the end of this list.\npoll()\nRetrieves and removes the head (first element) of this list.\npollLast()\nRetrieves and removes the last element of this list, or returns null if this list is empty.\n参考文献\nLinkedList (Java Platform SE 8 )\n"},"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html":{"url":"leetcode/20190310 - LeetCode 121. Best Time to Buy and Sell Stock.html","title":"LeetCode 121. Best Time to Buy and Sell Stock","keywords":"","body":"\n解答1[Java]：\npublic class Solution {\n    public int maxProfit(int prices[]) {\n        int minprice = Integer.MAX_VALUE;\n        int maxprofit = 0;\n        for (int i = 0; i  maxprofit)\n                maxprofit = prices[i] - minprice;\n        }\n        return maxprofit;\n    }\n}\n\n思路\n涉及两个变量，一个存储截至目前最小的值，一个存储截至目前最大的利润。\n"},"leetcode/20190305 - LeetCode 125. Valid Palindrome.html":{"url":"leetcode/20190305 - LeetCode 125. Valid Palindrome.html","title":"LeetCode 125. Valid Palindrome","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    private static final char[] charMap = new char[256];\n    static {\n        for (int i = 0; i \n思路\n先打一个表。注意通过 charMap['A'] 这种方式访问数组的时候，会自动把字符转换为 int 型。\n解答2[Java]：\npublic class Solution {\n    public boolean isPalindrome(String s) {\n        String actual = s.replaceAll(\"[^A-Za-z0-9]\", \"\").toLowerCase();\n        String rev = new StringBuffer(actual).reverse().toString();\n        return actual.equals(rev);\n    }\n}\n\n使用正则表达式和 Java 的类库。\n"},"leetcode/20190308 - LeetCode 136. Single Number.html":{"url":"leetcode/20190308 - LeetCode 136. Single Number.html","title":"LeetCode 136. Single Number","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public int singleNumber(int[] nums) {\n\n    }\n}\n\n思路\n\nIf we take XOR of zero and some bit, it will return that bit\na⊕0=aa \\oplus 0 = aa⊕0=a\n\n\nIf we take XOR of two same bits, it will return 0\na⊕a=0a \\oplus a = 0a⊕a=0\n\n\na⊕b⊕a=(a⊕a)⊕b=0⊕b=ba \\oplus b \\oplus a = (a \\oplus a) \\oplus b = 0 \\oplus b = ba⊕b⊕a=(a⊕a)⊕b=0⊕b=b\n\nSo we can XOR all bits together to find the unique number.\n本题拓展\n\n有一个 n 个元素的数组，除了两个数只出现一次外，其余元素都出现两次，让你找出这两个只出现一次的数分别是几，要求时间复杂度为 O(n) 且再开辟的内存空间固定(与 n 无关)。\n示例 :\n输入: [1,2,2,1,3,4]输出: [3,4]\n题目再解析\n根据前面找一个不同数的思路算法，在这里把所有元素都异或，那么得到的结果就是那两个只出现一次的元素异或的结果。\n然后，因为这两个只出现一次的元素一定是不相同的，所以这两个元素的二进制形式肯定至少有某一位是不同的，即一个为 0 ，另一个为 1 ，现在需要找到这一位。\n根据异或的性质 任何一个数字异或它自己都等于 0，得到这个数字二进制形式中任意一个为 1 的位都是我们要找的那一位。\n再然后，以这一位是 1 还是 0 为标准，将数组的 n 个元素分成两部分。\n\n将这一位为 0 的所有元素做异或，得出的数就是只出现一次的数中的一个\n将这一位为 1 的所有元素做异或，得出的数就是只出现一次的数中的另一个。\n\n这样就解出题目。忽略寻找不同位的过程，总共遍历数组两次，时间复杂度为O(n)。\n来源：有哪些解决完之后让你拍案叫绝的算法问题？\n\n核心思想\n两个数不一样，肯定至少有一个二进制位是不一样的。我们就从不一样的二进制位中选择一个。设这两个数为A 和 B。\n现在假设我们已经选择了某一个二进制位，假设我们选择的是从右向左数第2位，简称第2位。\n因为除了这两个数之外其他的数都是成对出现的，所以其他的数中，第2位是0的数是成对出现的，第2位是1的数也是成对出现的。\n而A和B的第2位，只有两种可能：\n（1）A的第2位是1，B的第2位是0；\n（2）A的第2位是0，B的第2位是1。\n所以，如果我们把第2位为0的所有数都相互之间做异或运算，必然能够找出A和B中的一个数字，因为其他的数都是成对出现的，异或之后所有位都0了。\n再把第2位为1的所有数都相互之间做异或运算，必然能够找出A和B中的另外一个数字。\n"},"leetcode/20190324 - LeetCode 137. Single Number II.html":{"url":"leetcode/20190324 - LeetCode 137. Single Number II.html","title":"LeetCode 137. Single Number II","keywords":"","body":"LeetCode 137. Single Number II\n\n核心思想\n一个 int 型整数有32个二进制位。\n\n对于每个二进制位，统计这一位上1的个数，然后对3取余，如果余数不为0，说明不重复的那个数的这个二进制位为1。\n统计每一位上1的个数，通过和二进制1进行位与操作。\n如果某个二进制位是1，通过和结果进行 或 操作，把这个1添加到结果中对应的二进制位上。\n\n解答1[Java]：\nclass Solution {\n    public int singleNumber(int[] nums) {\n        int result = 0;\n        for (int i = 0; i > i) & 1;\n            }\n\n            result |= (sum_of_j_digit % 3) \n解答2[Java]：有限状态机\nclass Solution {\n    public int singleNumber(int[] nums) {\n        int a = 0, b = 0;\n\n        for (int num : nums) {\n            b = b ^ num & ~a;\n            a = a ^ num & ~b;\n        }\n\n        return a|b;\n    }\n}\n\n最后一句 return 语句如果改为 return b; 也可以得到正确结果。\n不过这个算法，同样是有限状态机，其实有好几个写法，不过核心应该都是做一个三进制的计数器。我觉得对我而言是真的很难理解，现在也没有完完全全理解。这里先把几个解释的帖子记下来，等到有时间再来攻克。\nAn General Way to Handle All this sort of questions.\nDetailed explanation and generalization of the bitwise operation method for single numbers\nLeetcode 136, 137, 260 \"Single Number\"-s - unnamed42's blog\nLeetCode-137：Single Number II (只出现一次的数字)\n"},"leetcode/20190325 - LeetCode 141. Linked List Cycle.html":{"url":"leetcode/20190325 - LeetCode 141. Linked List Cycle.html","title":"LeetCode 141. Linked List Cycle","keywords":"","body":" LeetCode 141.\n\n// 链表的结构\n\n/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\n解法1[Java]：快慢指针\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        if (head == null || head.next == null) {\n            return false;\n        }\n        ListNode slow = head;\n        ListNode fast = head.next;\n        while (slow != fast) {\n            if (fast == null || fast.next == null) {\n                return false;\n            }\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        return true;\n    }\n}\n\n解法2[Java]：Hash表\npublic boolean hasCycle(ListNode head) {\n    Set nodesSeen = new HashSet<>();\n    while (head != null) {\n        if (nodesSeen.contains(head)) {\n            return true;\n        } else {\n            nodesSeen.add(head);\n        }\n        head = head.next;\n    }\n    return false;\n}\n\n"},"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html":{"url":"leetcode/20190408 - LeetCode 153. Find Minimum in Rotated Sorted Array.html","title":"LeetCode 153. Find Minimum in Rotated Sorted Array","keywords":"","body":"LeetCode 153. Find Minimum in Rotated Sorted Array。\n\n解答1[Java]：\nclass Solution {\n  public int findMin(int[] nums) {\n        if (nums.length == 0) {\n            return 0;\n        }\n\n        int min = nums[0];\n\n        for (int i = 1; i \n"},"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html":{"url":"leetcode/20190408 - LeetCode 154. Find Minimum in Rotated Sorted Array II.html","title":"LeetCode 154. Find Minimum in Rotated Sorted Array II","keywords":"","body":"LeetCode 154. Find Minimum in Rotated Sorted Array II。\n\n本题和第 153 题可以使用同样的方法解决。\n解答\nclass Solution {\n  public int findMin(int[] nums) {\n        if (nums.length == 0) {\n            return 0;\n        }\n\n        int min = nums[0];\n\n        for (int i = 1; i \n"},"leetcode/20190326 - LeetCode 155. Min Stack.html":{"url":"leetcode/20190326 - LeetCode 155. Min Stack.html","title":"LeetCode 155. Min Stack","keywords":"","body":"带取最小值功能的栈。\n\n解答1：\n核心思想\n使用两个栈，一个数据栈，一个最小值栈。push 的时候，如果小于等于当前最小值，同时压入两个栈，然后每次弹出的时候，数据栈弹出的数和最小值栈的栈顶作比较，如果相同，那么把最小值也弹出。\n代码\nimport java.util.ArrayDeque;\nimport java.util.Deque;\n\npublic class MinStack {\n    private Deque stackData;\n    private Deque stackMin;\n\n    /** initialize your data structure here. */\n    public MinStack() {\n        this.stackData = new ArrayDeque<>();\n        this.stackMin = new ArrayDeque<>();\n    }\n\n    public void push(int newNum) {\n        if (this.stackMin.isEmpty()) {\n            this.stackMin.push(newNum);\n        } else if (newNum \n解答2[Java]：\n核心思路\n同样使用两个栈，不过压入逻辑相比解答1修改了一下。当要入栈的数字小于当前最小值的时候，把入栈的数字同时压入数据栈和最小值栈。当要入栈的数字大于等于当前最小值的时候，把当前最小值取出来再压入最小值栈一次，相当于当前的最小值是冗余的，但是冗余自有冗余的用处。\n弹出元素的时候，不需要再进行检查，弹出元素的同时，也把最小值栈的元素弹出，因为最小值栈的元素是冗余的，就是为了一一对应，不用再检查。\n代码\nimport java.util.ArrayDeque;\nimport java.util.Deque;\n\npublic class MinStack {\n    private Deque stackData;\n    private Deque stackMin;\n\n    /** initialize your data structure here. */\n    public MinStack() {\n        this.stackData = new ArrayDeque<>();\n        this.stackMin = new ArrayDeque<>();\n    }\n\n    public void push(int newNum) {\n        if (this.stackMin.isEmpty()) {\n            this.stackMin.push(newNum);\n        } else if (newNum \n"},"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html":{"url":"leetcode/20190305 - LeetCode 167. Two Sum II - Input array is sorted.html","title":"LeetCode 167. Two Sum II - Input array is sorted","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public int[] twoSum(int[] numbers, int target) {\n        int i = 0;\n        int j = numbers.length - 1;\n        int[] result = new int[2];\n        for (; i \n思路\n一头一尾两个指针不断向中间靠拢。\n解答2\n思路\n利用传入的数组已经有序的特点。\n从头开始选一个值 i，然后在剩下的长度中进行二分搜索 target-i 这个值。\n"},"leetcode/20190309 - LeetCode 169. Majority Element.html":{"url":"leetcode/20190309 - LeetCode 169. Majority Element.html","title":"LeetCode 169. Majority Element","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public int majorityElement(int[] nums) {\n        int count = 0;\n        Integer candidate = null;\n\n        for (int num : nums) {\n            if (count == 0) {\n                candidate = num;\n            }\n            count += (num == candidate) ? 1 : -1;\n        }\n\n        return candidate;\n    }\n}\n\n思路\n这个算法叫做摩尔计数法（Boyer-Moore Voting Algorithm）。\n选定一个数，遇到相同的就加1，不同就减1，count 变成 0 就换下一个数，因为众数占总体的一半以上，所以众数总能脱颖而出。\n解答2[Java]：\nclass Solution {\n    public int majorityElement(int[] nums) {\n        Arrays.sort(nums);\n        return nums[nums.length / 2];\n    }\n}\n\n思路\n这个算法的原理是，数组排序之后，众数一定位于 n/2 左右。\n"},"leetcode/20190308 - LeetCode 202. Happy Number.html":{"url":"leetcode/20190308 - LeetCode 202. Happy Number.html","title":"LeetCode 202. Happy Number","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public boolean isHappy(int n) {\n        Set exist = new HashSet<>();\n        while (n > 1) {\n            if (exist.contains(n)) {\n                return false;\n            }\n            exist.add(n);\n            n = Square(n);\n        }\n        return n == 1;\n    }\n\n    private int Square(int n) {\n        int res = 0;\n        while (n > 0) {\n            res += (n % 10) * (n % 10);\n            n /= 10;\n        }\n        return res;\n    }\n}\n\n思路\n使用一个 Set，如果 Set 已经包含了当前元素，说明发生循环了。就返回 false。\n解答2[Java]：神奇的解法\nclass Solution {\n    public boolean isHappy(int n) {\n        int d;\n        while (n > 9) {\n            d = n;\n            n = 0;\n            while (d > 0) {\n                n += Math.pow(d % 10, 2);\n                d = d / 10;\n            }\n        }\n        return n == 1 || n == 7;\n    }\n}\n\n思路\n这个是 1ms 的 sample submission。\n最后使用了一个 1 和 7 来进行判断是因为如果是 Happy Number 就一定会经过 7 吗？不知道这背后的数学规律。\n"},"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html":{"url":"leetcode/20190308 - LeetCode 205. Isomorphic Strings.html","title":"LeetCode 205. Isomorphic Strings","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public boolean isIsomorphic(String s, String t) {\n        int[] m1 = new int[256]; \n        int[] m2 = new int[256];\n        int n = s.length();\n        for (int i = 0; i \n思路\n不直接建立字母之间的映射关系，而是把要建立映射关系的字母同时映射到另外一个数字。相当于建立了一个间接映射关系。\n解答1小优化\nclass Solution {\n    public boolean isIsomorphic(String s, String t) {\n        int[] m1 = new int[256];\n        int[] m2 = new int[256];\n        char[] sCharArray = s.toCharArray();\n        char[] tCharArray = t.toCharArray();\n\n        int n = s.length();\n        for (int i = 0; i \n反复调用 String 类的 charAt() 方法是比较慢的，优化之后运行总时间由 4ms 减为2ms。可能是函数调用也要占用一部分空间。而直接使用数组，除了数组的空间不需要额外的空间。\n空间占用，两次调用，数值差距很大，不知道为什么。\n解答2[Java]：\nclass Solution {\n    public boolean isIsomorphic(String s, String t) {\n        char[] sString = s.toCharArray();\n        char[] tString = t.toCharArray();\n\n        int length = s.length();\n        if (length != t.length())\n            return false;\n\n        char[] sMap = new char[256];\n        char[] tMap = new char[256];\n\n        for (int i = 0; i \n思路\n这个算法是通过两个数组，两个数组对应两种映射关系。但是都是字符映射到字符的。\n这个算法比上边使用 int 数组的算法要快。上边的算法优化之后是 2ms，但是这个算法是 1ms。\n难道是因为使用 char 数组比使用 int 数组效率更高？\n"},"leetcode/20190328 - LeetCode 206. Reverse Linked List.html":{"url":"leetcode/20190328 - LeetCode 206. Reverse Linked List.html","title":"LeetCode 206. Reverse Linked List","keywords":"","body":"反转单链表和双链表。\n\n解答1[Java]：\n核心思想\n设计两个指针，一个 prev指向前一个节点 ，一个cur 指向当前节点。最初的时候，prev指向null，cur指向第一个节点。最后 cur 指向 null 的时候，prev 刚好指向最后一个节点。\n代码\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode prev = null;\n        ListNode curr = head;\n        while (curr != null) {\n            ListNode nextTemp = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr = nextTemp;\n        }\n        return prev;\n    }\n\n}\n\n解答2[Java]：\n核心思想\n主要是利用 head.next.next = head; 相当于把当前节点的下一个节点指向了当前节点。递归调用到最后，p 一直是指向最后一个节点，并且不断被返回到上一层调用的。\n代码\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n * int val;\n * ListNode next;\n * ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        if (head == null || head.next == null) return head;\n        ListNode p = reverseList(head.next);\n        head.next.next = head;\n        head.next = null;\n        return p;\n    }\n}\n\n拓展：反转双向链表\n核心思路\n代码\n双向链表节点定义\npublic class DoubleNode {\n    public int value;\n    public DoubleNode last;\n    public DoubleNode next;\n\n    public DoubleNode(int data) {\n        this.value = data;\n    }\n}\n\n算法\nclass Solution {\n    public static DoubleNode reverseList(DoubleNode head) {\n        DoubleNode pre = null;\n        DoubleNode post = null;\n        while (head != null) {\n            post = head.next;\n            head.next = pre;\n            head.last = post;\n            pre = head;\n            head = post;\n        }\n        return pre;\n    }\n}\n\n完整测试代码\npublic class Code_07_ReverseList {\n    public static class Node {\n        public int value;\n        public Node next;\n\n        public Node(int data) {\n            this.value = data;\n        }\n    }\n\n    public static Node reverseList(Node head) {\n        Node pre = null;\n        Node post = null;\n        while (head != null) {\n            post = head.next;\n            head.next = pre;\n            pre = head;\n            head = post;\n        }\n        return pre;\n    }\n\n    public static class DoubleNode {\n        public int value;\n        public DoubleNode last;\n        public DoubleNode next;\n\n        public DoubleNode(int data) {\n            this.value = data;\n        }\n    }\n\n    public static DoubleNode reverseList(DoubleNode head) {\n        DoubleNode pre = null;\n        DoubleNode post = null;\n        while (head != null) {\n            post = head.next;\n            head.next = pre;\n            head.last = post;\n            pre = head;\n            head = post;\n        }\n        return pre;\n    }\n\n    public static void printLinkedList(Node head) {\n        System.out.print(\"Linked List: \");\n        while (head != null) {\n            System.out.print(head.value + \" \");\n            head = head.next;\n        }\n        System.out.println();\n    }\n\n    public static void printDoubleLinkedList(DoubleNode head) {\n        System.out.print(\"Double Linked List: \");\n        DoubleNode end = null;\n        while (head != null) {\n            System.out.print(head.value + \" \");\n            end = head;\n            head = head.next;\n        }\n        System.out.print(\"| \");\n        while (end != null) {\n            System.out.print(end.value + \" \");\n            end = end.last;\n        }\n        System.out.println();\n    }\n\n    public static void main(String[] args) {\n        Node head1 = new Node(1);\n        head1.next = new Node(2);\n        head1.next.next = new Node(3);\n        printLinkedList(head1);\n        head1 = reverseList(head1);\n        printLinkedList(head1);\n\n        DoubleNode head2 = new DoubleNode(1);\n        head2.next = new DoubleNode(2);\n        head2.next.last = head2;\n        head2.next.next = new DoubleNode(3);\n        head2.next.next.last = head2.next;\n        head2.next.next.next = new DoubleNode(4);\n        head2.next.next.next.last = head2.next.next;\n        printDoubleLinkedList(head2);\n        printDoubleLinkedList(reverseList(head2));\n\n    }\n\n}\n\n"},"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html":{"url":"leetcode/20190305 - LeetCode 209. Minimum Size Subarray Sum.html","title":"LeetCode 209. Minimum Size Subarray Sum","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public int minSubArrayLen(int s, int[] nums) {\n        int left = 0;\n        int right = -1;\n        int sum = 0;\n        int result = nums.length + 1;\n\n        while (left = s) {\n                result = min(result, right - left + 1);\n            }\n        }\n\n        if (result == nums.length + 1) {\n            result = 0;\n        }\n\n        return result;\n    }\n\n    private int min(int a, int b) {\n        return a \n思路\nleft 和 right 之间形成一个动态窗口，每次根据窗口内的元素的和与给定的数字作比较，确定是收缩窗口还是向右扩大窗口。\n"},"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html":{"url":"leetcode/20190305 - LeetCode 215. Kth Largest Element in an Array.html","title":"LeetCode 215. Kth Largest Element in an Array","keywords":"","body":"\n解答1[Java]：\nimport java.util.Arrays;\nclass Solution {\n    public int findKthLargest(int[] nums, int k) {\n        int len = nums.length;\n        Arrays.sort(nums);\n        return nums[len-k];\n    }\n}\n\n但是这个实现依赖了 Java 的库，并不是一个通用的解法。\n解答2\n//move the k largest elements to the left part of array\npublic class Solution {\n    public int findKthLargest(int[] nums, int k) {\n        if (nums.length == 1)\n            return nums[0];\n\n        int left = 0;\n        int right = nums.length - 1;\n\n        while (left  k) {\n                right = pivotPos - 1;// shrink right by 1 at least\n            } else {\n                return nums[pivotPos];\n            }\n        }\n        return 0;\n    }\n\n    // make elements value between [0, leftBound] are all >= pivot\n    private int partition(int[] array, int left, int right) {\n        int pivotIndex = left + (right - left) / 2;\n        int pivot = array[pivotIndex];\n        swap(array, pivotIndex, right);\n\n        int leftBound = left;\n        int rightBound = right - 1;\n        while (leftBound = pivot) {\n                leftBound++;\n            } else if (array[rightBound] \n要理解这个算法需要对快速排序算法有所了解。\n每次 partition 之后，pivotPos 左边的元素都是大于 pivotPos的，右边的都是小于 PivotPos的，根据 pivotPos的index 和 k 的关系就能确定如果要继续寻找是在 pivotPos 左边寻找还是右边寻找。\n参考资料\n\n深入理解Java PriorityQueue\n\n"},"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html":{"url":"leetcode/20190326 - LeetCode 225. Implement Stack using Queues.html","title":"LeetCode 225. Implement Stack using Queues","keywords":"","body":"使用队列实现栈。\n\n解答1[Java]：使用两个队列\n核心思想\n使用两个队列 q1 和 q2，push 的时候 push 到 q1 中，pop的时候，先把 q1 的 n-1 个元素 push 到 q2 中，剩下最后一个元素，然后弹出这个元素并返回。然后交换 q1 和 q2 的引用。\n代码\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass MyStack {\n    Queue queue1;\n    Queue queue2;\n\n    /** Initialize your data structure here. */\n    public MyStack() {\n        queue1 = new LinkedList<>();\n        queue2 = new LinkedList<>();\n    }\n\n    /** Push element x onto stack. */\n    public void push(int x) {\n        queue1.add(x);\n    }\n\n    /** Removes the element on top of the stack and returns that element. */\n    public int pop() {\n        while (queue1.size() > 1) {\n            queue2.add(queue1.remove());\n        }\n        Queue temp = queue1;\n        queue1 = queue2;\n        queue2 = temp;\n        return queue2.remove();\n    }\n\n    /** Get the top element. */\n    public int top() {\n        while (queue1.size() > 1) {\n            queue2.add(queue1.remove());\n        }\n        int topElement = queue1.peek();\n        queue2.add(queue1.remove());\n        Queue temp = queue1;\n        queue1 = queue2;\n        queue2 = temp;\n        return topElement;\n    }\n\n    /** Returns whether the stack is empty. */\n    public boolean empty() {\n        if (queue1.isEmpty() && queue2.isEmpty()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * boolean param_4 = obj.empty();\n */\n\n解答2[Java]：使用一个队列\n核心思想\npush 的时候，先把元素加到最后，然后自己弹出元素的同时让元素进入队列，循环n-1次，这样刚刚push进来的元素就变到了第一个。\n代码\npublic class MyStack {\n    Queue queue;\n\n    /** Initialize your data structure here. */\n    public MyStack() {\n        queue = new LinkedList();\n    }\n\n    /** Push element x onto stack. */\n    public void push(int x) {\n        queue.add(x);\n        for (int i = 0; i \n参考资料\nJava队列Queue接口详解\n"},"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html":{"url":"leetcode/20190326 - LeetCode 232. Implement Queue using Stacks.html","title":"LeetCode 232. Implement Queue using Stacks","keywords":"","body":"使用栈实现队列。\n\n解答[Java]\nimport java.util.ArrayDeque;\nimport java.util.Deque;\n\nclass MyQueue {\n    Deque stack1;\n    Deque stack2;\n\n    /** Initialize your data structure here. */\n    public MyQueue() {\n        stack1 = new ArrayDeque<>();\n        stack2 = new ArrayDeque<>();\n    }\n\n    /** Push element x to the back of queue. */\n    public void push(int x) {\n        stack1.push(x);\n    }\n\n    /** Removes the element from in front of queue and returns that element. */\n    public int pop() {\n        if (!stack2.isEmpty()) {\n            return stack2.pop();\n        } else {\n            while (!stack1.isEmpty()) {\n                stack2.push(stack1.pop());\n            }\n            return stack2.pop();\n        }\n    }\n\n    /** Get the front element. */\n    public int peek() {\n        if (!stack2.isEmpty()) {\n            return stack2.peek();\n        } else {\n            while (!stack1.isEmpty()) {\n                stack2.push(stack1.pop());\n            }\n            return stack2.peek();\n        }\n    }\n\n    /** Returns whether the queue is empty. */\n    public boolean empty() {\n        if (stack1.isEmpty() && stack2.isEmpty()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.isEmpty();\n */\n\n"},"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html":{"url":"leetcode/20190328 - LeetCode 234. Palindrome Linked List.html","title":"LeetCode 234. Palindrome Linked List","keywords":"","body":"判断链表是否为回文链表。\n\n解答1[Java]：\n核心思路\n把所有元素放到栈中，然后从头开始遍历，和栈中弹出来的元素进行比较。\n代码\n// need n extra space\npublic boolean isPalindrome1(Node head) {\n    Stack stack = new Stack();\n    Node cur = head;\n    while (cur != null) {\n        stack.push(cur);\n        cur = cur.next;\n    }\n    while (head != null) {\n        if (head.value != stack.pop().value) {\n            return false;\n        }\n        head = head.next;\n    }\n    return true;\n}\n\n解答2[Java]：\n核心思路\n快慢指针，不过不是两个指针都从头开始，而是快指针从第一个节点开始，慢指针从第二个节点开始，这样，快指针一次走两步，慢指针一次走一步。当链表长度为奇数的时候，快指针可以走到最后一个，此时，慢指针走向链表右半部分的第一个节点。当链表长度为偶数的时候，快指针可以走到倒数第二个节点，此时慢指针同样走到链表右半部分的第一个节点。此时把链表的右半部分压栈，然后找一个指针指向开头，一个一个比较。\n代码\n// need n/2 extra space\npublic boolean isPalindrome2(Node head) {\n    if (head == null || head.next == null) {\n        return true;\n    }\n    Node right = head.next;\n    Node cur = head;\n    while (cur.next != null && cur.next.next != null) {\n        right = right.next;\n        cur = cur.next.next;\n    }\n    Stack stack = new Stack();\n    while (right != null) {\n        stack.push(right);\n        right = right.next;\n    }\n    while (!stack.isEmpty()) {\n        if (head.value != stack.pop().value) {\n            return false;\n        }\n        head = head.next;\n    }\n    return true;\n}\n\n解答3[Java]：\n核心思路\n使用快慢指针法，等到慢指针走到链表的一半时，把链表的右半部分翻转，翻转之后，两个指针，一个从头，一个从尾，同时向中间遍历，相互对比。判断之后先把结果存起来，然后把链表结构恢复，返回结果。\n代码\n// need O(1) extra space\npublic static boolean isPalindrome3(Node head) {\n    if (head == null || head.next == null) {\n        return true;\n    }\n    Node n1 = head;\n    Node n2 = head;\n    while (n2.next != null && n2.next.next != null) { // find mid node\n        n1 = n1.next; // n1 -> mid\n        n2 = n2.next.next; // n2 -> end\n    }\n    n2 = n1.next; // n2 -> right part first node\n    n1.next = null; // mid.next -> null\n    Node n3 = null;\n    while (n2 != null) { // right part convert\n        n3 = n2.next; // n3 -> save next node\n        n2.next = n1; // next of right node convert\n        n1 = n2; // n1 move\n        n2 = n3; // n2 move\n    }\n    n3 = n1; // n3 -> save last node\n    n2 = head;// n2 -> left first node\n    boolean res = true;\n    while (n1 != null && n2 != null) { // check palindrome\n        if (n1.value != n2.value) {\n            res = false;\n            break;\n        }\n        n1 = n1.next; // left to mid\n        n2 = n2.next; // right to mid\n    }\n    n1 = n3.next;\n    n3.next = null;\n    while (n1 != null) { // recover list\n        n2 = n1.next;\n        n1.next = n3;\n        n3 = n1;\n        n1 = n2;\n    }\n    return res;\n}\n\n完整测试代码\nimport java.util.Stack;\n\npublic class Code_11_IsPalindromeList {\n\n    public static class Node {\n        public int value;\n        public Node next;\n\n        public Node(int data) {\n            this.value = data;\n        }\n    }\n\n    // need n extra space\n    public static boolean isPalindrome1(Node head) {\n        Stack stack = new Stack();\n        Node cur = head;\n        while (cur != null) {\n            stack.push(cur);\n            cur = cur.next;\n        }\n        while (head != null) {\n            if (head.value != stack.pop().value) {\n                return false;\n            }\n            head = head.next;\n        }\n        return true;\n    }\n\n    // need n/2 extra space\n    public static boolean isPalindrome2(Node head) {\n        if (head == null || head.next == null) {\n            return true;\n        }\n        Node right = head.next;\n        Node cur = head;\n        while (cur.next != null && cur.next.next != null) {\n            right = right.next;\n            cur = cur.next.next;\n        }\n        Stack stack = new Stack();\n        while (right != null) {\n            stack.push(right);\n            right = right.next;\n        }\n        while (!stack.isEmpty()) {\n            if (head.value != stack.pop().value) {\n                return false;\n            }\n            head = head.next;\n        }\n        return true;\n    }\n\n    // need O(1) extra space\n    public static boolean isPalindrome3(Node head) {\n        if (head == null || head.next == null) {\n            return true;\n        }\n        Node n1 = head;\n        Node n2 = head;\n        while (n2.next != null && n2.next.next != null) { // find mid node\n            n1 = n1.next; // n1 -> mid\n            n2 = n2.next.next; // n2 -> end\n        }\n        n2 = n1.next; // n2 -> right part first node\n        n1.next = null; // mid.next -> null\n        Node n3 = null;\n        while (n2 != null) { // right part convert\n            n3 = n2.next; // n3 -> save next node\n            n2.next = n1; // next of right node convert\n            n1 = n2; // n1 move\n            n2 = n3; // n2 move\n        }\n        n3 = n1; // n3 -> save last node\n        n2 = head;// n2 -> left first node\n        boolean res = true;\n        while (n1 != null && n2 != null) { // check palindrome\n            if (n1.value != n2.value) {\n                res = false;\n                break;\n            }\n            n1 = n1.next; // left to mid\n            n2 = n2.next; // right to mid\n        }\n        n1 = n3.next;\n        n3.next = null;\n        while (n1 != null) { // recover list\n            n2 = n1.next;\n            n1.next = n3;\n            n3 = n1;\n            n1 = n2;\n        }\n        return res;\n    }\n\n    public static void printLinkedList(Node node) {\n        System.out.print(\"Linked List: \");\n        while (node != null) {\n            System.out.print(node.value + \" \");\n            node = node.next;\n        }\n        System.out.println();\n    }\n\n    public static void main(String[] args) {\n\n        Node head = null;\n        printLinkedList(head);\n        System.out.print(isPalindrome1(head) + \" | \");\n        System.out.print(isPalindrome2(head) + \" | \");\n        System.out.println(isPalindrome3(head) + \" | \");\n        printLinkedList(head);\n        System.out.println(\"=========================\");\n\n        head = new Node(1);\n        printLinkedList(head);\n        System.out.print(isPalindrome1(head) + \" | \");\n        System.out.print(isPalindrome2(head) + \" | \");\n        System.out.println(isPalindrome3(head) + \" | \");\n        printLinkedList(head);\n        System.out.println(\"=========================\");\n\n        head = new Node(1);\n        head.next = new Node(2);\n        printLinkedList(head);\n        System.out.print(isPalindrome1(head) + \" | \");\n        System.out.print(isPalindrome2(head) + \" | \");\n        System.out.println(isPalindrome3(head) + \" | \");\n        printLinkedList(head);\n        System.out.println(\"=========================\");\n\n        head = new Node(1);\n        head.next = new Node(1);\n        printLinkedList(head);\n        System.out.print(isPalindrome1(head) + \" | \");\n        System.out.print(isPalindrome2(head) + \" | \");\n        System.out.println(isPalindrome3(head) + \" | \");\n        printLinkedList(head);\n        System.out.println(\"=========================\");\n\n        head = new Node(1);\n        head.next = new Node(2);\n        head.next.next = new Node(3);\n        printLinkedList(head);\n        System.out.print(isPalindrome1(head) + \" | \");\n        System.out.print(isPalindrome2(head) + \" | \");\n        System.out.println(isPalindrome3(head) + \" | \");\n        printLinkedList(head);\n        System.out.println(\"=========================\");\n\n        head = new Node(1);\n        head.next = new Node(2);\n        head.next.next = new Node(1);\n        printLinkedList(head);\n        System.out.print(isPalindrome1(head) + \" | \");\n        System.out.print(isPalindrome2(head) + \" | \");\n        System.out.println(isPalindrome3(head) + \" | \");\n        printLinkedList(head);\n        System.out.println(\"=========================\");\n\n        head = new Node(1);\n        head.next = new Node(2);\n        head.next.next = new Node(3);\n        head.next.next.next = new Node(1);\n        printLinkedList(head);\n        System.out.print(isPalindrome1(head) + \" | \");\n        System.out.print(isPalindrome2(head) + \" | \");\n        System.out.println(isPalindrome3(head) + \" | \");\n        printLinkedList(head);\n        System.out.println(\"=========================\");\n\n        head = new Node(1);\n        head.next = new Node(2);\n        head.next.next = new Node(2);\n        head.next.next.next = new Node(1);\n        printLinkedList(head);\n        System.out.print(isPalindrome1(head) + \" | \");\n        System.out.print(isPalindrome2(head) + \" | \");\n        System.out.println(isPalindrome3(head) + \" | \");\n        printLinkedList(head);\n        System.out.println(\"=========================\");\n\n        head = new Node(1);\n        head.next = new Node(2);\n        head.next.next = new Node(3);\n        head.next.next.next = new Node(2);\n        head.next.next.next.next = new Node(1);\n        printLinkedList(head);\n        System.out.print(isPalindrome1(head) + \" | \");\n        System.out.print(isPalindrome2(head) + \" | \");\n        System.out.println(isPalindrome3(head) + \" | \");\n        printLinkedList(head);\n        System.out.println(\"=========================\");\n\n    }\n\n}\n\n"},"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html":{"url":"leetcode/20190309 - LeetCode 240. Search a 2D Matrix II.html","title":"LeetCode 240. Search a 2D Matrix II","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        if(matrix.length == 0){\n            return false;\n        }\n\n        int row = 0;\n        int column = matrix[0].length-1;\n\n        while(row=0){\n            if(target == matrix[row][column]){\n                return true;\n            }\n            else if(target > matrix[row][column]){\n                row++;\n            }\n            else{\n                column--;\n            }\n        }\n\n        return false;\n    }\n}\n\n"},"leetcode/20190308 - LeetCode 242. Valid Anagram.html":{"url":"leetcode/20190308 - LeetCode 242. Valid Anagram.html","title":"LeetCode 242. Valid Anagram","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public boolean isAnagram(String s, String t) {\n        if(s.length() != t.length()) return false;\n\n        int[] arr = new int[128];\n        for(char c : s.toCharArray()){\n            arr[c]++;\n        }\n\n        for(char c: t.toCharArray()){\n            arr[c]--;\n            if(arr[c]\n思路\n这个解法只适合于 ASCII 字符集的字符串处理。不适合处理 Unicode 字符集的字符串。题目中额外提示了可以考虑算法是否适用于 Unicode 字符集。但是 LeetCode 的测试用例只有 ASCII 字符集的字符串，所以这个算法也可以通过。\n解答2[Java] ：\nclass Solution {\n    public boolean isAnagram(String s, String t) {\n        if (s.length() != t.length()) {\n            return false;\n        }\n        char[] str1 = s.toCharArray();\n        char[] str2 = t.toCharArray();\n        Arrays.sort(str1);\n        Arrays.sort(str2);\n        return Arrays.equals(str1, str2);\n    }\n}\n\n思路\n先排序，再对比。这个方式也适用于 Unicode 字符集。\n参考资料\n\njava – 在String中遍历所有字符的最快方法\n\n"},"leetcode/20190304 - LeetCode 283. Move Zeros.html":{"url":"leetcode/20190304 - LeetCode 283. Move Zeros.html","title":"LeetCode 283. Move Zeros","keywords":"","body":"\n解答1[Java]：\nimport java.util.ArrayList;\nclass Solution {\n    public void moveZeroes(int[] nums) {\n        ArrayList nonZeroElements = new ArrayList<>();\n\n        for (int i = 0; i \n复杂度分析\n时间复杂度：O(n)O(n)O(n)\n空间复杂度：O(n)O(n)O(n)\n解答2[Java]：\nclass Solution {\n    public void moveZeroes(int[] nums) {\n        int k = 0;\n        for (int i = 0; i \n第 6 到 10 行有一个判断：\nif (k != i) {\n    nums[k++] = nums[i];\n} else {\n    k++;\n}\n\n这个判断其实可以不要，因为只要遇到第一个 0 元素之后，后边的判断就是多余的了。不如改为直接赋值。加上了判断就一定会判断 n 次，但是如果直接赋值，多余的赋值操作的次数是少于 n 次的，所以开销更小。\n所以 5-11 行可以直接改为：\nif (nums[j] != val) {\n    nums[i] = nums[j];\n    i++;\n}\n\n复杂度分析\n时间复杂度：O(n)O(n)O(n)\n空间复杂度：O(1)O(1)O(1)\n对末尾加零的操作优化\nclass Solution {\n    public void moveZeroes(int[] nums) {\n        int k = 0;\n        for (int i = 0; i \n"},"leetcode/20190308 - LeetCode 290. Word Pattern.html":{"url":"leetcode/20190308 - LeetCode 290. Word Pattern.html","title":"LeetCode 290. Word Pattern","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public boolean wordPattern(String pattern, String str) {\n        String[] words = str.split(\" \");\n        if (words.length != pattern.length())\n            return false;\n        Map index = new HashMap();\n        for (Integer i = 0; i \n思路\n本解法是借助了 Java 的 HashMap 的特性。HashMap 的 put() 操作，如果 key 已经存在，那么就覆盖掉 key 原来的 value，并把原来的 value 当作返回值。\n所以如果两个字符串模式相同，只要按顺序执行 put()，两个字符串执行中的返回值应该相同。\n解答2[Java]：\nclass Solution {\n    public boolean wordPattern(String pattern, String str) {\n        int n = pattern.length();\n        String[] strArr = str.split(\" \");\n        if (strArr.length != n)\n            return false;\n        String[] dict = new String[26];\n        for (int i = 0; i \n思路\n使用字符串数组来进行判断。\n第一遍是确定，如果 pattern 中有相同字母，那么 str 对应位置的字符串是否相同。\n第二遍是确定，如果 pattern 中每个字母都不相同，那么 str 每个位置的字符也不能相同，如果相同，就不符合题意。\n"},"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html":{"url":"leetcode/20190306 - LeetCode 349. Intersection of Two Arrays.html","title":"LeetCode 349. Intersection of Two Arrays","keywords":"","body":"\n解答1[Java]：\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Iterator;\n\nclass Solution {\n    public int[] intersection(int[] nums1, int[] nums2) {\n        HashSet set1 = new HashSet();\n        HashSet set2 = new HashSet();\n        HashSet resultSet = new HashSet();\n        int[] result = new int[nums1.length];\n        int resultIndex = 0;\n\n        for(int num: nums1){\n            set1.add(num);\n        }\n\n        for(int num:nums2){\n            set2.add(num);\n        }\n\n        for (Integer num :set2){\n            if(set1.contains(num)){\n                result[resultIndex++] = num;\n            }\n        }\n\n        return Arrays.copyOf(result, resultIndex);\n\n    }\n}\n\n复杂度分析\n没错，hashSet的contains方法是调用map.containsKey(O)方法的，containsKey(o)是根据hash函数去做散列的，所以与元素的多少无关，无论是多少元素containsKey(o)的时间复杂度基本上O(1)。\nHashSet细节 - 小菜园博客\n解答2[Java]：\nimport java.util.Arrays;\n\nclass Solution {\n    public int[] intersection(int[] nums1, int[] nums2) {\n        int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;\n        for (int num : nums1) {\n            min = Math.min(min, num);\n            max = Math.max(max, num);\n        }\n        boolean[] exist = new boolean[max - min + 1];\n        for (int num : nums1) exist[num - min] = true;\n        int[] result = new int[nums2.length];\n        int index = 0;\n        for (int num : nums2) {\n            if (num = min && exist[num - min]) {\n                result[index++] = num;\n                exist[num - min] = false; //remove from exist array to avoid duplicate\n            }\n        }\n        return Arrays.copyOf(result, index);\n    }\n}\n\n思路\n很巧妙的一个算法，先把一个数组的最大值和最小值圈起来。\n复杂度分析\n空间复杂度：\nresult 数组和 exist 数组为 O(m)O(m)O(m) 或者 O(h)O(h)O(h)。m 和 h 是两个数组的长度。\n时间复杂度：O(n)O(n)O(n)。\n"},"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html":{"url":"leetcode/20190308 - LeetCode 350. Intersection of Two Arrays II.html","title":"LeetCode 350. Intersection of Two Arrays II","keywords":"","body":"\n解答1[Java]：\npublic class Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n        HashMap map = new HashMap();\n        ArrayList result = new ArrayList();\n        for (int i = 0; i  0) {\n                result.add(nums2[i]);\n                map.put(nums2[i], map.get(nums2[i]) - 1);\n            }\n        }\n\n        int[] r = new int[result.size()];\n        for (int i = 0; i \n复杂度分析\nHashMap 的 get() 时间复杂度为 O(1)O(1)O(1)。\n解答2[Java]：\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n        List intersection = new ArrayList<>();\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n        int i=0;\n        int j = 0;\n        while(i  nums2[j]){\n                j++;\n            }else{\n                //nums[i] \n思路\n先对数组进行排序，然后两个数组分别设一个指针，分别比较。\n"},"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html":{"url":"leetcode/20190306 - LeetCode 438. Find All Anagrams in a String.html","title":"LeetCode 438. Find All Anagrams in a String","keywords":"","body":"\n解法1[Java]：\nimport java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List findAnagrams(String s, String p) {\n        List res = new ArrayList<>();\n        if (s == null || p == null || p.length() > s.length()) {\n            return res;\n        }\n\n        int[] map = new int[128];\n        for (char ch : p.toCharArray()) {\n            map[ch]++;\n        }\n\n        int left = 0, right = 0;\n        int len_s = s.length();\n        int len_p = p.length();\n        while (right \n思路\n先设计了一个 map，把 p 中所有的字符在 map 中的值先加1。\n然后设计两个指针，右指针指向哪个字符，就把这个字符在 map 中对应的值减去 1。如果指向的字符不在 p 中，会导致那个字符对应的值小于0，根据这个条件，把左指针一步一步移到和右指针相同的位置，并且在移动的过程中把 map 恢复成最初的数值。这样就相当于从一个新的位置重新开始。\n"},"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html":{"url":"leetcode/20190308 - LeetCode 451. Sort Characters By Frequency.html","title":"LeetCode 451. Sort Characters By Frequency","keywords":"","body":"\n解答1[Java]：\nclass Solution {\n    public String frequencySort(String s) {\n        int[] map = new int[128];\n        for (char c : s.toCharArray()) {\n            map[c]++;\n        }\n        char[] res = new char[s.length()];\n        int pos = 0;\n        while (pos  map[max])\n                    max = c;\n            }\n            int repeat = map[max];\n            for (int i = 0; i \n"},"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html":{"url":"leetcode/20190328 - LeetCode 766. Toeplitz Matrix.html","title":"LeetCode 766. Toeplitz Matrix","keywords":"","body":"托普利兹矩阵。\n\n解答1[Java]：\n核心思想\n使用 (r, c) 表示行号和列号，r-c 相同的元素是在同一条对角线上的，可以看作同一组。使用一个 HashMap 存储每个组的值，然后依次遍历元素，根据 r-c 算出来他所在的组，然后判断其值和其所在组的值是否一致。\n代码\nclass Solution {\n    public boolean isToeplitzMatrix(int[][] matrix) {\n        HashMap groups = new HashMap<>();\n        for (int r = 0; r \n解答2[Java]：\n核心思想\n依次遍历元素，然后判断其值和其坐上方元素的值是都一样，如果不一样，就返回 false，如果遍历顺利完成，返回 true。判断其左上方元素的时候要确保 r > 0 和 c > 0 以保证数组不会越界。\n代码\nclass Solution {\n    public boolean isToeplitzMatrix(int[][] matrix) {\n        for (int r = 0; r  0 && c > 0 && matrix[r - 1][c - 1] != matrix[r][c]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}\n\n"},"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html":{"url":"leetcode/20190114 - LeetCode 905. Sort Array By Parity.html","title":"LeetCode 905. Sort Array By Parity","keywords":"","body":"题目来源：https://leetcode.com/problems/sort-array-by-parity/\nLeetCode官方题解及解析：905. Sort Array By Parity\n题目\nGiven an array A of non-negative integers, return an array consisting of all the even elements of A, followed by all the odd elements of A.\nYou may return any answer array that satisfies this condition.\nExample 1:\nInput: [3,1,2,4]\nOutput: [2,4,3,1]\nThe outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.\nNote:\n\n1 \n0 \n\n\n解答1[Java]：二次筛选\nclass Solution {\n    public int[] sortArrayByParity(int[] A) {\n        int[] result = new int[A.length];\n        int j = 0;\n        for(int i = 0; i \n复杂度分析\n\nTime Complexity: O(N)O(N)O(N), where NNN is the length of A.\nSpace Complexity: O(N)O(N)O(N) for the sort, depending on the built-in implementation of sort. \n\n解答2[Java]：使用Comparator()\nclass Solution {\n    public int[] sortArrayByParity(int[] A) {\n        Integer[] B = new Integer[A.length];\n        for (int t = 0; t  Integer.compare(a%2, b%2));\n\n        for (int t = 0; t  Integer.compare(a%2, b%2))\n                     .mapToInt(i -> i)\n                     .toArray();\n        */\n    }\n}\n\n因为 Comparator 不能对原生类型使用，所以要对原生数组进行装箱，把 Int[] 改为 Integer[]。排序完成之后再转换为原生数组。\n时间复杂度\n\nTime Complexity: O(NlogN)O(NlogN)O(NlogN), where NNN is the length of A.\nSpace Complexity: O(N)O(N)O(N) for the sort, depending on the built-in implementation of sort. \n\n解答3[Java]：使用快排\nclass Solution {\n    public int[] sortArrayByParity(int[] A) {\n        int i = 0, j = A.length - 1;\n        while (i  A[j] % 2) {\n                int tmp = A[i];\n                A[i] = A[j];\n                A[j] = tmp;\n            }\n\n            if (A[i] % 2 == 0) i++;\n            if (A[j] % 2 == 1) j--;\n        }\n\n        return A;\n    }\n}\n\n思路\nWe'll maintain two pointers i and j. The loop invariant is everything below i has parity 0 (ie. A[k] % 2 == 0 when k ), and everything above j has parity 1.\nThen, there are 4 cases for (A[i] % 2, A[j] % 2):\n\nIf it is (0, 1), then everything is correct: i++ and j--.\nIf it is (1, 0), we swap them so they are correct, then continue.\nIf it is (0, 0), only the i place is correct, so we i++ and continue.\nIf it is (1, 1), only the j place is correct, so we j-- and continue.\n\nThroughout all 4 cases, the loop invariant is maintained, and j-i is getting smaller. So eventually we will be done with the array sorted as desired.\n时间复杂度\n\nTime Complexity: O(N)O(N)O(N), where NNN is the length of A. Each step of the while loop makes j-idecrease by at least one. (Note that while quicksort is O(NlogN)O(NlogN)O(NlogN) normally, this is O(N)O(N)O(N) because we only need one pass to sort the elements.)\nSpace Complexity: O(1)O(1)O(1) in additional space complexity. \n\n"}}}